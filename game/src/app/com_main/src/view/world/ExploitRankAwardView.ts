module com_main {


	/**
	 * 战功排行奖励
	 */
    export class ExploitRankAwardView extends CView {
        public static NAME = 'ExploitRankAwardView';
        public m_pRScroller: eui.Scroller;
        public m_pRankList: eui.List;
        public m_SelfItemGroup: eui.Group;
        public m_SelfItem: com_main.ExploitRankAwardCell;
        public m_plbNoAward: com_main.CLabel;



        private m_tCollections: eui.ArrayCollection;
        public constructor(width: number, height: number) {
            super();
            this.name = ExploitRankAwardView.NAME;
            // this.width = width;
            // this.height = height;
            this.initApp("world/ExploitAwardRankViewSkin.exml");
        }


        $onRemoveFromStage(isclear = true): void {
            this.onDestroy();
            super.$onRemoveFromStage(isclear);
        }

        public onDestroy(): void {
            super.onDestroy();
        }

        protected childrenCreated(): void {
            super.childrenCreated();
            Utils.toStageBestScaleHeigt(this);
            this.m_tCollections = new eui.ArrayCollection([]);
            this.m_pRankList.itemRenderer = ExploitRankAwardCell;
            this.m_pRankList.dataProvider = this.m_tCollections;
        }


        /**刷新页面 */
        public Refresh(): void {
            this.Refresh_SelfItem();
            this.Refresh_ItemDatas();
        }
        /**刷新自己的排名数据 */
        private Refresh_SelfItem(): void {
            let [list, ownerPlayer] = RankModel.getNormalData(RankType.MILLTORY);
            this.m_SelfItem.visible = ownerPlayer != null;
            // this.m_pRScroller.bottom = 132;
            if (this.m_SelfItem.visible) {
                this.m_SelfItem.data = ownerPlayer;
            }
        }
        /**刷新排行榜列表数据 */
        private Refresh_ItemDatas(): void {
            let [list, ownerPlayer] = RankModel.getNormalData(RankType.MILLTORY);
            let awardRankList = [];
            for (let i = 0; i < list.length; i++) {
                awardRankList.push(list[i]);
            }
            this.m_tCollections.replaceAll(awardRankList);
        }



        protected listenerProtoNotifications(): any[] {
            return [

            ];
        }
        /**处理协议号事件 */
        protected executes(notification: AGame.INotification) {
            let body = notification.getBody();
            let protocol: number = Number(notification.getName());
            switch (protocol) {
            }
        }

    }
}