type Long=protobuf.Long;

/** Namespace gameProto. */
declare namespace gameProto {

    /** Properties of a SysKeyValue. */
    interface ISysKeyValue {

        /** SysKeyValue key */
        key: number;

        /** SysKeyValue value */
        value: number;

        /** SysKeyValue isFloat */
        isFloat?: (number|null);
    }

    /** Represents a SysKeyValue. */
    class SysKeyValue implements ISysKeyValue {

        /**
         * Constructs a new SysKeyValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISysKeyValue);

        /** SysKeyValue key. */
        public key: number;

        /** SysKeyValue value. */
        public value: number;

        /** SysKeyValue isFloat. */
        public isFloat: number;

        /**
         * Encodes the specified SysKeyValue message. Does not implicitly {@link gameProto.SysKeyValue.verify|verify} messages.
         * @param message SysKeyValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISysKeyValue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SysKeyValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SysKeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SysKeyValue;
    }

    /** Properties of a PointInfo. */
    interface IPointInfo {

        /** PointInfo x */
        x: number;

        /** PointInfo y */
        y: number;
    }

    /** Represents a PointInfo. */
    class PointInfo implements IPointInfo {

        /**
         * Constructs a new PointInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPointInfo);

        /** PointInfo x. */
        public x: number;

        /** PointInfo y. */
        public y: number;

        /**
         * Encodes the specified PointInfo message. Does not implicitly {@link gameProto.PointInfo.verify|verify} messages.
         * @param message PointInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPointInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PointInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PointInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PointInfo;
    }

    /** Properties of a ValuesMessage. */
    interface IValuesMessage {

        /** ValuesMessage baseType */
        baseType: number;

        /** ValuesMessage itemId */
        itemId: number;

        /** ValuesMessage count */
        count: number;

        /** ValuesMessage operate */
        operate?: (number|null);

        /** ValuesMessage position */
        position?: (number|null);

        /** ValuesMessage uuid */
        uuid?: (number|null);

        /** ValuesMessage level */
        level?: (number|null);
    }

    /** Represents a ValuesMessage. */
    class ValuesMessage implements IValuesMessage {

        /**
         * Constructs a new ValuesMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IValuesMessage);

        /** ValuesMessage baseType. */
        public baseType: number;

        /** ValuesMessage itemId. */
        public itemId: number;

        /** ValuesMessage count. */
        public count: number;

        /** ValuesMessage operate. */
        public operate: number;

        /** ValuesMessage position. */
        public position: number;

        /** ValuesMessage uuid. */
        public uuid: number;

        /** ValuesMessage level. */
        public level: number;

        /**
         * Encodes the specified ValuesMessage message. Does not implicitly {@link gameProto.ValuesMessage.verify|verify} messages.
         * @param message ValuesMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IValuesMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ValuesMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValuesMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ValuesMessage;
    }

    /** Properties of a NoticeInfo. */
    interface INoticeInfo {

        /** NoticeInfo id */
        id: number;

        /** NoticeInfo param */
        param?: (string[]|null);
    }

    /** Represents a NoticeInfo. */
    class NoticeInfo implements INoticeInfo {

        /**
         * Constructs a new NoticeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoticeInfo);

        /** NoticeInfo id. */
        public id: number;

        /** NoticeInfo param. */
        public param: string[];

        /**
         * Encodes the specified NoticeInfo message. Does not implicitly {@link gameProto.NoticeInfo.verify|verify} messages.
         * @param message NoticeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoticeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoticeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoticeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoticeInfo;
    }

    /** Properties of a PlayerBriefInfo. */
    interface IPlayerBriefInfo {

        /** PlayerBriefInfo playerId */
        playerId?: (number|null);

        /** PlayerBriefInfo head */
        head?: (number|null);

        /** PlayerBriefInfo name */
        name?: (string|null);

        /** PlayerBriefInfo countryId */
        countryId?: (number|null);

        /** PlayerBriefInfo level */
        level?: (number|null);

        /** PlayerBriefInfo governmentPost */
        governmentPost?: (number|null);

        /** PlayerBriefInfo vipLevel */
        vipLevel?: (number|null);

        /** PlayerBriefInfo guildId */
        guildId?: (number|null);
    }

    /** Represents a PlayerBriefInfo. */
    class PlayerBriefInfo implements IPlayerBriefInfo {

        /**
         * Constructs a new PlayerBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerBriefInfo);

        /** PlayerBriefInfo playerId. */
        public playerId: number;

        /** PlayerBriefInfo head. */
        public head: number;

        /** PlayerBriefInfo name. */
        public name: string;

        /** PlayerBriefInfo countryId. */
        public countryId: number;

        /** PlayerBriefInfo level. */
        public level: number;

        /** PlayerBriefInfo governmentPost. */
        public governmentPost: number;

        /** PlayerBriefInfo vipLevel. */
        public vipLevel: number;

        /** PlayerBriefInfo guildId. */
        public guildId: number;

        /**
         * Encodes the specified PlayerBriefInfo message. Does not implicitly {@link gameProto.PlayerBriefInfo.verify|verify} messages.
         * @param message PlayerBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerBriefInfo;
    }

    /** Properties of an Attribute. */
    interface IAttribute {

        /** Attribute addType */
        addType?: (number|null);

        /** Attribute atk */
        atk?: (number|null);

        /** Attribute def */
        def?: (number|null);

        /** Attribute hp */
        hp?: (number|null);

        /** Attribute crit */
        crit?: (number|null);

        /** Attribute dodge */
        dodge?: (number|null);

        /** Attribute atkRate */
        atkRate?: (number|null);

        /** Attribute defRate */
        defRate?: (number|null);

        /** Attribute hpRate */
        hpRate?: (number|null);
    }

    /** Represents an Attribute. */
    class Attribute implements IAttribute {

        /**
         * Constructs a new Attribute.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAttribute);

        /** Attribute addType. */
        public addType: number;

        /** Attribute atk. */
        public atk: number;

        /** Attribute def. */
        public def: number;

        /** Attribute hp. */
        public hp: number;

        /** Attribute crit. */
        public crit: number;

        /** Attribute dodge. */
        public dodge: number;

        /** Attribute atkRate. */
        public atkRate: number;

        /** Attribute defRate. */
        public defRate: number;

        /** Attribute hpRate. */
        public hpRate: number;

        /**
         * Encodes the specified Attribute message. Does not implicitly {@link gameProto.Attribute.verify|verify} messages.
         * @param message Attribute message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAttribute, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an Attribute message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Attribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Attribute;
    }

    /** Properties of a HeadPortrait. */
    interface IHeadPortrait {

        /** HeadPortrait playerId */
        playerId: number;

        /** HeadPortrait type */
        type: number;

        /** HeadPortrait url */
        url: string;

        /** HeadPortrait playerName */
        playerName: string;

        /** HeadPortrait countryId */
        countryId: number;

        /** HeadPortrait vip */
        vip?: (number|null);

        /** HeadPortrait official */
        official?: (number|null);

        /** HeadPortrait labourUnionId */
        labourUnionId?: (number|null);

        /** HeadPortrait labourUnionName */
        labourUnionName?: (string|null);
    }

    /** Represents a HeadPortrait. */
    class HeadPortrait implements IHeadPortrait {

        /**
         * Constructs a new HeadPortrait.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHeadPortrait);

        /** HeadPortrait playerId. */
        public playerId: number;

        /** HeadPortrait type. */
        public type: number;

        /** HeadPortrait url. */
        public url: string;

        /** HeadPortrait playerName. */
        public playerName: string;

        /** HeadPortrait countryId. */
        public countryId: number;

        /** HeadPortrait vip. */
        public vip: number;

        /** HeadPortrait official. */
        public official: number;

        /** HeadPortrait labourUnionId. */
        public labourUnionId: number;

        /** HeadPortrait labourUnionName. */
        public labourUnionName: string;

        /**
         * Encodes the specified HeadPortrait message. Does not implicitly {@link gameProto.HeadPortrait.verify|verify} messages.
         * @param message HeadPortrait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHeadPortrait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HeadPortrait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeadPortrait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HeadPortrait;
    }

    /** Properties of a NoticePushResp. */
    interface INoticePushResp {

        /** NoticePushResp notice */
        notice?: (gameProto.INoticeInfo[]|null);
    }

    /** Represents a NoticePushResp. */
    class NoticePushResp implements INoticePushResp {

        /**
         * Constructs a new NoticePushResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoticePushResp);

        /** NoticePushResp notice. */
        public notice: gameProto.INoticeInfo[];

        /**
         * Encodes the specified NoticePushResp message. Does not implicitly {@link gameProto.NoticePushResp.verify|verify} messages.
         * @param message NoticePushResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoticePushResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoticePushResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoticePushResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoticePushResp;
    }

    /** Properties of a ValuesMessageSet. */
    interface IValuesMessageSet {

        /** ValuesMessageSet cmd */
        cmd?: (number|null);

        /** ValuesMessageSet consumes */
        consumes?: (string|null);

        /** ValuesMessageSet consumeMessage */
        consumeMessage?: (gameProto.IValuesMessage[]|null);

        /** ValuesMessageSet rewards */
        rewards?: (string|null);

        /** ValuesMessageSet rewardMessage */
        rewardMessage?: (gameProto.IValuesMessage[]|null);

        /** ValuesMessageSet isReport */
        isReport?: (boolean|null);
    }

    /** Represents a ValuesMessageSet. */
    class ValuesMessageSet implements IValuesMessageSet {

        /**
         * Constructs a new ValuesMessageSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IValuesMessageSet);

        /** ValuesMessageSet cmd. */
        public cmd: number;

        /** ValuesMessageSet consumes. */
        public consumes: string;

        /** ValuesMessageSet consumeMessage. */
        public consumeMessage: gameProto.IValuesMessage[];

        /** ValuesMessageSet rewards. */
        public rewards: string;

        /** ValuesMessageSet rewardMessage. */
        public rewardMessage: gameProto.IValuesMessage[];

        /** ValuesMessageSet isReport. */
        public isReport: boolean;

        /**
         * Encodes the specified ValuesMessageSet message. Does not implicitly {@link gameProto.ValuesMessageSet.verify|verify} messages.
         * @param message ValuesMessageSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IValuesMessageSet, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ValuesMessageSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValuesMessageSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ValuesMessageSet;
    }

    /** Properties of a C2S_FUNCTION_INFO. */
    interface IC2S_FUNCTION_INFO {
    }

    /** Represents a C2S_FUNCTION_INFO. */
    class C2S_FUNCTION_INFO implements IC2S_FUNCTION_INFO {

        /**
         * Constructs a new C2S_FUNCTION_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_FUNCTION_INFO);

        /**
         * Encodes the specified C2S_FUNCTION_INFO message. Does not implicitly {@link gameProto.C2S_FUNCTION_INFO.verify|verify} messages.
         * @param message C2S_FUNCTION_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_FUNCTION_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_FUNCTION_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_FUNCTION_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_FUNCTION_INFO;
    }

    /** Properties of a S2C_FUNCTION_INFO. */
    interface IS2C_FUNCTION_INFO {

        /** S2C_FUNCTION_INFO funtionIds */
        funtionIds?: (number[]|null);
    }

    /** Represents a S2C_FUNCTION_INFO. */
    class S2C_FUNCTION_INFO implements IS2C_FUNCTION_INFO {

        /**
         * Constructs a new S2C_FUNCTION_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_FUNCTION_INFO);

        /** S2C_FUNCTION_INFO funtionIds. */
        public funtionIds: number[];

        /**
         * Encodes the specified S2C_FUNCTION_INFO message. Does not implicitly {@link gameProto.S2C_FUNCTION_INFO.verify|verify} messages.
         * @param message S2C_FUNCTION_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_FUNCTION_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_FUNCTION_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_FUNCTION_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_FUNCTION_INFO;
    }

    /** GeneralSkillEnum enum. */
    enum GeneralSkillEnum {
        NORMAL_SKILL = 0,
        BORN_SKILL = 1,
        LEVEL_SKILL = 2,
        CHOSEN_SKILL = 3,
        PARTICULAR_SKILL = 4
    }

    /** Properties of a CityInfo. */
    interface ICityInfo {

        /** CityInfo id */
        id: number;

        /** CityInfo country */
        country: number;

        /** CityInfo playerGarrisonCount */
        playerGarrisonCount: number;

        /** CityInfo npcGarrisonCount */
        npcGarrisonCount: number;

        /** CityInfo npcLv */
        npcLv: number;

        /** CityInfo status */
        status: number;

        /** CityInfo prefect */
        prefect: string;

        /** CityInfo atkCountry */
        atkCountry: number;

        /** CityInfo raidCountry */
        raidCountry?: (number[]|null);

        /** CityInfo hasBeenOccupied */
        hasBeenOccupied?: (boolean|null);

        /** CityInfo unlockTaskId */
        unlockTaskId?: (number|null);

        /** CityInfo locked */
        locked?: (boolean|null);

        /** CityInfo warStartTime */
        warStartTime?: (number|null);
    }

    /** Represents a CityInfo. */
    class CityInfo implements ICityInfo {

        /**
         * Constructs a new CityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityInfo);

        /** CityInfo id. */
        public id: number;

        /** CityInfo country. */
        public country: number;

        /** CityInfo playerGarrisonCount. */
        public playerGarrisonCount: number;

        /** CityInfo npcGarrisonCount. */
        public npcGarrisonCount: number;

        /** CityInfo npcLv. */
        public npcLv: number;

        /** CityInfo status. */
        public status: number;

        /** CityInfo prefect. */
        public prefect: string;

        /** CityInfo atkCountry. */
        public atkCountry: number;

        /** CityInfo raidCountry. */
        public raidCountry: number[];

        /** CityInfo hasBeenOccupied. */
        public hasBeenOccupied: boolean;

        /** CityInfo unlockTaskId. */
        public unlockTaskId: number;

        /** CityInfo locked. */
        public locked: boolean;

        /** CityInfo warStartTime. */
        public warStartTime: number;

        /**
         * Encodes the specified CityInfo message. Does not implicitly {@link gameProto.CityInfo.verify|verify} messages.
         * @param message CityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityInfo;
    }

    /** Properties of an EventInfo. */
    interface IEventInfo {

        /** EventInfo index */
        index: number;

        /** EventInfo id */
        id?: (number|null);
    }

    /** Represents an EventInfo. */
    class EventInfo implements IEventInfo {

        /**
         * Constructs a new EventInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEventInfo);

        /** EventInfo index. */
        public index: number;

        /** EventInfo id. */
        public id: number;

        /**
         * Encodes the specified EventInfo message. Does not implicitly {@link gameProto.EventInfo.verify|verify} messages.
         * @param message EventInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEventInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EventInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EventInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.EventInfo;
    }

    /** Properties of an AttributeValue. */
    interface IAttributeValue {

        /** AttributeValue key */
        key: number;

        /** AttributeValue value */
        value: number;
    }

    /** Represents an AttributeValue. */
    class AttributeValue implements IAttributeValue {

        /**
         * Constructs a new AttributeValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAttributeValue);

        /** AttributeValue key. */
        public key: number;

        /** AttributeValue value. */
        public value: number;

        /**
         * Encodes the specified AttributeValue message. Does not implicitly {@link gameProto.AttributeValue.verify|verify} messages.
         * @param message AttributeValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAttributeValue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AttributeValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AttributeValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AttributeValue;
    }

    /** Properties of a GeneralWinInfo. */
    interface IGeneralWinInfo {

        /** GeneralWinInfo generalId */
        generalId: number;

        /** GeneralWinInfo level */
        level: number;

        /** GeneralWinInfo star */
        star: number;

        /** GeneralWinInfo fight */
        fight: number;

        /** GeneralWinInfo quality */
        quality?: (number|null);
    }

    /** Represents a GeneralWinInfo. */
    class GeneralWinInfo implements IGeneralWinInfo {

        /**
         * Constructs a new GeneralWinInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralWinInfo);

        /** GeneralWinInfo generalId. */
        public generalId: number;

        /** GeneralWinInfo level. */
        public level: number;

        /** GeneralWinInfo star. */
        public star: number;

        /** GeneralWinInfo fight. */
        public fight: number;

        /** GeneralWinInfo quality. */
        public quality: number;

        /**
         * Encodes the specified GeneralWinInfo message. Does not implicitly {@link gameProto.GeneralWinInfo.verify|verify} messages.
         * @param message GeneralWinInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralWinInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralWinInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralWinInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralWinInfo;
    }

    /** Properties of a C2S_GUIDE_RECORD. */
    interface IC2S_GUIDE_RECORD {
    }

    /** Represents a C2S_GUIDE_RECORD. */
    class C2S_GUIDE_RECORD implements IC2S_GUIDE_RECORD {

        /**
         * Constructs a new C2S_GUIDE_RECORD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GUIDE_RECORD);

        /**
         * Encodes the specified C2S_GUIDE_RECORD message. Does not implicitly {@link gameProto.C2S_GUIDE_RECORD.verify|verify} messages.
         * @param message C2S_GUIDE_RECORD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GUIDE_RECORD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GUIDE_RECORD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GUIDE_RECORD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GUIDE_RECORD;
    }

    /** Properties of a S2C_GUIDE_RECORD. */
    interface IS2C_GUIDE_RECORD {

        /** S2C_GUIDE_RECORD records */
        records?: (number[]|null);
    }

    /** Represents a S2C_GUIDE_RECORD. */
    class S2C_GUIDE_RECORD implements IS2C_GUIDE_RECORD {

        /**
         * Constructs a new S2C_GUIDE_RECORD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GUIDE_RECORD);

        /** S2C_GUIDE_RECORD records. */
        public records: number[];

        /**
         * Encodes the specified S2C_GUIDE_RECORD message. Does not implicitly {@link gameProto.S2C_GUIDE_RECORD.verify|verify} messages.
         * @param message S2C_GUIDE_RECORD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GUIDE_RECORD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GUIDE_RECORD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GUIDE_RECORD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GUIDE_RECORD;
    }

    /** Properties of a C2S_GUIDE_COMMIT. */
    interface IC2S_GUIDE_COMMIT {

        /** C2S_GUIDE_COMMIT id */
        id: number;
    }

    /** Represents a C2S_GUIDE_COMMIT. */
    class C2S_GUIDE_COMMIT implements IC2S_GUIDE_COMMIT {

        /**
         * Constructs a new C2S_GUIDE_COMMIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GUIDE_COMMIT);

        /** C2S_GUIDE_COMMIT id. */
        public id: number;

        /**
         * Encodes the specified C2S_GUIDE_COMMIT message. Does not implicitly {@link gameProto.C2S_GUIDE_COMMIT.verify|verify} messages.
         * @param message C2S_GUIDE_COMMIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GUIDE_COMMIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GUIDE_COMMIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GUIDE_COMMIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GUIDE_COMMIT;
    }

    /** Properties of a S2C_NUMBER_VALUES. */
    interface IS2C_NUMBER_VALUES {

        /** S2C_NUMBER_VALUES cmd */
        cmd: number;

        /** S2C_NUMBER_VALUES valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_NUMBER_VALUES. */
    class S2C_NUMBER_VALUES implements IS2C_NUMBER_VALUES {

        /**
         * Constructs a new S2C_NUMBER_VALUES.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_NUMBER_VALUES);

        /** S2C_NUMBER_VALUES cmd. */
        public cmd: number;

        /** S2C_NUMBER_VALUES valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_NUMBER_VALUES message. Does not implicitly {@link gameProto.S2C_NUMBER_VALUES.verify|verify} messages.
         * @param message S2C_NUMBER_VALUES message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_NUMBER_VALUES, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_NUMBER_VALUES message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_NUMBER_VALUES
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_NUMBER_VALUES;
    }

    /** Properties of a S2C_CROSS_DAY. */
    interface IS2C_CROSS_DAY {

        /** S2C_CROSS_DAY serverTime */
        serverTime: number;
    }

    /** Represents a S2C_CROSS_DAY. */
    class S2C_CROSS_DAY implements IS2C_CROSS_DAY {

        /**
         * Constructs a new S2C_CROSS_DAY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_DAY);

        /** S2C_CROSS_DAY serverTime. */
        public serverTime: number;

        /**
         * Encodes the specified S2C_CROSS_DAY message. Does not implicitly {@link gameProto.S2C_CROSS_DAY.verify|verify} messages.
         * @param message S2C_CROSS_DAY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_DAY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_DAY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_DAY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_DAY;
    }

    /** Properties of a Tuple. */
    interface ITuple {

        /** Tuple key */
        key: number;

        /** Tuple value */
        value: number;
    }

    /** Represents a Tuple. */
    class Tuple implements ITuple {

        /**
         * Constructs a new Tuple.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITuple);

        /** Tuple key. */
        public key: number;

        /** Tuple value. */
        public value: number;

        /**
         * Encodes the specified Tuple message. Does not implicitly {@link gameProto.Tuple.verify|verify} messages.
         * @param message Tuple message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITuple, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Tuple message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Tuple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Tuple;
    }

    /** Properties of a RechargeConfig. */
    interface IRechargeConfig {

        /** RechargeConfig id */
        id: number;

        /** RechargeConfig shopId */
        shopId: number;

        /** RechargeConfig price */
        price: number;

        /** RechargeConfig reward */
        reward?: (gameProto.ITuple[]|null);

        /** RechargeConfig firstRecharge */
        firstRecharge: number;

        /** RechargeConfig vipExp */
        vipExp: number;

        /** RechargeConfig name */
        name: string;

        /** RechargeConfig description */
        description: string;

        /** RechargeConfig count */
        count: number;

        /** RechargeConfig shopType */
        shopType: number;
    }

    /** Represents a RechargeConfig. */
    class RechargeConfig implements IRechargeConfig {

        /**
         * Constructs a new RechargeConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRechargeConfig);

        /** RechargeConfig id. */
        public id: number;

        /** RechargeConfig shopId. */
        public shopId: number;

        /** RechargeConfig price. */
        public price: number;

        /** RechargeConfig reward. */
        public reward: gameProto.ITuple[];

        /** RechargeConfig firstRecharge. */
        public firstRecharge: number;

        /** RechargeConfig vipExp. */
        public vipExp: number;

        /** RechargeConfig name. */
        public name: string;

        /** RechargeConfig description. */
        public description: string;

        /** RechargeConfig count. */
        public count: number;

        /** RechargeConfig shopType. */
        public shopType: number;

        /**
         * Encodes the specified RechargeConfig message. Does not implicitly {@link gameProto.RechargeConfig.verify|verify} messages.
         * @param message RechargeConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRechargeConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RechargeConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RechargeConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RechargeConfig;
    }

    /** Properties of a MerchantInfo. */
    interface IMerchantInfo {

        /** MerchantInfo storeId */
        storeId: number;

        /** MerchantInfo autoRefresh */
        autoRefresh?: (gameProto.ITuple[]|null);

        /** MerchantInfo handRefresh */
        handRefresh: boolean;

        /** MerchantInfo refreshAmount */
        refreshAmount: number;

        /** MerchantInfo coumses */
        coumses: gameProto.ITuple;

        /** MerchantInfo refreshNum */
        refreshNum: number;

        /** MerchantInfo goods */
        goods?: (gameProto.IGoodsInfo[]|null);

        /** MerchantInfo freeRefreshNum */
        freeRefreshNum: number;
    }

    /** Represents a MerchantInfo. */
    class MerchantInfo implements IMerchantInfo {

        /**
         * Constructs a new MerchantInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMerchantInfo);

        /** MerchantInfo storeId. */
        public storeId: number;

        /** MerchantInfo autoRefresh. */
        public autoRefresh: gameProto.ITuple[];

        /** MerchantInfo handRefresh. */
        public handRefresh: boolean;

        /** MerchantInfo refreshAmount. */
        public refreshAmount: number;

        /** MerchantInfo coumses. */
        public coumses: gameProto.ITuple;

        /** MerchantInfo refreshNum. */
        public refreshNum: number;

        /** MerchantInfo goods. */
        public goods: gameProto.IGoodsInfo[];

        /** MerchantInfo freeRefreshNum. */
        public freeRefreshNum: number;

        /**
         * Encodes the specified MerchantInfo message. Does not implicitly {@link gameProto.MerchantInfo.verify|verify} messages.
         * @param message MerchantInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMerchantInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MerchantInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MerchantInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MerchantInfo;
    }

    /** Properties of a GoodsInfo. */
    interface IGoodsInfo {

        /** GoodsInfo id */
        id: number;

        /** GoodsInfo itemId */
        itemId: number;

        /** GoodsInfo coumses */
        coumses: gameProto.ITuple;

        /** GoodsInfo stock */
        stock: number;

        /** GoodsInfo stockMax */
        stockMax: number;

        /** GoodsInfo vipLevel */
        vipLevel: number;

        /** GoodsInfo discount */
        discount: number;

        /** GoodsInfo ondGroupCount */
        ondGroupCount?: (number|null);
    }

    /** Represents a GoodsInfo. */
    class GoodsInfo implements IGoodsInfo {

        /**
         * Constructs a new GoodsInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGoodsInfo);

        /** GoodsInfo id. */
        public id: number;

        /** GoodsInfo itemId. */
        public itemId: number;

        /** GoodsInfo coumses. */
        public coumses: gameProto.ITuple;

        /** GoodsInfo stock. */
        public stock: number;

        /** GoodsInfo stockMax. */
        public stockMax: number;

        /** GoodsInfo vipLevel. */
        public vipLevel: number;

        /** GoodsInfo discount. */
        public discount: number;

        /** GoodsInfo ondGroupCount. */
        public ondGroupCount: number;

        /**
         * Encodes the specified GoodsInfo message. Does not implicitly {@link gameProto.GoodsInfo.verify|verify} messages.
         * @param message GoodsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGoodsInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GoodsInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GoodsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GoodsInfo;
    }

    /** Properties of a PlayerWarData. */
    interface IPlayerWarData {

        /** PlayerWarData countryId */
        countryId: number;

        /** PlayerWarData playerId */
        playerId: number;

        /** PlayerWarData userName */
        userName: string;

        /** PlayerWarData generalId */
        generalId: number;

        /** PlayerWarData teamId */
        teamId: number;

        /** PlayerWarData teamForce */
        teamForce: number;

        /** PlayerWarData teamGeneral */
        teamGeneral: number;

        /** PlayerWarData battleId */
        battleId: number;

        /** PlayerWarData isNpc */
        isNpc: boolean;
    }

    /** Represents a PlayerWarData. */
    class PlayerWarData implements IPlayerWarData {

        /**
         * Constructs a new PlayerWarData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerWarData);

        /** PlayerWarData countryId. */
        public countryId: number;

        /** PlayerWarData playerId. */
        public playerId: number;

        /** PlayerWarData userName. */
        public userName: string;

        /** PlayerWarData generalId. */
        public generalId: number;

        /** PlayerWarData teamId. */
        public teamId: number;

        /** PlayerWarData teamForce. */
        public teamForce: number;

        /** PlayerWarData teamGeneral. */
        public teamGeneral: number;

        /** PlayerWarData battleId. */
        public battleId: number;

        /** PlayerWarData isNpc. */
        public isNpc: boolean;

        /**
         * Encodes the specified PlayerWarData message. Does not implicitly {@link gameProto.PlayerWarData.verify|verify} messages.
         * @param message PlayerWarData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerWarData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerWarData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerWarData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerWarData;
    }

    /** Properties of a CountryOverData. */
    interface ICountryOverData {

        /** CountryOverData surplusHero */
        surplusHero: number;

        /** CountryOverData lossHero */
        lossHero: number;

        /** CountryOverData countryId */
        countryId: number;
    }

    /** Represents a CountryOverData. */
    class CountryOverData implements ICountryOverData {

        /**
         * Constructs a new CountryOverData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryOverData);

        /** CountryOverData surplusHero. */
        public surplusHero: number;

        /** CountryOverData lossHero. */
        public lossHero: number;

        /** CountryOverData countryId. */
        public countryId: number;

        /**
         * Encodes the specified CountryOverData message. Does not implicitly {@link gameProto.CountryOverData.verify|verify} messages.
         * @param message CountryOverData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryOverData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryOverData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryOverData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryOverData;
    }

    /** MessageID enum. */
    enum MessageID {
        C2S_SYS_HEARTBEAT = 1,
        S2C_SYS_HEARTBEAT = 2,
        C2S_PLAYER_LOGIN_ACT = 3,
        S2C_PLAYER_LOGIN_ACT = 7,
        C2S_PLAYER_RECOMMEND_COUNTRY = 4,
        C2S_PLAYER_RANDOM_NAME = 5,
        C2S_PLAYER_CREATE = 6,
        ERROR_CODE = 10,
        C2S_SYS_FUNCOUNT = 11,
        S2C_SYS_FUNCOUNT = 12,
        NOTICE_PUSH = 20,
        PUSH_VALUES_MESSAGE = 30,
        S2C_NUMBER_VALUES = 31,
        C2S_FUNCTION_INFO = 40,
        S2C_FUNCTION_INFO = 41,
        C2S_SYS_GENERAL_WIN_INFO = 50,
        S2C_SYS_GENERAL_WIN_INFO = 51,
        S2C_SYS_GENERAL_ATTRIBUTES_NOTICE = 52,
        C2S_GM_REENTRY_BATTLE = 61,
        S2C_GM_REENTRY_BATTLE = 62,
        C2S_GM_WAR = 63,
        S2C_GM_WAR = 64,
        S2C_GM_WAR_OVER = 65,
        S2C_PLAYER_CREATE_NOTICE = 101,
        S2C_PLAYER_RECOMMEND_COUNTRY = 102,
        S2C_PLAYER_RANDOM_NAME = 103,
        S2C_PLAYER_LOGIN_DATA = 106,
        C2S_DATAINIT_START = 107,
        C2S_DATAINIT_END = 108,
        S2C_DATAINIT_END = 109,
        PUSH_LOGIN_GIFT = 131,
        RECEIVE_LOGIN_GIFT = 132,
        PUSH_FATIGUE_INFO = 141,
        PUSH_REMOTE_LOGIN = 142,
        PUSH_FORBID_LOGIN = 143,
        PLAYER_BATTLE_LIST = 151,
        C2S_PLAYER_INTEGRATED_INFORMATION = 161,
        S2C_PLAYER_INTEGRATED_INFORMATION = 162,
        C2S_PLAYER_RESET_NICKNAME = 163,
        S2C_PLAYER_RESET_NICKNAME = 164,
        C2S_PLAYER_SETTING = 165,
        S2C_PLAYER_SETTING = 166,
        GIFT_EXCHANGE = 201,
        RECEIVE_AWARD = 202,
        S2C_WAR_BATTLE_INIT = 501,
        S2C_WAR_COMBAT_UNIT = 502,
        S2C_WAR_DEATH = 503,
        S2C_WAR_FOLLOW_UP = 504,
        S2C_WAR_MOVE_SYNC = 505,
        S2C_WAR_SYNC_MOVE_SPEED = 506,
        S2C_WAR_BUFF_ADD = 507,
        S2C_WAR_BUFF_UN = 508,
        S2C_WAR_BUFF_OFFSET = 509,
        S2C_WAR_BUFF_BLOOD = 510,
        S2C_WAR_ELEMENT_BLOOD = 511,
        S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD = 512,
        S2C_WAR_GUIDE = 513,
        S2C_WAR_SKILL_FAIL = 516,
        S2C_WAR_PROMPT_QUEUE_INIT = 517,
        S2C_WAR_PROMPT_QUEUE_PAGE = 518,
        S2C_WAR_PROMPT_QUEUE_ADD = 519,
        S2C_WAR_PROMPT_QUEUE_DEL = 520,
        S2C_WAR_PROMPT_LOWER_QUEUE_ADD = 521,
        S2C_WAR_COUNTRY_OVER = 522,
        S2C_WAR_KILL_SOLDIERS_COUNT = 523,
        S2C_WAR_OVER = 524,
        S2C_WAR_OVER_HP = 525,
        C2S_WARPROXY_CREATE_BATTLEFIELD = 530,
        S2C_WARPROXY_CREATE_BATTLEFIELD = 531,
        C2S_WARPROXY_GLOBAL_ATTRIBUTE = 532,
        S2C_WARPROXY_GLOBAL_ATTRIBUTE = 533,
        C2S_WARPROXY_ADD_CORPS = 534,
        S2C_WARPROXY_ADD_CORPS = 535,
        C2S_WARPROXY_INIT_BATTLEFIELD = 536,
        S2C_WARPROXY_INIT_BATTLEFIELD = 537,
        C2S_WARPROXY_REENTRY_BATTLE = 538,
        S2C_WARPROXY_REENTRY_BATTLE = 539,
        C2S_WARPROXY_QUIT_BATTLE = 540,
        S2C_WARPROXY_QUIT_BATTLE = 541,
        C2S_WARPROXY_ANGER_SKILL = 542,
        S2C_WARPROXY_OVER = 543,
        S2C_WARPROXY_CONTINUE_WAR = 544,
        S2C_WARPROXY_ROUND_OVER = 545,
        S2C_WARPROXY_SOLDIER_BLOOD_NOTICE = 546,
        S2C_WARPROXY_HERO_DEATH_NOTICE = 547,
        C2S_WARPROXY_DOWN_NOTICE = 548,
        C2S_WARPROXY_PROMPT_QUEUE_PAGE = 549,
        C2S_WARPROXY_EVACUATE = 550,
        S2C_WARPROXY_EVACUATE = 551,
        C2S_WARPROXY_RETREAT = 552,
        S2C_WARPROXY_RETREAT = 553,
        C2S_WARPROXY_ONE_VS_ONE = 554,
        S2C_WARPROXY_ONE_VS_ONE = 555,
        C2S_WARPROXY_START_WAR = 556,
        S2C_WARPROXY_START_WAR = 557,
        S2C_WAR_MAKE_WAR_NOTICE = 558,
        S2C_WARPROXY_FEAT_NOTICE = 559,
        C2S_WARPROXY_QUICK_BATTLE = 560,
        S2C_WARPROXY_QUICK_BATTLE = 561,
        C2S_WARPROXY_STOP_BATTLE = 562,
        S2C_WARPROXY_STOP_BATTLE = 563,
        C2S_WARPROXY_AUTO = 564,
        S2C_WARPROXY_AUTO = 565,
        S2C_WARPROXY_ENCIRCLE_CITY = 566,
        C2S_WARPROXY_CHECK_BATTLE = 567,
        S2C_WARPROXY_CHECK_BATTLE = 568,
        C2S_WARPROXY_ISCOUNTRY_PARTICIPATE = 569,
        S2C_WARPROXY_ISCOUNTRY_PARTICIPATE = 570,
        C2S_WARPROXY_OFFICIAL_NOTICE = 571,
        S2C_WARPROXY_OFFICIAL_NOTICE = 572,
        C2S_WARPROXY_QUERY_HERO_DATA = 573,
        C2S_WARPROXY_GUIDE_UNFROZEN = 574,
        C2S_WARPROXY_CREATE_CITY_BATTLEFIELD = 575,
        S2C_WARPROXY_CREATE_CITY_BATTLEFIELD = 576,
        C2S_WARPROXY_CITY_ADD_CORPS = 577,
        S2C_WARPROXY_CITY_ADD_CORPS = 578,
        S2C_WARPROXY_CITY_OVER = 579,
        C2S_WARPROXY_CITY_WAR_GO = 580,
        C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST = 582,
        C2S_WARPROXY_CITY_WATCH_WAR_TEAM = 583,
        S2C_WARPROXY_CITY_BATTLE_SYNC = 584,
        C2S_WARPROXY_CITY_WAR_MYTEAM = 585,
        C2S_WARPROXY_CHECK_BATTLE_SERVER = 586,
        S2C_WARPROXY_CHECK_BATTLE_SERVER = 587,
        CITY_BATTLE_LOAD_WORLD_MAP = 601,
        CITY_BATTLE_EXIT_WORLD_MAP = 630,
        S2C_CITY_UPDATE = 602,
        CHAT_SEND = 701,
        CHAT_PUSH = 702,
        CHAT_SEARCH_PLAYER = 703,
        GET_CHAT_MSG = 704,
        CHAT_PRIVATE_CONTACT_LIST = 705,
        ADD_CHAT_PRIVATE_CONTACT = 706,
        C2S_CHAT_RECORD_LIST = 707,
        S2C_CHAT_RECORD_LIST = 708,
        C2S_CHAT_PUSH = 709,
        S2C_CHAT_PUSH = 710,
        C2S_CHAT_PRIVATE_LIST = 711,
        S2C_CHAT_PRIVATE_LIST = 712,
        S2C_CHAT_PRIVATE_HEAD = 713,
        C2S_CHAT_PRIVATE_RECORD_LIST = 714,
        S2C_CHAT_PRIVATE_RECORD_LIST = 715,
        C2S_CHAT_PRIVATE_CLEAN = 716,
        S2C_CHAT_PRIVATE_CLEAN = 717,
        C2S_CHAT_BLACKLIST = 718,
        S2C_CHAT_BLACKLIST = 719,
        C2S_CHAT_ADD_BLACKLIST = 720,
        S2C_CHAT_ADD_BLACKLIST = 721,
        C2S_CHAT_DEL_BLACKLIST = 722,
        S2C_CHAT_DEL_BLACKLIST = 723,
        C2S_CHAT_REPORT = 724,
        S2C_CHAT_REPORT = 725,
        C2S_CHAT_LOG_PUSH = 750,
        TAVERN_INFO = 801,
        TAVERN_ATTRACT = 802,
        C2S_SCORE_EXCHANGE = 803,
        S2C_SCORE_EXCHANGE = 804,
        GENERAL_ALL = 902,
        GENERAL_DETAIL = 903,
        GENERAL_USE_EXP_BOOK = 921,
        GENERAL_UP_STAR = 922,
        RECRUITED_GENERAL = 923,
        GENERAL_SKILL_LIST = 931,
        OPEN_SKILL = 932,
        GENERAL_TREASURE_WEAR = 933,
        GENERAL_UPGRADE = 934,
        C2S_GENERAL_REBIRTH = 935,
        S2C_GENERAL_REBIRTH = 936,
        C2S_BUILDING_INFO = 1001,
        S2C_BUILDING_INFO = 1002,
        C2S_BUILDING_ACTIVATED = 1003,
        S2C_BUILDING_ACTIVATED = 1004,
        C2S_BUILDING_UPLEVEL = 1005,
        S2C_BUILDING_UPLEVEL = 1006,
        C2S_BUILDING_SPEED = 1007,
        S2C_BUILDING_SPEED = 1008,
        BUILDING_CLEAN_COOLING = 1009,
        C2S_BUILDING_LEVY = 1010,
        S2C_BUILDING_LEVY = 1011,
        MANUFACTURE_PROPS = 1012,
        GET_PROPS = 1013,
        GET_BUILDING_ITEM = 1014,
        PUSH_BUILDING_OPEN = 1021,
        PUSH_BUILDING_ITEM = 1022,
        C2S_TRAINING_ARMY = 1023,
        S2C_TRAINING_ARMY = 1024,
        C2S_TRAINING_SPEED = 1025,
        S2C_TRAINING_SPEED = 1026,
        TRAINING_CLEAN_COOLING = 1027,
        C2S_TRAINING_GET = 1028,
        S2C_TRAINING_GET = 1029,
        C2S_TOUCH_BUILDING = 1030,
        MAILBOX_LIST = 1101,
        MAILBOX_DELETE = 1102,
        MAILBOX_GET_ATTACHMENT = 1103,
        MAILBOX_NEW = 1104,
        MAILBOX_READ = 1105,
        MAILBOX_BATCH_DEL = 1106,
        C2S_MAILBOX_TITLE_LSIT = 1110,
        S2C_MAILBOX_TITLE_LSIT = 1111,
        S2C_MAILBOX_TITLE_UP = 1112,
        C2S_MAILBOX_INFO = 1113,
        S2C_MAILBOX_INFO = 1114,
        C2S_MAILBOX_DEL = 1115,
        S2C_MAILBOX_DEL = 1116,
        C2S_MAILBOX_ALLDEL = 1117,
        S2C_MAILBOX_ALLDEL = 1118,
        C2S_MAILBOX_ALLREAD = 1119,
        S2C_MAILBOX_ALLREAD = 1120,
        S2C_MAILBOX_NOTICE = 1121,
        C2S_MAILBOX_ATTACHMENT = 1122,
        S2C_MAILBOX_ATTACHMENT = 1123,
        TASK_MILITARY_VIEW = 1201,
        TASK_MILITARY_CHANGE = 1202,
        TASK_ABANDON = 1203,
        TASK_COMMIT = 1204,
        MILITARY_POWER_RANK = 1205,
        MILITARY_POWER_DIVINATION = 1206,
        TASK_MILITARY_SPEED = 1207,
        TASK_MILITARY_REFRESH = 1208,
        BACKPACK_QUERY = 1301,
        BACKPACK_USE_ITEM = 1302,
        BACKPACK_SAFE_USE = 1303,
        BACKPACK_DEL_ITEM = 1304,
        S2C_BACKPACKGRID_CHANGE = 1306,
        C2S_GUIDE_RECORD = 1401,
        S2C_GUIDE_RECORD = 1402,
        C2S_GUIDE_COMMIT = 1403,
        S2C_CROSS_DAY = 1404,
        VALUEBUFF_TYPE_ADD = 1501,
        DECISIVE_BATTLE = 1601,
        DECISIVE_BATTLE_INSPIRE = 1602,
        DECISIVE_BATTLE_BUILD = 1603,
        DECISIVE_BATTLE_APPLY = 1604,
        DECISIVE_BATTLE_EXAMINE = 1605,
        DECISIVE_BATTLE_APPROVE = 1606,
        DECISIVE_BATTLE_ACCEPT_PRIZE = 1607,
        PUSH_DECISIVE_BATTLE = 1608,
        PUSH_RESOURCE_REWARD = 1609,
        GET_CELEBRATION = 1701,
        CEREMONIES = 1702,
        LIGHT_LANTERN = 1703,
        RECEIVE_CELEBRATION_AWARD = 1704,
        START_CELEBRATION = 1705,
        ARENA_ID = 1801,
        ENTER_ARENA_BATTLE = 1802,
        CLEAN_UP_ARENA_BATTLE = 1803,
        ARENA_RESET = 1804,
        ARENA_REWARD_LIST = 1805,
        ARENA_GET_REWARD = 1806,
        ARENA_BATTLE_REWARD = 1807,
        C2S_ARENA_BUY_RESET = 1809,
        S2C_ARENA_BUY_RESET = 1810,
        GEMSTONE_ALL_INFO = 1901,
        GEMSTONE_UP = 1902,
        GEMSTONE_STOP_UP = 1903,
        SELL_ACTIVITY_INFO = 2001,
        SELL_ACTIVITY_FREE = 2002,
        SELL_ACTIVITY_BUY = 2003,
        TANK_INFO = 2101,
        TANK_STRENGTHEN = 2102,
        TANK_USE = 2103,
        TANK_BUY = 2104,
        BOAT_ARROW_INFO = 2201,
        BOAT_FREE = 2202,
        BOAT_BUY = 2203,
        BOAT_ARROW_GEMSTONE = 2204,
        COUNTRY_ALLIANCE = 2301,
        COUNTRY_OFFICIAL_CHANGE = 2302,
        EXPEDITION_PLAYER_LIST = 2401,
        EXPEDITION_BATTLE = 2402,
        EXPEDITION_BATTLE_RESULT = 2403,
        EXPEDITION_PLAYER_REFRESH_LIST = 2404,
        EXPEDITION_SEARCH_BOOK = 2405,
        C2S_TECHNOLOGY_VIEW = 2507,
        S2C_TECHNOLOGY_VIEW = 2508,
        C2S_TECHNOLOGY_UPGRADE = 2509,
        S2C_TECHNOLOGY_UPGRADE = 2510,
        C2S_TECHNOLOGY_INFO = 2511,
        S2C_TECHNOLOGY_INFO = 2512,
        C2S_TECHNOLOGY_SPEEDUP = 2513,
        S2C_TECHNOLOGY_SPEEDUP = 2514,
        WARART_VIEW = 2601,
        WARART_STRENGTHEN = 2602,
        RANK_VIEW = 2701,
        SILVER_DIAL_VIEW = 2801,
        SILVER_DIAL_DRAW = 2802,
        BUY_REWARD_INFO = 2901,
        BUY_REWARD_TAKE = 2902,
        SECRETARY_INFO = 3001,
        OPEN_OR_STOP = 3002,
        SECRETARY_RENEW = 3003,
        OBTAIN_REWARD = 3004,
        THREE_VISITS_ADD_FREE_COUNT = 3101,
        THREE_VISITS_REFRESH = 3102,
        THREE_VISITS_GAIN_REWARD = 3103,
        THREE_VISITS_UP_STAR = 3104,
        THREE_VISITS_AUTO_REWARD = 3105,
        THREE_VISITS_GET_REWARD = 3106,
        TEMPLE_VIEW = 3201,
        TEMPLE_SACRIFICE = 3202,
        TEMPLE_BOX_OPEN = 3203,
        SEVEN_MENG_VIEW = 3301,
        SEVEN_MENG_DRAW = 3302,
        CAO_RISE_VIEW = 3401,
        CAO_RISE_REWARD = 3402,
        C2S_TASK_LIST = 3501,
        S2C_TASK_LIST = 3502,
        C2S_TASK_RECEIVE = 3503,
        S2C_TASK_RECEIVE = 3504,
        C2S_TASK_REWARD = 3505,
        S2C_TASK_REWARD = 3506,
        C2S_LIVENESS_INFO = 3520,
        S2C_LIVENESS_INFO = 3521,
        C2S_LIVENESS_RECEIVE = 3522,
        S2C_LIVENESS_RECEIVE = 3523,
        C2S_TASK_REWARD_MULTI = 3525,
        S2C_TASK_REWARD_MULTI = 3526,
        S2C_TASK_PROGRESS = 3535,
        C2S_ACTIVITY_TASK_LIST = 3536,
        S2C_ACTIVITY_TASK_LIST = 3537,
        GET_PLAYER_MISSION = 3510,
        UPDATE_MISSION = 3511,
        GET_MISSION_REWARD = 3512,
        ADD_MISSION = 3513,
        ACTIVATION_STATUS = 3514,
        ACTIVATION_REWARD = 3515,
        CREATE_GUILD = 3601,
        GET_GUILD_INFO = 3602,
        GUILD_LIST = 3603,
        APPLY_JOIN_GUILD = 3604,
        OTHER_APPLY_JOIN_GUILD = 3605,
        CHANGE_JOIN_CHECK = 3606,
        ACCEPT_APPLY_JOIN_GUILD = 3607,
        JOIN_GUILD = 3608,
        KICK_OUT_GUILD = 3609,
        KICK_OUT_FROM_GUILD = 3610,
        CHANGE_GUILD_LEADER = 3611,
        CHANGE_NAME = 3612,
        CHANGE_DECLARATION = 3613,
        GET_GUILD_LIST_BY_NAME = 3614,
        APPOINT_POSITION = 3615,
        BE_APPOINT_POSITION = 3616,
        CHECK_APPLY_JOIN_GUILD = 3617,
        DISSOLVE_GUILD = 3618,
        GUILD_TECH_DONATE = 3619,
        REFRESH_GUILD_TREASURE = 3631,
        GET_OTHERS_TREASURE_INFO = 3632,
        HELP_OTHERS_TREASURE = 3633,
        HELP_TREASURE = 3634,
        GET_TREASURE_REWARD = 3635,
        GET_OTHERS_BUILDING_DATA = 3636,
        HELP_OTHERS_BUILDING_DATA = 3637,
        LEAVE_GUILD = 3638,
        APPLY_GUILD_LEADER = 3639,
        C2S_ACCUSE_GUILD = 3640,
        S2C_ACCUSE_GUILD = 3641,
        C2S_RANK_GUILD = 3642,
        S2C_RANK_GUILD = 3643,
        ANNOUNCE_INFO_LIST = 3701,
        ANNOUNCE_DEL = 3702,
        ANNOUNCE_HORSELAMP = 3703,
        GET_MERCHANT = 3805,
        HAND_REFRESH_MERCHANT = 3806,
        MERCHANT_BUY_GOODS = 3807,
        MERCHANT_FREE = 3808,
        C2S_GET_QUCKLY_SHOP_BUY_GOODS = 3850,
        S2C_GET_QUCKLY_SHOP_BUY_GOODS = 3851,
        C2S_QUCKLY_SHOP_BUY_GOODS = 3852,
        S2C_QUCKLY_SHOP_BUY_GOODS = 3853,
        TREASURE_ALL_INFO = 3901,
        TREASURE_UPGRADE = 3902,
        TREASURE_UPGRADE_STAR = 3903,
        TREASURE_ASSEMBLING_GEMSTONE = 3904,
        GAIN_TREASURE = 3905,
        TREASURE_ASSEMBLING_GENERAL = 3906,
        GET_ARMY = 4001,
        ARMY_UPGRADE_LEVEL = 4002,
        C2S_TREASURE_WASHBOWL_INFO = 4101,
        S2C_TREASURE_WASHBOWL_INFO = 4102,
        C2S_TREASURE_WASHBOWL_USE = 4103,
        S2C_TREASURE_WASHBOWL_USE = 4104,
        C2S_TREASURE_WASHBOWL_EXTRAGOLD = 4105,
        S2C_TREASURE_WASHBOWL_EXTRAGOLD = 4106,
        GUILD_TECHNOLOGY_VIEW = 4201,
        GUILD_TECHNOLOGY_DONATION = 4203,
        GUILD_TECHNOLOGY_LEVEL_UP = 4204,
        GUILD_MATERIAL_DONATION_COUNT = 4205,
        GET_SIGN_UP = 4301,
        SIGN_UP = 4302,
        SUPPLEMENT_SIGN_UP = 4303,
        RECEIVE_SIGN_UP_EXTRA_REWARD = 4304,
        PATCH_COLLAR_REWARD = 4305,
        GET_SHOP_MESSAGE = 4401,
        GET_SHOP_ORDER = 4402,
        BUY_GOODS = 4403,
        DELIVERY_GOODS_BY_RMB = 4404,
        FIRST_RECHARGE_REWARD = 4405,
        RECEIVE_DAY_CARD_REWARD = 4406,
        BUY_GROW_FUND = 4407,
        RECEIVE_GROW_FUND_REWARD = 4408,
        DAILY_LOGIN_ACT = 4501,
        DAILY_LOGIN_ACT_REWARD = 4502,
        TURN_TABLE_VIEW = 4601,
        SPIN_TURN_TABLE = 4602,
        HQ_GET_INFO = 4701,
        HQ_CLEAN_UP = 4702,
        HQ_CHALLENGES = 4703,
        HQ_RECEIVE_BOX = 4704,
        HQ_CHANLLNGES_REWARD = 4705,
        HQ_BUY_RESET_COUNT = 4706,
        HQ_UPDATE_CHAPTER = 4708,
        HQ_CHAPTER_INFO = 4709,
        HQ_BUY_CHALLENGE = 4710,
        C2S_TEAM_LIST = 4860,
        S2C_TEAM_LIST = 4861,
        C2S_TEAM_UP = 4862,
        S2C_TEAM_UP = 4863,
        C2S_TEAM_SUPPLEMENTARY_TROOPS = 4864,
        S2C_TEAM_SUPPLEMENTARY_TROOPS = 4865,
        C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS = 4866,
        S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS = 4867,
        C2S_TEAM_COUNT = 4873,
        S2C_TEAM_COUNT = 4868,
        C2S_TEAM_SELECT = 4869,
        S2C_TEAM_SELECT = 4870,
        C2S_TEAM_SET_AUTOFILL = 4871,
        S2C_TEAM_SET_AUTOFILL = 4872,
        C2S_TEAMMOVE_TO = 4801,
        S2C_TEAMMOVE_TO = 4802,
        C2S_TEAMMOVE_LIST = 4803,
        S2C_TEAMMOVE_LIST = 4804,
        C2S_TEAMMOVE_QUICKEN = 4805,
        S2C_TEAMMOVE_QUICKEN = 4806,
        C2S_TEAMMOVE_RETURN = 4807,
        S2C_TEAMMOVE_RETURN = 4808,
        S2C_TEAMMOVE_DEL = 4809,
        C2S_WORLDMAP_EVENT_ACT = 4810,
        S2C_WORLDMAP_EVENT_ACT = 4811,
        S2C_WORLDMAP_EVENT_OVER = 4812,
        S2C_WORLDMAP_EVENT_WAR_OVER = 4813,
        C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN = 4814,
        S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN = 4815,
        C2S_WORLDMAP_INFORMATION = 4816,
        S2C_WORLDMAP_INFORMATION = 4817,
        S2C_WORLDMAP_INFORMATION_MASS_NOTICE = 4818,
        C2S_MILITARYMERITS_REWARD_INFO = 4819,
        S2C_MILITARYMERITS_REWARD_INFO = 4820,
        C2S_MILITARYMERITS_REWARD_RECEIVE = 4821,
        S2C_MILITARYMERITS_REWARD_RECEIVE = 4822,
        C2S_GET_MAP_EVENT_DATA = 4823,
        S2C_GET_MAP_EVENT_DATA = 4824,
        C2S_UNLOCK_CITY = 4825,
        S2C_UNLOCK_CITY = 4826,
        C2S_MAP_EVENT_BUY = 4827,
        S2C_MAP_EVENT_BUY = 4828,
        C2S_COUNTRY_CITY = 4829,
        S2C_COUNTRY_CITY = 4830,
        C2S_CITY_ITEM_INFO = 4831,
        S2C_CITY_ITEM_INFO = 4832,
        S2C_CITY_ITEM_COUNT = 4833,
        C2S_CITY_MADE_INFO = 4835,
        S2C_CITY_MADE_INFO = 4836,
        C2S_CITY_MADE = 4837,
        S2C_CITY_MADE = 4838,
        C2S_CITY_MADE_SPEED = 4839,
        S2C_CITY_MADE_SPEED = 4840,
        C2S_CITY_MADE_REWARD = 4841,
        S2C_CITY_MADE_REWARD = 4842,
        COUNTRY_INFO = 4901,
        COUNTRY_EDITOR_NOTICE = 4902,
        COUNTRY_JOB_APPLY_UP = 4903,
        COUNTRY_CITY_APPLY_UP = 4904,
        COUNTRY_APPLY_LIST = 4905,
        COUNTRY_ABDICATE = 4907,
        C2S_COUNTRY_CITY_INFO = 4909,
        S2C_COUNTRY_CITY_INFO = 4910,
        C2S_COUNTRY_KING_CHANGE_STAMP = 4911,
        S2C_COUNTRY_KING_CHANGE_STAMP = 4912,
        C2S_COUNTRY_START_IMPEACH = 4913,
        S2C_COUNTRY_START_IMPEACH = 4914,
        C2S_COUNTRY_VOTE_IMPEACH = 4915,
        S2C_COUNTRY_VOTE_IMPEACH = 4916,
        C2S_COUNTRY_SALARY = 4917,
        S2C_COUNTRY_SALARY = 4918,
        C2S_COUNTRY_CITY_REVENUE = 4919,
        S2C_COUNTRY_CITY_REVENUE = 4920,
        C2S_COUNTRY_EMPEROR_INFO = 4921,
        S2C_COUNTRY_EMPEROR_INFO = 4922,
        S2C_COUNTRY_CITY_REVENUE_STATUS = 4923,
        S2C_EMPEROR_CHANE_NOTICE = 4924,
        C2S_CITY_CHANGE_INFO_LIST = 4925,
        S2C_CITY_CHANGE_INFO_LIST = 4926,
        S2C_CITY_CHANGE_INFO = 4927,
        CHECK_PLAYER_DETAILS = 5001,
        INVITE_JOIN_GUILD = 5002,
        BE_INVITE_JOIN_GUILD = 5003,
        SURE_INVITE_JOIN_GUILD = 5004,
        BE_SURE_INVITE_JOIN_GUILD = 5005,
        JOIN_GUILD_STATUS = 5006,
        GUILD_ICON_STATUS = 5007,
        GUILD_INFORMATION = 5008,
        BGB_GENERAL_GO = 5101,
        GET_BGB_GENERAL_INFO = 5102,
        BGB_ONE_CLICK_GO_BATTLE = 5103,
        APK_GET_MY_APK = 5201,
        APK_GET_CHALLENGE_LIST = 5202,
        APK_CHALLENGE = 5203,
        APK_BUY_COUNT = 5204,
        APK_GET_RANK_LIST = 5205,
        APK_GET_CHALLENGE_HIS = 5206,
        APK_CHALLENGE_FAST = 5207,
        APK_CHALLENGE_RESULT = 5208,
        APK_CHALLENGE_CHECK = 5209,
        C2S_RANK_COMM = 5210,
        S2C_RANK_COMM = 5211,
        C2S_WORSHIP_INFO = 5251,
        S2C_WORSHIP_INFO = 5252,
        C2S_WORSHIP = 5253,
        S2C_WORSHIP = 5254,
        C2S_GET_PATROL = 5301,
        S2C_GET_PATROL = 5302,
        C2S_PATROL_CHALLENGE = 5303,
        S2C_PATROL_CHALLENGE_REWARD = 5304,
        C2S_PATROL_WINE = 5307,
        S2C_PATROL_WINE = 5308,
        C2S_PATROL_GET_RANDOM_PLAYERS = 5309,
        S2C_PATROL_GET_RANDOM_PLAYERS = 5310,
        C2S_RECEIVE_PATROL_REWARD = 5317,
        S2C_RECEIVE_PATROL_REWARD = 5318,
        C2S_PATROL_CHALLENGE_BOSS = 5321,
        S2C_PATROL_CHALLENGE_BOSS = 5322,
        S2C_PATROL_CHALLENGE_BOSS_REWARD = 5323,
        C2S_PATROL_REWARD_GENERAL = 5324,
        S2C_PATROL_REWARD_GENERAL = 5325,
        C2S_PATROL_BUY_BOSS_COUNT = 5326,
        S2C_PATROL_BUY_BOSS_COUNT = 5327,
        C2S_GET_BOSS = 5401,
        S2C_GET_BOSS = 5402,
        C2S_CHALLENGE_BOSS = 5403,
        S2C_CHALLENGE_BOSS = 5404,
        C2S_CLEAR_BOSS = 5405,
        S2C_CLEAR_BOSS = 5406,
        C2S_BUY_BOSS_CHALLENGE_COUNT = 5407,
        S2C_BUY_BOSS_CHALLENGE_COUNT = 5408,
        S2C_BOSS_IS_DIED = 5409,
        C2S_RECEIVE_BOSS_BOX = 5410,
        S2C_RECEIVE_BOSS_BOX = 5411,
        SYSTEM_NOTICE_INFO_LIST = 5501,
        SYSTEM_NOTICE_DEL = 5502,
        SYSTEM_NOTICE_HORSELAMP = 5503,
        C2S_EQUIPMENT_INFO = 5601,
        S2C_EQUIPMENT_INFO = 5602,
        C2S_GET_GENERAL_EQUIPMENT = 5603,
        S2C_GET_GENERAL_EQUIPMENT = 5604,
        C2S_EQUIPMENT_SLOT_UPGRADE = 5605,
        S2C_EQUIPMENT_SLOT_UPGRADE = 5606,
        C2S_GENERAL_EQUIP = 5607,
        S2C_GENERAL_EQUIP = 5608,
        C2S_EQUIPMENT_COMPOSE = 5609,
        S2C_EQUIPMENT_COMPOSE = 5610,
        C2S_EQUIPMENT_DECOMPOSE = 5611,
        S2C_EQUIPMENT_DECOMPOSE = 5612,
        C2S_GET_EQUIPMENT_LIST = 5613,
        S2C_GET_EQUIPMENT_LIST = 5614,
        S2C_EQUIPMENT_CHANGE = 5616,
        S2C_GENERAL_EQUIPMENT_CHANGE = 5618,
        C2S_GENERAL_EQUIP_ALL = 5619,
        S2C_GENERAL_EQUIP_ALL = 5620,
        S2C_EQUIPMENT_ADD = 5622,
        S2C_EQUIPMENT_DEL = 5624,
        C2S_WAR_START = 5701,
        S2C_WAR_START = 5702,
        C2S_WAR_REENTRY_BATTLE = 5703,
        S2C_WAR_REENTRY_BATTLE = 5704,
        C2S_WAR_QUIT_BATTLE = 5705,
        S2C_WAR_QUIT_BATTLE = 5706,
        C2S_WAR_QUICK_BATTLE = 5707,
        S2C_WAR_QUICK_BATTLE = 5708,
        C2S_WAR_ANAGER_SKILL = 5713,
        S2C_WAR_ANAGER_SKILL = 5714,
        C2S_WAR_AUTO = 5709,
        S2C_WAR_AUTO = 5710,
        C2S_WAR_AUTO_LIST = 5711,
        S2C_WAR_AUTO_LIST = 5712,
        C2S_WAR_QUERY_HERO_DATA = 5715,
        S2C_WAR_QUERY_HERO_DATA = 5716,
        S2C_VISIT_EVENT_UPDATE = 5802,
        C2S_GENERAL_VISIT = 5803,
        S2C_GENERAL_VISIT = 5804,
        C2S_VISIT_DATA_REFRESH = 5805,
        S2C_VISIT_DATA_REFRESH = 5806,
        C2S_VISIT_CD_SPEED = 5807,
        S2C_VISIT_CD_SPEED = 5808,
        C2S_CITY_WAR_GO = 5901,
        S2C_CITY_WAR_GO = 5902,
        C2S_CITY_WAR_MYTEAM = 5903,
        S2C_CITY_WAR_MYTEAM = 5904,
        C2S_CITY_WAR_TEAM = 5905,
        S2C_CITY_WAR_TEAM = 5906,
        C2S_CITY_WAR_OUT = 5907,
        S2C_CITY_WAR_OUT = 5908,
        S2C_CITY_WAR_SINGLE_OVER = 5909,
        S2C_CITY_WAR_SETTLEMENT = 5910,
        C2S_CITY_WAR_CONFRONTATION_LIST = 5911,
        S2C_CITY_WAR_CONFRONTATION_LIST = 5912,
        C2S_CITY_WAR_DMG_RANK = 5913,
        S2C_CITY_WAR_DMG_RANK = 5914,
        C2S_CITY_WATCH_WAR_TEAM = 5915,
        S2C_CITY_WATCH_WAR_TEAM = 5916,
        C2S_MATERIAL_INFO = 6001,
        S2C_MATERIAL_INFO = 6002,
        C2S_MATERIAL_CHALLENGE = 6003,
        S2C_MATERIAL_CHALLENGE = 6004,
        C2S_MATERIAL_BUY = 6005,
        S2C_MATERIAL_BUY = 6006,
        C2S_RECHARGE_INFO = 6101,
        S2C_RECHARGE_INFO = 6102,
        C2S_RECHARGE = 6103,
        S2C_RECHARGE = 6104,
        C2S_VIP_DAILY_REWARD = 6105,
        S2C_VIP_DAILY_REWARD = 6106,
        C2S_VIP_LEVEL_REWARD = 6107,
        S2C_VIP_LEVEL_REWARD = 6108,
        C2S_PLAY_ORDERNO = 6109,
        S2C_PLAY_ORDERNO = 6110,
        C2S_RECHARGE_CONFIGS = 6111,
        S2C_RECHARGE_CONFIGS = 6112,
        C2S_GOLD_BUY = 6113,
        C2S_ACTIVITY_LIST = 6201,
        S2C_ACTIVITY_LIST = 6202,
        C2S_GET_COLLECT_REWARD = 6203,
        S2C_GET_COLLECT_REWARD = 6204,
        S2C_ACTIVITY_COUNT_CONFIG = 6205,
        S2C_ACTIVITY_INFO = 6206,
        S2C_ACTIVITY_UPDATE = 6207,
        C2S_ACTIVITY_GET_SINGLE_PAY_INFO = 6208,
        S2C_ACTIVITY_GET_SINGLE_PAY_INFO = 6209,
        C2S_ACTIVITY_GET_SINGLE_PAY_REWARD = 6210,
        S2C_ACTIVITY_GET_SINGLE_PAY_REWARD = 6211,
        C2S_ACTIVITY_GET_TOTAL_PAY_INFO = 6212,
        S2C_ACTIVITY_GET_TOTAL_PAY_INFO = 6213,
        C2S_ACTIVITY_GET_TOTAL_PAY_REWARD = 6214,
        S2C_ACTIVITY_GET_TOTAL_PAY_REWARD = 6215,
        C2S_ACTIVITY_GET_CONSUME_GIFT_INFO = 6216,
        S2C_ACTIVITY_GET_CONSUME_GIFT_INFO = 6217,
        C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD = 6218,
        S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD = 6219,
        C2S_ACTIVITY_GET_LOGIN_DAYS_INFO = 6220,
        S2C_ACTIVITY_GET_LOGIN_DAYS_INFO = 6221,
        C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD = 6222,
        S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD = 6223,
        C2S_ACTIVITY_GET_FIRTS_PAY_INFO = 6224,
        S2C_ACTIVITY_GET_FIRTS_PAY_INFO = 6225,
        C2S_ACTIVITY_GET_FIRTS_PAY_REWARD = 6226,
        S2C_ACTIVITY_GET_FIRTS_PAY_REWARD = 6227,
        C2S_ACTIVITY_BUY_GROWTH_FUND = 6228,
        S2C_ACTIVITY_BUY_GROWTH_FUND = 6229,
        C2S_ACTIVITY_GET_GROWTH_FUND_INFO = 6230,
        S2C_ACTIVITY_GET_GROWTH_FUND_INFO = 6231,
        C2S_ACTIVITY_GET_GROWTH_FUND_REWARD = 6232,
        S2C_ACTIVITY_GET_GROWTH_FUND_REWARD = 6233,
        C2S_ACTIVITY_BUY_WEEK_MONTH_CARD = 6234,
        S2C_ACTIVITY_BUY_WEEK_MONTH_CARD = 6235,
        C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO = 6236,
        S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO = 6237,
        C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD = 6238,
        S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD = 6239,
        S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN = 6240,
        S2C_ACTIVITY_CAN_REWARD_IDS = 6241,
        C2S_BARBARIAN_BREAKOUT_EVENT = 6242,
        S2C_BARBARIAN_BREAKOUT_EVENT = 6243,
        C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO = 6244,
        S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO = 6245,
        C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD = 6246,
        S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD = 6247,
        C2S_XIANGYANG_INFO = 6248,
        S2C_XIANGYANG_INFO = 6249,
        C2S_XIANGYANG_RECEIVE = 6250,
        S2C_XIANGYANG_RECEIVE = 6251,
        C2S_XIANGYANG_EMPROR_COUNTRY_REWARD = 6252,
        S2C_XIANGYANG_EMPROR_COUNTRY_REWARD = 6253,
        S2C_XIANGYANG_RECEIVE_NOTICE = 6266,
        C2S_ACTIVITY_COMM_CONFIG = 6254,
        S2C_ACTIVITY_COMM_CONFIG = 6255,
        C2S_ACTIVITY_GET_PRIZE_INFO = 6256,
        S2C_ACTIVITY_GET_PRIZE_INFO = 6257,
        C2S_ACTIVITY_PRIZE_PLAY = 6258,
        S2C_ACTIVITY_PRIZE_PLAY = 6259,
        C2S_ACTIVITY_DRAW_PRIZE_REWARD = 6260,
        S2C_ACTIVITY_DRAW_PRIZE_REWARD = 6261,
        C2S_ACTIVITY_ZHI_GOU_INFO = 6262,
        S2C_ACTIVITY_ZHI_GOU_INFO = 6263,
        C2S_ACTIVITY_NOTICE_CONFIGS = 6264,
        S2C_ACTIVITY_NOTICE_CONFIGS = 6265,
        C2S_ACTIVITY_TREASEURE_BOWL_INFO = 6274,
        S2C_ACTIVITY_TREASEURE_BOWL_INFO = 6275,
        C2S_ACTIVITY_TREASEURE_BOWL_REWARD = 6276,
        S2C_ACTIVITY_TREASEURE_BOWL_REWARD = 6277,
        C2S_ONLINE_INFO = 6280,
        S2C_ONLINE_INFO = 6281,
        C2S_ONLINE_REWARD = 6282,
        S2C_ONLINE_REWARD = 6283,
        C2S_FUNCTION_PREVIEW = 6301,
        S2C_FUNCTION_PREVIEW = 6302,
        S2C_GM_OPERATE = 6401,
        S2C_GM_UPDATE_LEVEL = 6402,
        S2C_GM_UPDATE_VIP_LEVEL = 6403,
        S2C_GM_UPDATE_NICK_NAME = 6404,
        S2C_GM_UPDATE_EXP = 6405,
        C2S_TIME_LIMI_GIFT_BAG_INFO = 6501,
        S2C_TIME_LIMI_GIFT_BAG_INFO = 6502,
        C2S_TIME_LIMI_GIFT_BAG_AWARD = 6503,
        S2C_TIME_LIMI_GIFT_BAG_AWARD = 6504,
        S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO = 6505,
        C2S_TIME_LIMI_GIFT_BAG_BUY = 6506,
        S2C_TIME_LIMI_GIFT_BAG_BUY = 6507,
        C2S_GET_ACTIVITY_CDKEY = 6601,
        S2C_GET_ACTIVITY_CDKEY = 6602,
        C2S_GET_ACTIVITY_CDKEY_REWARD = 6603,
        S2C_GET_ACTIVITY_CDKEY_REWARD = 6604,
        C2S_GET_ACTIVITY_CDKEY_LIST = 6605,
        S2C_GET_ACTIVITY_CDKEY_LIST = 6606,
        C2S_RELATION_LIST = 6701,
        S2C_RELATION_LIST = 6702,
        C2S_RELATION_EFFECT = 6703,
        S2C_RELATION_EFFECT = 6704,
        C2S_JADE_BUY = 6750,
        C2S_GET_HISTORY_WAR_INFO = 6801,
        S2C_GET_HISTORY_WAR_INFO = 6802,
        C2S_HISTORY_WAR_CLEAN_UP = 6803,
        S2C_HISTORY_WAR_CLEAN_UP = 6804,
        C2S_HISTORY_WAR_FIGHT = 6805,
        C2S_HISTORY_WAR_GET_BOX = 6806,
        S2C_HISTORY_WAR_GET_BOX = 6807,
        S2C_HISTROY_WAR_BATTLE_INFO = 6808,
        C2S_HISTORY_WAR_CLEAN_UP_COUNT = 6809,
        S2C_HISTORY_WAR_RESET = 6810,
        C2S_ACTIVITY_NEW_GENERAL_INFO = 6901,
        S2C_ACTIVITY_NEW_GENERAL_INFO = 6902,
        C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD = 6903,
        S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD = 6904,
        C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD = 6905,
        S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD = 6906,
        C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD = 6907,
        S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD = 6908,
        C2S_ACTIVITY_BUY_GENERAL_BAG = 6909,
        S2C_ACTIVITY_BUY_GENERAL_BAG = 6910,
        C2S_ACTIVITY_AWARD_GENERAL_BAG = 6911,
        S2C_ACTIVITY_AWARD_GENERAL_BAG = 6912,
        C2S_ACTIVITY_PREFERENTAIL_STORE_INFO = 7001,
        S2C_ACTIVITY_PREFERENTAIL_STORE_INFO = 7002,
        C2S_ACTIVITY_PREFERENTAIL_REFRESH = 7003,
        S2C_ACTIVITY_PREFERENTAIL_REFRESH = 7004,
        C2S_ACTIVITY_PREFERENTAIL_STORE_BUY = 7005,
        S2C_ACTIVITY_PREFERENTAIL_STORE_BUY = 7006,
        C2S_CROSS_SERVER_WAR_TEAM_UPDATE = 8001,
        S2C_CROSS_SERVER_WAR_TEAM_UPDATE = 8002,
        C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS = 8003,
        S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS = 8004,
        S2C_CROSS_SERVER_WAR_TROOPS_INFO = 8005,
        C2S_CROSS_SERVER_WAR_ENTER = 8007,
        S2C_CROSS_SERVER_WAR_ENTER = 8008,
        C2S_CROSS_SERVER_WAR_DATA = 8009,
        S2C_CROSS_SERVER_WAR_DATA = 8010,
        C2S_CROSS_SERVER_ARMY_GROUP = 8011,
        S2C_CROSS_SERVER_ARMY_GROUP = 8012,
        C2S_CROSS_SERVER_WAR_RIVAL_INFO = 8013,
        S2C_CROSS_SERVER_WAR_RIVAL_INFO = 8014,
        C2S_CROSS_SERVER_WAR_SAND_INFO = 8015,
        S2C_CROSS_SERVER_WAR_SAND_INFO = 8016,
        C2S_CROSS_SERVER_INFO = 8017,
        S2C_CROSS_SERVER_INFO = 8018,
        S2C_CROSS_SERVER_CITY_CHANGE = 8019,
        C2S_CROSS_SERVER_TEAM_MOVE = 8021,
        S2C_CROSS_SERVER_TEAM_MOVE = 8022,
        C2S_CROSS_SERVER_UPDATE_CITY_TEAM = 8023,
        S2C_CROSS_SERVER_UPDATE_CITY_TEAM = 8024,
        S2C_CROSS_SERVER_ENTER_WAR = 8025,
        C2S_CROSS_SERVER_WAR_VOER = 8027,
        S2C_CROSS_SERVER_WAR_VOER = 8028,
        C2S_CROSS_SERVER_ATTACK_GATE = 8029,
        C2S_CROSS_SERVER_SIGNUP = 8031,
        S2C_CROSS_SERVER_SIGNUP = 8032,
        S2C_CROSS_SERVER_GATE_HP = 8034,
        S2C_CROSS_SERVER_BUFFER_INFO = 8036,
        S2C_CROSS_SERVER_GATE_INFO = 8038,
        C2S_CROSS_SERVER_BUY_TOWER = 8039,
        C2S_CROSS_SERVER_BUY_BUFFER = 8041,
        C2S_CROSS_SERVER_WAR_END = 8043,
        S2C_CROSS_SERVER_WAR_END = 8044,
        S2C_CROSS_SERVER_ARMY_STATUS = 8046,
        S2C_CROSS_SERVER_CITY_STATUS = 8048,
        S2C_CROSS_SERVER_GATE_HP_TO_ENEMY = 8050,
        C2S_CROSS_SERVER_ARMY_HP = 8051,
        S2C_CROSS_SERVER_ARMY_HP = 8052,
        S2C_CROSS_SERVER_GET_HONOR = 8054,
        C2S_CROSS_SERVER_GET_HONOR_BOX = 8055,
        S2C_CROSS_SERVER_GET_HONOR_BOX = 8056,
        C2S_CROSS_SERVER_GET_DAY_REWARD = 8057,
        S2C_CROSS_SERVER_GET_DAY_REWARD = 8058,
        S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT = 8060,
        S2C_CROSS_SERVER_SETTLEMENT_DATA = 8062,
        S2C_CROSS_SERVER_BATTLE_SETTLEMENT = 8064,
        C2S_CROSS_SERVER_SYNC_CITY_DATA = 8065,
        S2C_CROSS_SERVER_SYNC_CITY_DATA = 8066,
        C2S_SURPRISE_MARKET = 8100,
        S2C_SURPRISE_MARKET = 8101
    }

    /** Properties of an ErrorCodeResp. */
    interface IErrorCodeResp {

        /** ErrorCodeResp cmd */
        cmd: number;

        /** ErrorCodeResp code */
        code: number;

        /** ErrorCodeResp param */
        param?: (string[]|null);
    }

    /** Represents an ErrorCodeResp. */
    class ErrorCodeResp implements IErrorCodeResp {

        /**
         * Constructs a new ErrorCodeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IErrorCodeResp);

        /** ErrorCodeResp cmd. */
        public cmd: number;

        /** ErrorCodeResp code. */
        public code: number;

        /** ErrorCodeResp param. */
        public param: string[];

        /**
         * Encodes the specified ErrorCodeResp message. Does not implicitly {@link gameProto.ErrorCodeResp.verify|verify} messages.
         * @param message ErrorCodeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IErrorCodeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ErrorCodeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ErrorCodeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ErrorCodeResp;
    }

    /** Properties of an AnnounceInfo. */
    interface IAnnounceInfo {

        /** AnnounceInfo id */
        id: number;

        /** AnnounceInfo announceType */
        announceType: number;

        /** AnnounceInfo title */
        title?: (string|null);

        /** AnnounceInfo content */
        content?: (string|null);

        /** AnnounceInfo stime */
        stime?: (number|null);

        /** AnnounceInfo etime */
        etime?: (number|null);

        /** AnnounceInfo level */
        level?: (number|null);

        /** AnnounceInfo diffTime */
        diffTime?: (number|null);

        /** AnnounceInfo showCount */
        showCount?: (number|null);
    }

    /** Represents an AnnounceInfo. */
    class AnnounceInfo implements IAnnounceInfo {

        /**
         * Constructs a new AnnounceInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAnnounceInfo);

        /** AnnounceInfo id. */
        public id: number;

        /** AnnounceInfo announceType. */
        public announceType: number;

        /** AnnounceInfo title. */
        public title: string;

        /** AnnounceInfo content. */
        public content: string;

        /** AnnounceInfo stime. */
        public stime: number;

        /** AnnounceInfo etime. */
        public etime: number;

        /** AnnounceInfo level. */
        public level: number;

        /** AnnounceInfo diffTime. */
        public diffTime: number;

        /** AnnounceInfo showCount. */
        public showCount: number;

        /**
         * Encodes the specified AnnounceInfo message. Does not implicitly {@link gameProto.AnnounceInfo.verify|verify} messages.
         * @param message AnnounceInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAnnounceInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AnnounceInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnnounceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AnnounceInfo;
    }

    /** Properties of a HorseLampInfo. */
    interface IHorseLampInfo {

        /** HorseLampInfo id */
        id: number;

        /** HorseLampInfo params */
        params?: (string[]|null);

        /** HorseLampInfo times */
        times: number;
    }

    /** Represents a HorseLampInfo. */
    class HorseLampInfo implements IHorseLampInfo {

        /**
         * Constructs a new HorseLampInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHorseLampInfo);

        /** HorseLampInfo id. */
        public id: number;

        /** HorseLampInfo params. */
        public params: string[];

        /** HorseLampInfo times. */
        public times: number;

        /**
         * Encodes the specified HorseLampInfo message. Does not implicitly {@link gameProto.HorseLampInfo.verify|verify} messages.
         * @param message HorseLampInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHorseLampInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HorseLampInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HorseLampInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HorseLampInfo;
    }

    /** Properties of an AnnounceInfoListReq. */
    interface IAnnounceInfoListReq {
    }

    /** Represents an AnnounceInfoListReq. */
    class AnnounceInfoListReq implements IAnnounceInfoListReq {

        /**
         * Constructs a new AnnounceInfoListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAnnounceInfoListReq);

        /**
         * Encodes the specified AnnounceInfoListReq message. Does not implicitly {@link gameProto.AnnounceInfoListReq.verify|verify} messages.
         * @param message AnnounceInfoListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAnnounceInfoListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AnnounceInfoListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnnounceInfoListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AnnounceInfoListReq;
    }

    /** Properties of an AnnounceInfoListResp. */
    interface IAnnounceInfoListResp {

        /** AnnounceInfoListResp announceInfo */
        announceInfo?: (gameProto.IAnnounceInfo[]|null);
    }

    /** Represents an AnnounceInfoListResp. */
    class AnnounceInfoListResp implements IAnnounceInfoListResp {

        /**
         * Constructs a new AnnounceInfoListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAnnounceInfoListResp);

        /** AnnounceInfoListResp announceInfo. */
        public announceInfo: gameProto.IAnnounceInfo[];

        /**
         * Encodes the specified AnnounceInfoListResp message. Does not implicitly {@link gameProto.AnnounceInfoListResp.verify|verify} messages.
         * @param message AnnounceInfoListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAnnounceInfoListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AnnounceInfoListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnnounceInfoListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AnnounceInfoListResp;
    }

    /** Properties of an AnnounceDelResp. */
    interface IAnnounceDelResp {

        /** AnnounceDelResp id */
        id: number;
    }

    /** Represents an AnnounceDelResp. */
    class AnnounceDelResp implements IAnnounceDelResp {

        /**
         * Constructs a new AnnounceDelResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAnnounceDelResp);

        /** AnnounceDelResp id. */
        public id: number;

        /**
         * Encodes the specified AnnounceDelResp message. Does not implicitly {@link gameProto.AnnounceDelResp.verify|verify} messages.
         * @param message AnnounceDelResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAnnounceDelResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AnnounceDelResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnnounceDelResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AnnounceDelResp;
    }

    /** Properties of an AnnounceHorseLampResp. */
    interface IAnnounceHorseLampResp {

        /** AnnounceHorseLampResp info */
        info?: (gameProto.IHorseLampInfo[]|null);
    }

    /** Represents an AnnounceHorseLampResp. */
    class AnnounceHorseLampResp implements IAnnounceHorseLampResp {

        /**
         * Constructs a new AnnounceHorseLampResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAnnounceHorseLampResp);

        /** AnnounceHorseLampResp info. */
        public info: gameProto.IHorseLampInfo[];

        /**
         * Encodes the specified AnnounceHorseLampResp message. Does not implicitly {@link gameProto.AnnounceHorseLampResp.verify|verify} messages.
         * @param message AnnounceHorseLampResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAnnounceHorseLampResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AnnounceHorseLampResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnnounceHorseLampResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AnnounceHorseLampResp;
    }

    /** Properties of an ActivityAward. */
    interface IActivityAward {

        /** ActivityAward resultCode */
        resultCode: number;

        /** ActivityAward avtivityId */
        avtivityId?: (number|null);

        /** ActivityAward stepId */
        stepId?: (number|null);

        /** ActivityAward message */
        message?: (gameProto.IValuesMessage[]|null);

        /** ActivityAward awardRecord */
        awardRecord?: (number[]|null);
    }

    /** Represents an ActivityAward. */
    class ActivityAward implements IActivityAward {

        /**
         * Constructs a new ActivityAward.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IActivityAward);

        /** ActivityAward resultCode. */
        public resultCode: number;

        /** ActivityAward avtivityId. */
        public avtivityId: number;

        /** ActivityAward stepId. */
        public stepId: number;

        /** ActivityAward message. */
        public message: gameProto.IValuesMessage[];

        /** ActivityAward awardRecord. */
        public awardRecord: number[];

        /**
         * Encodes the specified ActivityAward message. Does not implicitly {@link gameProto.ActivityAward.verify|verify} messages.
         * @param message ActivityAward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IActivityAward, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActivityAward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ActivityAward;
    }

    /** Properties of an ActivityInfo. */
    interface IActivityInfo {

        /** ActivityInfo id */
        id: number;

        /** ActivityInfo viewType */
        viewType: number;

        /** ActivityInfo rechargeIds */
        rechargeIds?: (number[]|null);

        /** ActivityInfo btnId */
        btnId: number;

        /** ActivityInfo preViewDate */
        preViewDate: number;

        /** ActivityInfo openDate */
        openDate: number;

        /** ActivityInfo closeDate */
        closeDate: number;

        /** ActivityInfo closeIconDate */
        closeIconDate: number;
    }

    /** Represents an ActivityInfo. */
    class ActivityInfo implements IActivityInfo {

        /**
         * Constructs a new ActivityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IActivityInfo);

        /** ActivityInfo id. */
        public id: number;

        /** ActivityInfo viewType. */
        public viewType: number;

        /** ActivityInfo rechargeIds. */
        public rechargeIds: number[];

        /** ActivityInfo btnId. */
        public btnId: number;

        /** ActivityInfo preViewDate. */
        public preViewDate: number;

        /** ActivityInfo openDate. */
        public openDate: number;

        /** ActivityInfo closeDate. */
        public closeDate: number;

        /** ActivityInfo closeIconDate. */
        public closeIconDate: number;

        /**
         * Encodes the specified ActivityInfo message. Does not implicitly {@link gameProto.ActivityInfo.verify|verify} messages.
         * @param message ActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IActivityInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActivityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ActivityInfo;
    }

    /** Properties of a WeekMonthCardInfo. */
    interface IWeekMonthCardInfo {

        /** WeekMonthCardInfo canReceive */
        canReceive: boolean;

        /** WeekMonthCardInfo cardType */
        cardType: number;

        /** WeekMonthCardInfo rewardCount */
        rewardCount: number;
    }

    /** Represents a WeekMonthCardInfo. */
    class WeekMonthCardInfo implements IWeekMonthCardInfo {

        /**
         * Constructs a new WeekMonthCardInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWeekMonthCardInfo);

        /** WeekMonthCardInfo canReceive. */
        public canReceive: boolean;

        /** WeekMonthCardInfo cardType. */
        public cardType: number;

        /** WeekMonthCardInfo rewardCount. */
        public rewardCount: number;

        /**
         * Encodes the specified WeekMonthCardInfo message. Does not implicitly {@link gameProto.WeekMonthCardInfo.verify|verify} messages.
         * @param message WeekMonthCardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWeekMonthCardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeekMonthCardInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeekMonthCardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WeekMonthCardInfo;
    }

    /** Properties of a WeekMonthRewardInfo. */
    interface IWeekMonthRewardInfo {

        /** WeekMonthRewardInfo resultCode */
        resultCode: number;

        /** WeekMonthRewardInfo avtivityId */
        avtivityId?: (number|null);

        /** WeekMonthRewardInfo cardInfo */
        cardInfo?: (gameProto.IWeekMonthCardInfo[]|null);

        /** WeekMonthRewardInfo message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a WeekMonthRewardInfo. */
    class WeekMonthRewardInfo implements IWeekMonthRewardInfo {

        /**
         * Constructs a new WeekMonthRewardInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWeekMonthRewardInfo);

        /** WeekMonthRewardInfo resultCode. */
        public resultCode: number;

        /** WeekMonthRewardInfo avtivityId. */
        public avtivityId: number;

        /** WeekMonthRewardInfo cardInfo. */
        public cardInfo: gameProto.IWeekMonthCardInfo[];

        /** WeekMonthRewardInfo message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified WeekMonthRewardInfo message. Does not implicitly {@link gameProto.WeekMonthRewardInfo.verify|verify} messages.
         * @param message WeekMonthRewardInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWeekMonthRewardInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WeekMonthRewardInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WeekMonthRewardInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WeekMonthRewardInfo;
    }

    /** Properties of a PrizeInfo. */
    interface IPrizeInfo {

        /** PrizeInfo account */
        account: number;

        /** PrizeInfo luncky */
        luncky: number;

        /** PrizeInfo accumulates */
        accumulates?: (gameProto.IPrizeAccumulate[]|null);

        /** PrizeInfo playNum */
        playNum: number;

        /** PrizeInfo fireNum */
        fireNum: number;
    }

    /** Represents a PrizeInfo. */
    class PrizeInfo implements IPrizeInfo {

        /**
         * Constructs a new PrizeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPrizeInfo);

        /** PrizeInfo account. */
        public account: number;

        /** PrizeInfo luncky. */
        public luncky: number;

        /** PrizeInfo accumulates. */
        public accumulates: gameProto.IPrizeAccumulate[];

        /** PrizeInfo playNum. */
        public playNum: number;

        /** PrizeInfo fireNum. */
        public fireNum: number;

        /**
         * Encodes the specified PrizeInfo message. Does not implicitly {@link gameProto.PrizeInfo.verify|verify} messages.
         * @param message PrizeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPrizeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PrizeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrizeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PrizeInfo;
    }

    /** Properties of a PrizeAccumulate. */
    interface IPrizeAccumulate {

        /** PrizeAccumulate accumulate */
        accumulate: number;

        /** PrizeAccumulate accumulateDate */
        accumulateDate: number;
    }

    /** Represents a PrizeAccumulate. */
    class PrizeAccumulate implements IPrizeAccumulate {

        /**
         * Constructs a new PrizeAccumulate.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPrizeAccumulate);

        /** PrizeAccumulate accumulate. */
        public accumulate: number;

        /** PrizeAccumulate accumulateDate. */
        public accumulateDate: number;

        /**
         * Encodes the specified PrizeAccumulate message. Does not implicitly {@link gameProto.PrizeAccumulate.verify|verify} messages.
         * @param message PrizeAccumulate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPrizeAccumulate, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PrizeAccumulate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrizeAccumulate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PrizeAccumulate;
    }

    /** Properties of an ActivityNotiseConfig. */
    interface IActivityNotiseConfig {

        /** ActivityNotiseConfig type */
        type: number;

        /** ActivityNotiseConfig openDate */
        openDate: string;

        /** ActivityNotiseConfig closeDate */
        closeDate: string;

        /** ActivityNotiseConfig url */
        url: string;
    }

    /** Represents an ActivityNotiseConfig. */
    class ActivityNotiseConfig implements IActivityNotiseConfig {

        /**
         * Constructs a new ActivityNotiseConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IActivityNotiseConfig);

        /** ActivityNotiseConfig type. */
        public type: number;

        /** ActivityNotiseConfig openDate. */
        public openDate: string;

        /** ActivityNotiseConfig closeDate. */
        public closeDate: string;

        /** ActivityNotiseConfig url. */
        public url: string;

        /**
         * Encodes the specified ActivityNotiseConfig message. Does not implicitly {@link gameProto.ActivityNotiseConfig.verify|verify} messages.
         * @param message ActivityNotiseConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IActivityNotiseConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ActivityNotiseConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityNotiseConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ActivityNotiseConfig;
    }

    /** Properties of a TreasureBowl. */
    interface ITreasureBowl {

        /** TreasureBowl totalCount */
        totalCount: number;

        /** TreasureBowl totalCost */
        totalCost: number;

        /** TreasureBowl curCount */
        curCount: number;

        /** TreasureBowl activityId */
        activityId: number;
    }

    /** Represents a TreasureBowl. */
    class TreasureBowl implements ITreasureBowl {

        /**
         * Constructs a new TreasureBowl.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureBowl);

        /** TreasureBowl totalCount. */
        public totalCount: number;

        /** TreasureBowl totalCost. */
        public totalCost: number;

        /** TreasureBowl curCount. */
        public curCount: number;

        /** TreasureBowl activityId. */
        public activityId: number;

        /**
         * Encodes the specified TreasureBowl message. Does not implicitly {@link gameProto.TreasureBowl.verify|verify} messages.
         * @param message TreasureBowl message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureBowl, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureBowl message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureBowl
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureBowl;
    }

    /** Properties of a C2S_ACTIVITY_LIST. */
    interface IC2S_ACTIVITY_LIST {
    }

    /** Represents a C2S_ACTIVITY_LIST. */
    class C2S_ACTIVITY_LIST implements IC2S_ACTIVITY_LIST {

        /**
         * Constructs a new C2S_ACTIVITY_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_LIST);

        /**
         * Encodes the specified C2S_ACTIVITY_LIST message. Does not implicitly {@link gameProto.C2S_ACTIVITY_LIST.verify|verify} messages.
         * @param message C2S_ACTIVITY_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_LIST;
    }

    /** Properties of a S2C_ACTIVITY_LIST. */
    interface IS2C_ACTIVITY_LIST {

        /** S2C_ACTIVITY_LIST activityList */
        activityList?: (gameProto.IActivityInfo[]|null);

        /** S2C_ACTIVITY_LIST isReset */
        isReset?: (boolean|null);
    }

    /** Represents a S2C_ACTIVITY_LIST. */
    class S2C_ACTIVITY_LIST implements IS2C_ACTIVITY_LIST {

        /**
         * Constructs a new S2C_ACTIVITY_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_LIST);

        /** S2C_ACTIVITY_LIST activityList. */
        public activityList: gameProto.IActivityInfo[];

        /** S2C_ACTIVITY_LIST isReset. */
        public isReset: boolean;

        /**
         * Encodes the specified S2C_ACTIVITY_LIST message. Does not implicitly {@link gameProto.S2C_ACTIVITY_LIST.verify|verify} messages.
         * @param message S2C_ACTIVITY_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_LIST;
    }

    /** Properties of a C2S_ACTIVITY_COMM_CONFIG. */
    interface IC2S_ACTIVITY_COMM_CONFIG {

        /** C2S_ACTIVITY_COMM_CONFIG activityId */
        activityId: number;
    }

    /** Represents a C2S_ACTIVITY_COMM_CONFIG. */
    class C2S_ACTIVITY_COMM_CONFIG implements IC2S_ACTIVITY_COMM_CONFIG {

        /**
         * Constructs a new C2S_ACTIVITY_COMM_CONFIG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_COMM_CONFIG);

        /** C2S_ACTIVITY_COMM_CONFIG activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_COMM_CONFIG message. Does not implicitly {@link gameProto.C2S_ACTIVITY_COMM_CONFIG.verify|verify} messages.
         * @param message C2S_ACTIVITY_COMM_CONFIG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_COMM_CONFIG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_COMM_CONFIG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_COMM_CONFIG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_COMM_CONFIG;
    }

    /** Properties of a S2C_ACTIVITY_COMM_CONFIG. */
    interface IS2C_ACTIVITY_COMM_CONFIG {

        /** S2C_ACTIVITY_COMM_CONFIG activityId */
        activityId: number;

        /** S2C_ACTIVITY_COMM_CONFIG tableData */
        tableData?: (string[]|null);
    }

    /** Represents a S2C_ACTIVITY_COMM_CONFIG. */
    class S2C_ACTIVITY_COMM_CONFIG implements IS2C_ACTIVITY_COMM_CONFIG {

        /**
         * Constructs a new S2C_ACTIVITY_COMM_CONFIG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_COMM_CONFIG);

        /** S2C_ACTIVITY_COMM_CONFIG activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_COMM_CONFIG tableData. */
        public tableData: string[];

        /**
         * Encodes the specified S2C_ACTIVITY_COMM_CONFIG message. Does not implicitly {@link gameProto.S2C_ACTIVITY_COMM_CONFIG.verify|verify} messages.
         * @param message S2C_ACTIVITY_COMM_CONFIG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_COMM_CONFIG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_COMM_CONFIG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_COMM_CONFIG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_COMM_CONFIG;
    }

    /** Properties of a S2C_ACTIVITY_CROSS. */
    interface IS2C_ACTIVITY_CROSS {
    }

    /** Represents a S2C_ACTIVITY_CROSS. */
    class S2C_ACTIVITY_CROSS implements IS2C_ACTIVITY_CROSS {

        /**
         * Constructs a new S2C_ACTIVITY_CROSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_CROSS);

        /**
         * Encodes the specified S2C_ACTIVITY_CROSS message. Does not implicitly {@link gameProto.S2C_ACTIVITY_CROSS.verify|verify} messages.
         * @param message S2C_ACTIVITY_CROSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_CROSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_CROSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_CROSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_CROSS;
    }

    /** Properties of a C2S_ACTIVITY_GET_SINGLE_PAY_INFO. */
    interface IC2S_ACTIVITY_GET_SINGLE_PAY_INFO {

        /** C2S_ACTIVITY_GET_SINGLE_PAY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_SINGLE_PAY_INFO. */
    class C2S_ACTIVITY_GET_SINGLE_PAY_INFO implements IC2S_ACTIVITY_GET_SINGLE_PAY_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_SINGLE_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_SINGLE_PAY_INFO);

        /** C2S_ACTIVITY_GET_SINGLE_PAY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_SINGLE_PAY_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_SINGLE_PAY_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_SINGLE_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_SINGLE_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_SINGLE_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_SINGLE_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_SINGLE_PAY_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_SINGLE_PAY_INFO. */
    interface IS2C_ACTIVITY_GET_SINGLE_PAY_INFO {

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO paySet */
        paySet?: (number[]|null);

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_SINGLE_PAY_INFO. */
    class S2C_ACTIVITY_GET_SINGLE_PAY_INFO implements IS2C_ACTIVITY_GET_SINGLE_PAY_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_SINGLE_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_SINGLE_PAY_INFO);

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO paySet. */
        public paySet: number[];

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_SINGLE_PAY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_SINGLE_PAY_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_SINGLE_PAY_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_SINGLE_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_SINGLE_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_SINGLE_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_SINGLE_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_SINGLE_PAY_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_SINGLE_PAY_REWARD. */
    interface IC2S_ACTIVITY_GET_SINGLE_PAY_REWARD {

        /** C2S_ACTIVITY_GET_SINGLE_PAY_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_SINGLE_PAY_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_SINGLE_PAY_REWARD. */
    class C2S_ACTIVITY_GET_SINGLE_PAY_REWARD implements IC2S_ACTIVITY_GET_SINGLE_PAY_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_SINGLE_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_SINGLE_PAY_REWARD);

        /** C2S_ACTIVITY_GET_SINGLE_PAY_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_SINGLE_PAY_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_SINGLE_PAY_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_SINGLE_PAY_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_SINGLE_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_SINGLE_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_SINGLE_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_SINGLE_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_SINGLE_PAY_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_SINGLE_PAY_REWARD. */
    interface IS2C_ACTIVITY_GET_SINGLE_PAY_REWARD {

        /** S2C_ACTIVITY_GET_SINGLE_PAY_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_GET_SINGLE_PAY_REWARD. */
    class S2C_ACTIVITY_GET_SINGLE_PAY_REWARD implements IS2C_ACTIVITY_GET_SINGLE_PAY_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_SINGLE_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_SINGLE_PAY_REWARD);

        /** S2C_ACTIVITY_GET_SINGLE_PAY_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_SINGLE_PAY_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_SINGLE_PAY_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_SINGLE_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_SINGLE_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_SINGLE_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_SINGLE_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_SINGLE_PAY_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_TOTAL_PAY_INFO. */
    interface IC2S_ACTIVITY_GET_TOTAL_PAY_INFO {

        /** C2S_ACTIVITY_GET_TOTAL_PAY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_TOTAL_PAY_INFO. */
    class C2S_ACTIVITY_GET_TOTAL_PAY_INFO implements IC2S_ACTIVITY_GET_TOTAL_PAY_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_TOTAL_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_TOTAL_PAY_INFO);

        /** C2S_ACTIVITY_GET_TOTAL_PAY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_TOTAL_PAY_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_TOTAL_PAY_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_TOTAL_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_TOTAL_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_TOTAL_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_TOTAL_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_TOTAL_PAY_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_TOTAL_PAY_INFO. */
    interface IS2C_ACTIVITY_GET_TOTAL_PAY_INFO {

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO paySum */
        paySum?: (number|null);

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_TOTAL_PAY_INFO. */
    class S2C_ACTIVITY_GET_TOTAL_PAY_INFO implements IS2C_ACTIVITY_GET_TOTAL_PAY_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_TOTAL_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_TOTAL_PAY_INFO);

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO paySum. */
        public paySum: number;

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_TOTAL_PAY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_TOTAL_PAY_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_TOTAL_PAY_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_TOTAL_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_TOTAL_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_TOTAL_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_TOTAL_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_TOTAL_PAY_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_TOTAL_PAY_REWARD. */
    interface IC2S_ACTIVITY_GET_TOTAL_PAY_REWARD {

        /** C2S_ACTIVITY_GET_TOTAL_PAY_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_TOTAL_PAY_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_TOTAL_PAY_REWARD. */
    class C2S_ACTIVITY_GET_TOTAL_PAY_REWARD implements IC2S_ACTIVITY_GET_TOTAL_PAY_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_TOTAL_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_TOTAL_PAY_REWARD);

        /** C2S_ACTIVITY_GET_TOTAL_PAY_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_TOTAL_PAY_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_TOTAL_PAY_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_TOTAL_PAY_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_TOTAL_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_TOTAL_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_TOTAL_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_TOTAL_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_TOTAL_PAY_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_TOTAL_PAY_REWARD. */
    interface IS2C_ACTIVITY_GET_TOTAL_PAY_REWARD {

        /** S2C_ACTIVITY_GET_TOTAL_PAY_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_GET_TOTAL_PAY_REWARD. */
    class S2C_ACTIVITY_GET_TOTAL_PAY_REWARD implements IS2C_ACTIVITY_GET_TOTAL_PAY_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_TOTAL_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_TOTAL_PAY_REWARD);

        /** S2C_ACTIVITY_GET_TOTAL_PAY_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_TOTAL_PAY_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_TOTAL_PAY_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_TOTAL_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_TOTAL_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_TOTAL_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_TOTAL_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_TOTAL_PAY_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_CONSUME_GIFT_INFO. */
    interface IC2S_ACTIVITY_GET_CONSUME_GIFT_INFO {

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_CONSUME_GIFT_INFO. */
    class C2S_ACTIVITY_GET_CONSUME_GIFT_INFO implements IC2S_ACTIVITY_GET_CONSUME_GIFT_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_CONSUME_GIFT_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_CONSUME_GIFT_INFO);

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_CONSUME_GIFT_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_CONSUME_GIFT_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_CONSUME_GIFT_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_CONSUME_GIFT_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_CONSUME_GIFT_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_CONSUME_GIFT_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_CONSUME_GIFT_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_CONSUME_GIFT_INFO. */
    interface IS2C_ACTIVITY_GET_CONSUME_GIFT_INFO {

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO consumeSum */
        consumeSum?: (number|null);

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_CONSUME_GIFT_INFO. */
    class S2C_ACTIVITY_GET_CONSUME_GIFT_INFO implements IS2C_ACTIVITY_GET_CONSUME_GIFT_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_CONSUME_GIFT_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_CONSUME_GIFT_INFO);

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO consumeSum. */
        public consumeSum: number;

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_CONSUME_GIFT_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_CONSUME_GIFT_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_CONSUME_GIFT_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_CONSUME_GIFT_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_CONSUME_GIFT_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_CONSUME_GIFT_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_CONSUME_GIFT_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD. */
    interface IC2S_ACTIVITY_GET_CONSUME_GIFT_REWARD {

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD. */
    class C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD implements IC2S_ACTIVITY_GET_CONSUME_GIFT_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_CONSUME_GIFT_REWARD);

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_CONSUME_GIFT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_CONSUME_GIFT_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD. */
    interface IS2C_ACTIVITY_GET_CONSUME_GIFT_REWARD {

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD. */
    class S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD implements IS2C_ACTIVITY_GET_CONSUME_GIFT_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_CONSUME_GIFT_REWARD);

        /** S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_CONSUME_GIFT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_CONSUME_GIFT_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_LOGIN_DAYS_INFO. */
    interface IC2S_ACTIVITY_GET_LOGIN_DAYS_INFO {

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_LOGIN_DAYS_INFO. */
    class C2S_ACTIVITY_GET_LOGIN_DAYS_INFO implements IC2S_ACTIVITY_GET_LOGIN_DAYS_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_LOGIN_DAYS_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_LOGIN_DAYS_INFO);

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_LOGIN_DAYS_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_LOGIN_DAYS_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_LOGIN_DAYS_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_LOGIN_DAYS_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_LOGIN_DAYS_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_LOGIN_DAYS_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_LOGIN_DAYS_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_LOGIN_DAYS_INFO. */
    interface IS2C_ACTIVITY_GET_LOGIN_DAYS_INFO {

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO loginDaySet */
        loginDaySet?: (number[]|null);

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_LOGIN_DAYS_INFO. */
    class S2C_ACTIVITY_GET_LOGIN_DAYS_INFO implements IS2C_ACTIVITY_GET_LOGIN_DAYS_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_LOGIN_DAYS_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_LOGIN_DAYS_INFO);

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO loginDaySet. */
        public loginDaySet: number[];

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_LOGIN_DAYS_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_LOGIN_DAYS_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_LOGIN_DAYS_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_LOGIN_DAYS_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_LOGIN_DAYS_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_LOGIN_DAYS_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_LOGIN_DAYS_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD. */
    interface IC2S_ACTIVITY_GET_LOGIN_DAYS_REWARD {

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD. */
    class C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD implements IC2S_ACTIVITY_GET_LOGIN_DAYS_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_LOGIN_DAYS_REWARD);

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_LOGIN_DAYS_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_LOGIN_DAYS_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD. */
    interface IS2C_ACTIVITY_GET_LOGIN_DAYS_REWARD {

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD. */
    class S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD implements IS2C_ACTIVITY_GET_LOGIN_DAYS_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_LOGIN_DAYS_REWARD);

        /** S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_LOGIN_DAYS_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_LOGIN_DAYS_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_FIRTS_PAY_INFO. */
    interface IC2S_ACTIVITY_GET_FIRTS_PAY_INFO {

        /** C2S_ACTIVITY_GET_FIRTS_PAY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_FIRTS_PAY_INFO. */
    class C2S_ACTIVITY_GET_FIRTS_PAY_INFO implements IC2S_ACTIVITY_GET_FIRTS_PAY_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_FIRTS_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_FIRTS_PAY_INFO);

        /** C2S_ACTIVITY_GET_FIRTS_PAY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_FIRTS_PAY_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_FIRTS_PAY_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_FIRTS_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_FIRTS_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_FIRTS_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_FIRTS_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_FIRTS_PAY_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_FIRTS_PAY_INFO. */
    interface IS2C_ACTIVITY_GET_FIRTS_PAY_INFO {

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO activityId */
        activityId: number;

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO paySet */
        paySet?: (number[]|null);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO configId */
        configId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_FIRTS_PAY_INFO. */
    class S2C_ACTIVITY_GET_FIRTS_PAY_INFO implements IS2C_ACTIVITY_GET_FIRTS_PAY_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_FIRTS_PAY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_FIRTS_PAY_INFO);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO paySet. */
        public paySet: number[];

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_FIRTS_PAY_INFO configId. */
        public configId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_FIRTS_PAY_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_FIRTS_PAY_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_FIRTS_PAY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_FIRTS_PAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_FIRTS_PAY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_FIRTS_PAY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_FIRTS_PAY_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_FIRTS_PAY_REWARD. */
    interface IC2S_ACTIVITY_GET_FIRTS_PAY_REWARD {

        /** C2S_ACTIVITY_GET_FIRTS_PAY_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_FIRTS_PAY_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_FIRTS_PAY_REWARD. */
    class C2S_ACTIVITY_GET_FIRTS_PAY_REWARD implements IC2S_ACTIVITY_GET_FIRTS_PAY_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_FIRTS_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_FIRTS_PAY_REWARD);

        /** C2S_ACTIVITY_GET_FIRTS_PAY_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_FIRTS_PAY_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_FIRTS_PAY_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_FIRTS_PAY_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_FIRTS_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_FIRTS_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_FIRTS_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_FIRTS_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_FIRTS_PAY_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_FIRTS_PAY_REWARD. */
    interface IS2C_ACTIVITY_GET_FIRTS_PAY_REWARD {

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD activityId */
        activityId: number;

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD configId */
        configId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_FIRTS_PAY_REWARD. */
    class S2C_ACTIVITY_GET_FIRTS_PAY_REWARD implements IS2C_ACTIVITY_GET_FIRTS_PAY_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_FIRTS_PAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_FIRTS_PAY_REWARD);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /** S2C_ACTIVITY_GET_FIRTS_PAY_REWARD configId. */
        public configId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_FIRTS_PAY_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_FIRTS_PAY_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_FIRTS_PAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_FIRTS_PAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_FIRTS_PAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_FIRTS_PAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_FIRTS_PAY_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_BUY_GROWTH_FUND. */
    interface IC2S_ACTIVITY_BUY_GROWTH_FUND {

        /** C2S_ACTIVITY_BUY_GROWTH_FUND activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_BUY_GROWTH_FUND. */
    class C2S_ACTIVITY_BUY_GROWTH_FUND implements IC2S_ACTIVITY_BUY_GROWTH_FUND {

        /**
         * Constructs a new C2S_ACTIVITY_BUY_GROWTH_FUND.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_BUY_GROWTH_FUND);

        /** C2S_ACTIVITY_BUY_GROWTH_FUND activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_BUY_GROWTH_FUND message. Does not implicitly {@link gameProto.C2S_ACTIVITY_BUY_GROWTH_FUND.verify|verify} messages.
         * @param message C2S_ACTIVITY_BUY_GROWTH_FUND message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_BUY_GROWTH_FUND, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_BUY_GROWTH_FUND message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_BUY_GROWTH_FUND
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_BUY_GROWTH_FUND;
    }

    /** Properties of a S2C_ACTIVITY_BUY_GROWTH_FUND. */
    interface IS2C_ACTIVITY_BUY_GROWTH_FUND {

        /** S2C_ACTIVITY_BUY_GROWTH_FUND buyGrowthFund */
        buyGrowthFund?: (boolean|null);

        /** S2C_ACTIVITY_BUY_GROWTH_FUND paySet */
        paySet?: (number[]|null);

        /** S2C_ACTIVITY_BUY_GROWTH_FUND awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_BUY_GROWTH_FUND activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_BUY_GROWTH_FUND. */
    class S2C_ACTIVITY_BUY_GROWTH_FUND implements IS2C_ACTIVITY_BUY_GROWTH_FUND {

        /**
         * Constructs a new S2C_ACTIVITY_BUY_GROWTH_FUND.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_BUY_GROWTH_FUND);

        /** S2C_ACTIVITY_BUY_GROWTH_FUND buyGrowthFund. */
        public buyGrowthFund: boolean;

        /** S2C_ACTIVITY_BUY_GROWTH_FUND paySet. */
        public paySet: number[];

        /** S2C_ACTIVITY_BUY_GROWTH_FUND awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_BUY_GROWTH_FUND activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_BUY_GROWTH_FUND message. Does not implicitly {@link gameProto.S2C_ACTIVITY_BUY_GROWTH_FUND.verify|verify} messages.
         * @param message S2C_ACTIVITY_BUY_GROWTH_FUND message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_BUY_GROWTH_FUND, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_BUY_GROWTH_FUND message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_BUY_GROWTH_FUND
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_BUY_GROWTH_FUND;
    }

    /** Properties of a C2S_ACTIVITY_GET_GROWTH_FUND_INFO. */
    interface IC2S_ACTIVITY_GET_GROWTH_FUND_INFO {

        /** C2S_ACTIVITY_GET_GROWTH_FUND_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_GROWTH_FUND_INFO. */
    class C2S_ACTIVITY_GET_GROWTH_FUND_INFO implements IC2S_ACTIVITY_GET_GROWTH_FUND_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_GROWTH_FUND_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_GROWTH_FUND_INFO);

        /** C2S_ACTIVITY_GET_GROWTH_FUND_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_GROWTH_FUND_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_GROWTH_FUND_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_GROWTH_FUND_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_GROWTH_FUND_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_GROWTH_FUND_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_GROWTH_FUND_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_GROWTH_FUND_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_GROWTH_FUND_INFO. */
    interface IS2C_ACTIVITY_GET_GROWTH_FUND_INFO {

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO buyGrowthFund */
        buyGrowthFund?: (boolean|null);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO paySet */
        paySet?: (number[]|null);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_GROWTH_FUND_INFO. */
    class S2C_ACTIVITY_GET_GROWTH_FUND_INFO implements IS2C_ACTIVITY_GET_GROWTH_FUND_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_GROWTH_FUND_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_GROWTH_FUND_INFO);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO buyGrowthFund. */
        public buyGrowthFund: boolean;

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO paySet. */
        public paySet: number[];

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_GROWTH_FUND_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_GROWTH_FUND_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_GROWTH_FUND_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_GROWTH_FUND_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_GROWTH_FUND_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_GROWTH_FUND_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_GROWTH_FUND_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_GROWTH_FUND_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_GROWTH_FUND_REWARD. */
    interface IC2S_ACTIVITY_GET_GROWTH_FUND_REWARD {

        /** C2S_ACTIVITY_GET_GROWTH_FUND_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_GROWTH_FUND_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_GROWTH_FUND_REWARD. */
    class C2S_ACTIVITY_GET_GROWTH_FUND_REWARD implements IC2S_ACTIVITY_GET_GROWTH_FUND_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_GROWTH_FUND_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_GROWTH_FUND_REWARD);

        /** C2S_ACTIVITY_GET_GROWTH_FUND_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_GROWTH_FUND_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_GROWTH_FUND_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_GROWTH_FUND_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_GROWTH_FUND_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_GROWTH_FUND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_GROWTH_FUND_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_GROWTH_FUND_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_GROWTH_FUND_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_GROWTH_FUND_REWARD. */
    interface IS2C_ACTIVITY_GET_GROWTH_FUND_REWARD {

        /** S2C_ACTIVITY_GET_GROWTH_FUND_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_REWARD configId */
        configId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_GROWTH_FUND_REWARD. */
    class S2C_ACTIVITY_GET_GROWTH_FUND_REWARD implements IS2C_ACTIVITY_GET_GROWTH_FUND_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_GROWTH_FUND_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_GROWTH_FUND_REWARD);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /** S2C_ACTIVITY_GET_GROWTH_FUND_REWARD configId. */
        public configId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_GROWTH_FUND_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_GROWTH_FUND_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_GROWTH_FUND_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_GROWTH_FUND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_GROWTH_FUND_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_GROWTH_FUND_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_GROWTH_FUND_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_BUY_WEEK_MONTH_CARD. */
    interface IC2S_ACTIVITY_BUY_WEEK_MONTH_CARD {

        /** C2S_ACTIVITY_BUY_WEEK_MONTH_CARD activityId */
        activityId?: (number|null);

        /** C2S_ACTIVITY_BUY_WEEK_MONTH_CARD cardType */
        cardType?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_BUY_WEEK_MONTH_CARD. */
    class C2S_ACTIVITY_BUY_WEEK_MONTH_CARD implements IC2S_ACTIVITY_BUY_WEEK_MONTH_CARD {

        /**
         * Constructs a new C2S_ACTIVITY_BUY_WEEK_MONTH_CARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_BUY_WEEK_MONTH_CARD);

        /** C2S_ACTIVITY_BUY_WEEK_MONTH_CARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_BUY_WEEK_MONTH_CARD cardType. */
        public cardType: number;

        /**
         * Encodes the specified C2S_ACTIVITY_BUY_WEEK_MONTH_CARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_BUY_WEEK_MONTH_CARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_BUY_WEEK_MONTH_CARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_BUY_WEEK_MONTH_CARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_BUY_WEEK_MONTH_CARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_BUY_WEEK_MONTH_CARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_BUY_WEEK_MONTH_CARD;
    }

    /** Properties of a S2C_ACTIVITY_BUY_WEEK_MONTH_CARD. */
    interface IS2C_ACTIVITY_BUY_WEEK_MONTH_CARD {

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD code */
        code?: (number|null);

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD cardType */
        cardType?: (number|null);

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD rewardCount */
        rewardCount?: (number|null);

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD canReceive */
        canReceive?: (boolean|null);
    }

    /** Represents a S2C_ACTIVITY_BUY_WEEK_MONTH_CARD. */
    class S2C_ACTIVITY_BUY_WEEK_MONTH_CARD implements IS2C_ACTIVITY_BUY_WEEK_MONTH_CARD {

        /**
         * Constructs a new S2C_ACTIVITY_BUY_WEEK_MONTH_CARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_BUY_WEEK_MONTH_CARD);

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD code. */
        public code: number;

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD cardType. */
        public cardType: number;

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD rewardCount. */
        public rewardCount: number;

        /** S2C_ACTIVITY_BUY_WEEK_MONTH_CARD canReceive. */
        public canReceive: boolean;

        /**
         * Encodes the specified S2C_ACTIVITY_BUY_WEEK_MONTH_CARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_BUY_WEEK_MONTH_CARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_BUY_WEEK_MONTH_CARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_BUY_WEEK_MONTH_CARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_BUY_WEEK_MONTH_CARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_BUY_WEEK_MONTH_CARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_BUY_WEEK_MONTH_CARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO. */
    interface IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO {

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO. */
    class C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO implements IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO);

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_WEEK_MONTH_CARD_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO. */
    interface IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO {

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO cardInfo */
        cardInfo?: (gameProto.IWeekMonthCardInfo[]|null);

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO. */
    class S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO implements IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO);

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO cardInfo. */
        public cardInfo: gameProto.IWeekMonthCardInfo[];

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_WEEK_MONTH_CARD_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD. */
    interface IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD {

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD cardType */
        cardType: number;
    }

    /** Represents a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD. */
    class C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD implements IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD);

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD cardType. */
        public cardType: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD. */
    interface IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD {

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD activityAward */
        activityAward?: (gameProto.IWeekMonthRewardInfo|null);
    }

    /** Represents a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD. */
    class S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD implements IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD);

        /** S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD activityAward. */
        public activityAward?: (gameProto.IWeekMonthRewardInfo|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_WEEK_MONTH_CARD_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO. */
    interface IC2S_ACTIVITY_GET_ONE_RMB_BUY_INFO {

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO. */
    class C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO implements IC2S_ACTIVITY_GET_ONE_RMB_BUY_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_ONE_RMB_BUY_INFO);

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_ONE_RMB_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_ONE_RMB_BUY_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO. */
    interface IS2C_ACTIVITY_GET_ONE_RMB_BUY_INFO {

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO paySet */
        paySet?: (number[]|null);

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO. */
    class S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO implements IS2C_ACTIVITY_GET_ONE_RMB_BUY_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_ONE_RMB_BUY_INFO);

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO paySet. */
        public paySet: number[];

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_ONE_RMB_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_ONE_RMB_BUY_INFO;
    }

    /** Properties of a C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD. */
    interface IC2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD {

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD. */
    class C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD implements IC2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD);

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_ONE_RMB_BUY_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD. */
    interface IS2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD {

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD. */
    class S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD implements IS2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD);

        /** S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_ONE_RMB_BUY_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_ZHI_GOU_INFO. */
    interface IC2S_ACTIVITY_ZHI_GOU_INFO {

        /** C2S_ACTIVITY_ZHI_GOU_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_ZHI_GOU_INFO. */
    class C2S_ACTIVITY_ZHI_GOU_INFO implements IC2S_ACTIVITY_ZHI_GOU_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_ZHI_GOU_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_ZHI_GOU_INFO);

        /** C2S_ACTIVITY_ZHI_GOU_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_ZHI_GOU_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_ZHI_GOU_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_ZHI_GOU_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_ZHI_GOU_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_ZHI_GOU_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_ZHI_GOU_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_ZHI_GOU_INFO;
    }

    /** Properties of a S2C_ACTIVITY_ZHI_GOU_INFO. */
    interface IS2C_ACTIVITY_ZHI_GOU_INFO {

        /** S2C_ACTIVITY_ZHI_GOU_INFO idCount */
        idCount?: (gameProto.ITuple[]|null);

        /** S2C_ACTIVITY_ZHI_GOU_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_ZHI_GOU_INFO. */
    class S2C_ACTIVITY_ZHI_GOU_INFO implements IS2C_ACTIVITY_ZHI_GOU_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_ZHI_GOU_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_ZHI_GOU_INFO);

        /** S2C_ACTIVITY_ZHI_GOU_INFO idCount. */
        public idCount: gameProto.ITuple[];

        /** S2C_ACTIVITY_ZHI_GOU_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_ZHI_GOU_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_ZHI_GOU_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_ZHI_GOU_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_ZHI_GOU_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_ZHI_GOU_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_ZHI_GOU_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_ZHI_GOU_INFO;
    }

    /** Properties of a S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN. */
    interface IS2C_ACTIVITY_KING_FIGHT_COUNT_DOWN {

        /** S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN countDown */
        countDown: number;
    }

    /** Represents a S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN. */
    class S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN implements IS2C_ACTIVITY_KING_FIGHT_COUNT_DOWN {

        /**
         * Constructs a new S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_KING_FIGHT_COUNT_DOWN);

        /** S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN countDown. */
        public countDown: number;

        /**
         * Encodes the specified S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN message. Does not implicitly {@link gameProto.S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN.verify|verify} messages.
         * @param message S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_KING_FIGHT_COUNT_DOWN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_KING_FIGHT_COUNT_DOWN;
    }

    /** Properties of a BbEvent. */
    interface IBbEvent {

        /** BbEvent cityId */
        cityId: number;

        /** BbEvent yellowArmyConfigId */
        yellowArmyConfigId: number;

        /** BbEvent npcId */
        npcId?: (number[]|null);

        /** BbEvent armyCount */
        armyCount: number;

        /** BbEvent armyForce */
        armyForce: number;

        /** BbEvent drop */
        drop: number;

        /** BbEvent isOver */
        isOver: boolean;
    }

    /** Represents a BbEvent. */
    class BbEvent implements IBbEvent {

        /**
         * Constructs a new BbEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBbEvent);

        /** BbEvent cityId. */
        public cityId: number;

        /** BbEvent yellowArmyConfigId. */
        public yellowArmyConfigId: number;

        /** BbEvent npcId. */
        public npcId: number[];

        /** BbEvent armyCount. */
        public armyCount: number;

        /** BbEvent armyForce. */
        public armyForce: number;

        /** BbEvent drop. */
        public drop: number;

        /** BbEvent isOver. */
        public isOver: boolean;

        /**
         * Encodes the specified BbEvent message. Does not implicitly {@link gameProto.BbEvent.verify|verify} messages.
         * @param message BbEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBbEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BbEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BbEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BbEvent;
    }

    /** Properties of a C2S_BARBARIAN_BREAKOUT_EVENT. */
    interface IC2S_BARBARIAN_BREAKOUT_EVENT {
    }

    /** Represents a C2S_BARBARIAN_BREAKOUT_EVENT. */
    class C2S_BARBARIAN_BREAKOUT_EVENT implements IC2S_BARBARIAN_BREAKOUT_EVENT {

        /**
         * Constructs a new C2S_BARBARIAN_BREAKOUT_EVENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BARBARIAN_BREAKOUT_EVENT);

        /**
         * Encodes the specified C2S_BARBARIAN_BREAKOUT_EVENT message. Does not implicitly {@link gameProto.C2S_BARBARIAN_BREAKOUT_EVENT.verify|verify} messages.
         * @param message C2S_BARBARIAN_BREAKOUT_EVENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BARBARIAN_BREAKOUT_EVENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BARBARIAN_BREAKOUT_EVENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BARBARIAN_BREAKOUT_EVENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BARBARIAN_BREAKOUT_EVENT;
    }

    /** Properties of a S2C_BARBARIAN_BREAKOUT_EVENT. */
    interface IS2C_BARBARIAN_BREAKOUT_EVENT {

        /** S2C_BARBARIAN_BREAKOUT_EVENT bEvent */
        bEvent?: (gameProto.IBbEvent[]|null);
    }

    /** Represents a S2C_BARBARIAN_BREAKOUT_EVENT. */
    class S2C_BARBARIAN_BREAKOUT_EVENT implements IS2C_BARBARIAN_BREAKOUT_EVENT {

        /**
         * Constructs a new S2C_BARBARIAN_BREAKOUT_EVENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BARBARIAN_BREAKOUT_EVENT);

        /** S2C_BARBARIAN_BREAKOUT_EVENT bEvent. */
        public bEvent: gameProto.IBbEvent[];

        /**
         * Encodes the specified S2C_BARBARIAN_BREAKOUT_EVENT message. Does not implicitly {@link gameProto.S2C_BARBARIAN_BREAKOUT_EVENT.verify|verify} messages.
         * @param message S2C_BARBARIAN_BREAKOUT_EVENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BARBARIAN_BREAKOUT_EVENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BARBARIAN_BREAKOUT_EVENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BARBARIAN_BREAKOUT_EVENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BARBARIAN_BREAKOUT_EVENT;
    }

    /** Properties of a C2S_XIANGYANG_INFO. */
    interface IC2S_XIANGYANG_INFO {
    }

    /** Represents a C2S_XIANGYANG_INFO. */
    class C2S_XIANGYANG_INFO implements IC2S_XIANGYANG_INFO {

        /**
         * Constructs a new C2S_XIANGYANG_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_XIANGYANG_INFO);

        /**
         * Encodes the specified C2S_XIANGYANG_INFO message. Does not implicitly {@link gameProto.C2S_XIANGYANG_INFO.verify|verify} messages.
         * @param message C2S_XIANGYANG_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_XIANGYANG_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_XIANGYANG_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_XIANGYANG_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_XIANGYANG_INFO;
    }

    /** Properties of a S2C_XIANGYANG_INFO. */
    interface IS2C_XIANGYANG_INFO {

        /** S2C_XIANGYANG_INFO commRank */
        commRank?: (gameProto.ICommRank[]|null);

        /** S2C_XIANGYANG_INFO wei */
        wei: number;

        /** S2C_XIANGYANG_INFO shu */
        shu: number;

        /** S2C_XIANGYANG_INFO wu */
        wu: number;

        /** S2C_XIANGYANG_INFO warCount */
        warCount: number;

        /** S2C_XIANGYANG_INFO receiveId */
        receiveId: number;

        /** S2C_XIANGYANG_INFO emperorCountryReard */
        emperorCountryReard: boolean;
    }

    /** Represents a S2C_XIANGYANG_INFO. */
    class S2C_XIANGYANG_INFO implements IS2C_XIANGYANG_INFO {

        /**
         * Constructs a new S2C_XIANGYANG_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_XIANGYANG_INFO);

        /** S2C_XIANGYANG_INFO commRank. */
        public commRank: gameProto.ICommRank[];

        /** S2C_XIANGYANG_INFO wei. */
        public wei: number;

        /** S2C_XIANGYANG_INFO shu. */
        public shu: number;

        /** S2C_XIANGYANG_INFO wu. */
        public wu: number;

        /** S2C_XIANGYANG_INFO warCount. */
        public warCount: number;

        /** S2C_XIANGYANG_INFO receiveId. */
        public receiveId: number;

        /** S2C_XIANGYANG_INFO emperorCountryReard. */
        public emperorCountryReard: boolean;

        /**
         * Encodes the specified S2C_XIANGYANG_INFO message. Does not implicitly {@link gameProto.S2C_XIANGYANG_INFO.verify|verify} messages.
         * @param message S2C_XIANGYANG_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_XIANGYANG_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_XIANGYANG_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_XIANGYANG_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_XIANGYANG_INFO;
    }

    /** Properties of a C2S_XIANGYANG_RECEIVE. */
    interface IC2S_XIANGYANG_RECEIVE {

        /** C2S_XIANGYANG_RECEIVE receiveId */
        receiveId: number;
    }

    /** Represents a C2S_XIANGYANG_RECEIVE. */
    class C2S_XIANGYANG_RECEIVE implements IC2S_XIANGYANG_RECEIVE {

        /**
         * Constructs a new C2S_XIANGYANG_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_XIANGYANG_RECEIVE);

        /** C2S_XIANGYANG_RECEIVE receiveId. */
        public receiveId: number;

        /**
         * Encodes the specified C2S_XIANGYANG_RECEIVE message. Does not implicitly {@link gameProto.C2S_XIANGYANG_RECEIVE.verify|verify} messages.
         * @param message C2S_XIANGYANG_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_XIANGYANG_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_XIANGYANG_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_XIANGYANG_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_XIANGYANG_RECEIVE;
    }

    /** Properties of a S2C_XIANGYANG_RECEIVE. */
    interface IS2C_XIANGYANG_RECEIVE {

        /** S2C_XIANGYANG_RECEIVE state */
        state: number;

        /** S2C_XIANGYANG_RECEIVE receiveId */
        receiveId: number;

        /** S2C_XIANGYANG_RECEIVE valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_XIANGYANG_RECEIVE. */
    class S2C_XIANGYANG_RECEIVE implements IS2C_XIANGYANG_RECEIVE {

        /**
         * Constructs a new S2C_XIANGYANG_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_XIANGYANG_RECEIVE);

        /** S2C_XIANGYANG_RECEIVE state. */
        public state: number;

        /** S2C_XIANGYANG_RECEIVE receiveId. */
        public receiveId: number;

        /** S2C_XIANGYANG_RECEIVE valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_XIANGYANG_RECEIVE message. Does not implicitly {@link gameProto.S2C_XIANGYANG_RECEIVE.verify|verify} messages.
         * @param message S2C_XIANGYANG_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_XIANGYANG_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_XIANGYANG_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_XIANGYANG_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_XIANGYANG_RECEIVE;
    }

    /** Properties of a S2C_XIANGYANG_RECEIVE_NOTICE. */
    interface IS2C_XIANGYANG_RECEIVE_NOTICE {

        /** S2C_XIANGYANG_RECEIVE_NOTICE receiveId */
        receiveId: number;
    }

    /** Represents a S2C_XIANGYANG_RECEIVE_NOTICE. */
    class S2C_XIANGYANG_RECEIVE_NOTICE implements IS2C_XIANGYANG_RECEIVE_NOTICE {

        /**
         * Constructs a new S2C_XIANGYANG_RECEIVE_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_XIANGYANG_RECEIVE_NOTICE);

        /** S2C_XIANGYANG_RECEIVE_NOTICE receiveId. */
        public receiveId: number;

        /**
         * Encodes the specified S2C_XIANGYANG_RECEIVE_NOTICE message. Does not implicitly {@link gameProto.S2C_XIANGYANG_RECEIVE_NOTICE.verify|verify} messages.
         * @param message S2C_XIANGYANG_RECEIVE_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_XIANGYANG_RECEIVE_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_XIANGYANG_RECEIVE_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_XIANGYANG_RECEIVE_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_XIANGYANG_RECEIVE_NOTICE;
    }

    /** Properties of a C2S_XIANGYANG_EMPROR_COUNTRY_REWARD. */
    interface IC2S_XIANGYANG_EMPROR_COUNTRY_REWARD {
    }

    /** Represents a C2S_XIANGYANG_EMPROR_COUNTRY_REWARD. */
    class C2S_XIANGYANG_EMPROR_COUNTRY_REWARD implements IC2S_XIANGYANG_EMPROR_COUNTRY_REWARD {

        /**
         * Constructs a new C2S_XIANGYANG_EMPROR_COUNTRY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_XIANGYANG_EMPROR_COUNTRY_REWARD);

        /**
         * Encodes the specified C2S_XIANGYANG_EMPROR_COUNTRY_REWARD message. Does not implicitly {@link gameProto.C2S_XIANGYANG_EMPROR_COUNTRY_REWARD.verify|verify} messages.
         * @param message C2S_XIANGYANG_EMPROR_COUNTRY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_XIANGYANG_EMPROR_COUNTRY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_XIANGYANG_EMPROR_COUNTRY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_XIANGYANG_EMPROR_COUNTRY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_XIANGYANG_EMPROR_COUNTRY_REWARD;
    }

    /** Properties of a S2C_XIANGYANG_EMPROR_COUNTRY_REWARD. */
    interface IS2C_XIANGYANG_EMPROR_COUNTRY_REWARD {

        /** S2C_XIANGYANG_EMPROR_COUNTRY_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_XIANGYANG_EMPROR_COUNTRY_REWARD. */
    class S2C_XIANGYANG_EMPROR_COUNTRY_REWARD implements IS2C_XIANGYANG_EMPROR_COUNTRY_REWARD {

        /**
         * Constructs a new S2C_XIANGYANG_EMPROR_COUNTRY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_XIANGYANG_EMPROR_COUNTRY_REWARD);

        /** S2C_XIANGYANG_EMPROR_COUNTRY_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_XIANGYANG_EMPROR_COUNTRY_REWARD message. Does not implicitly {@link gameProto.S2C_XIANGYANG_EMPROR_COUNTRY_REWARD.verify|verify} messages.
         * @param message S2C_XIANGYANG_EMPROR_COUNTRY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_XIANGYANG_EMPROR_COUNTRY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_XIANGYANG_EMPROR_COUNTRY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_XIANGYANG_EMPROR_COUNTRY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_XIANGYANG_EMPROR_COUNTRY_REWARD;
    }

    /** Properties of a S2C_EMPEROR_CHANE_NOTICE. */
    interface IS2C_EMPEROR_CHANE_NOTICE {

        /** S2C_EMPEROR_CHANE_NOTICE countryId */
        countryId?: (number|null);

        /** S2C_EMPEROR_CHANE_NOTICE playerName */
        playerName?: (string|null);

        /** S2C_EMPEROR_CHANE_NOTICE changeStamp */
        changeStamp?: (number|null);
    }

    /** Represents a S2C_EMPEROR_CHANE_NOTICE. */
    class S2C_EMPEROR_CHANE_NOTICE implements IS2C_EMPEROR_CHANE_NOTICE {

        /**
         * Constructs a new S2C_EMPEROR_CHANE_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EMPEROR_CHANE_NOTICE);

        /** S2C_EMPEROR_CHANE_NOTICE countryId. */
        public countryId: number;

        /** S2C_EMPEROR_CHANE_NOTICE playerName. */
        public playerName: string;

        /** S2C_EMPEROR_CHANE_NOTICE changeStamp. */
        public changeStamp: number;

        /**
         * Encodes the specified S2C_EMPEROR_CHANE_NOTICE message. Does not implicitly {@link gameProto.S2C_EMPEROR_CHANE_NOTICE.verify|verify} messages.
         * @param message S2C_EMPEROR_CHANE_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EMPEROR_CHANE_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EMPEROR_CHANE_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EMPEROR_CHANE_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EMPEROR_CHANE_NOTICE;
    }

    /** Properties of a C2S_ACTIVITY_GET_PRIZE_INFO. */
    interface IC2S_ACTIVITY_GET_PRIZE_INFO {

        /** C2S_ACTIVITY_GET_PRIZE_INFO activityId */
        activityId: number;
    }

    /** Represents a C2S_ACTIVITY_GET_PRIZE_INFO. */
    class C2S_ACTIVITY_GET_PRIZE_INFO implements IC2S_ACTIVITY_GET_PRIZE_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_GET_PRIZE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_GET_PRIZE_INFO);

        /** C2S_ACTIVITY_GET_PRIZE_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_GET_PRIZE_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_GET_PRIZE_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_GET_PRIZE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_GET_PRIZE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_GET_PRIZE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_GET_PRIZE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_GET_PRIZE_INFO;
    }

    /** Properties of a S2C_ACTIVITY_GET_PRIZE_INFO. */
    interface IS2C_ACTIVITY_GET_PRIZE_INFO {

        /** S2C_ACTIVITY_GET_PRIZE_INFO prizeInfo */
        prizeInfo?: (gameProto.IPrizeInfo|null);

        /** S2C_ACTIVITY_GET_PRIZE_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_GET_PRIZE_INFO. */
    class S2C_ACTIVITY_GET_PRIZE_INFO implements IS2C_ACTIVITY_GET_PRIZE_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_GET_PRIZE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_GET_PRIZE_INFO);

        /** S2C_ACTIVITY_GET_PRIZE_INFO prizeInfo. */
        public prizeInfo?: (gameProto.IPrizeInfo|null);

        /** S2C_ACTIVITY_GET_PRIZE_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_GET_PRIZE_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_GET_PRIZE_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_GET_PRIZE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_GET_PRIZE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_GET_PRIZE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_GET_PRIZE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_GET_PRIZE_INFO;
    }

    /** Properties of a C2S_ACTIVITY_PRIZE_PLAY. */
    interface IC2S_ACTIVITY_PRIZE_PLAY {

        /** C2S_ACTIVITY_PRIZE_PLAY activityId */
        activityId: number;

        /** C2S_ACTIVITY_PRIZE_PLAY type */
        type: number;
    }

    /** Represents a C2S_ACTIVITY_PRIZE_PLAY. */
    class C2S_ACTIVITY_PRIZE_PLAY implements IC2S_ACTIVITY_PRIZE_PLAY {

        /**
         * Constructs a new C2S_ACTIVITY_PRIZE_PLAY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_PRIZE_PLAY);

        /** C2S_ACTIVITY_PRIZE_PLAY activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_PRIZE_PLAY type. */
        public type: number;

        /**
         * Encodes the specified C2S_ACTIVITY_PRIZE_PLAY message. Does not implicitly {@link gameProto.C2S_ACTIVITY_PRIZE_PLAY.verify|verify} messages.
         * @param message C2S_ACTIVITY_PRIZE_PLAY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_PRIZE_PLAY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_PRIZE_PLAY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_PRIZE_PLAY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_PRIZE_PLAY;
    }

    /** Properties of a S2C_ACTIVITY_PRIZE_PLAY. */
    interface IS2C_ACTIVITY_PRIZE_PLAY {

        /** S2C_ACTIVITY_PRIZE_PLAY message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_ACTIVITY_PRIZE_PLAY prizeInfo */
        prizeInfo?: (gameProto.IPrizeInfo|null);

        /** S2C_ACTIVITY_PRIZE_PLAY activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_PRIZE_PLAY. */
    class S2C_ACTIVITY_PRIZE_PLAY implements IS2C_ACTIVITY_PRIZE_PLAY {

        /**
         * Constructs a new S2C_ACTIVITY_PRIZE_PLAY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_PRIZE_PLAY);

        /** S2C_ACTIVITY_PRIZE_PLAY message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_ACTIVITY_PRIZE_PLAY prizeInfo. */
        public prizeInfo?: (gameProto.IPrizeInfo|null);

        /** S2C_ACTIVITY_PRIZE_PLAY activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_PRIZE_PLAY message. Does not implicitly {@link gameProto.S2C_ACTIVITY_PRIZE_PLAY.verify|verify} messages.
         * @param message S2C_ACTIVITY_PRIZE_PLAY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_PRIZE_PLAY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_PRIZE_PLAY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_PRIZE_PLAY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_PRIZE_PLAY;
    }

    /** Properties of a C2S_ACTIVITY_DRAW_PRIZE_REWARD. */
    interface IC2S_ACTIVITY_DRAW_PRIZE_REWARD {

        /** C2S_ACTIVITY_DRAW_PRIZE_REWARD id */
        id: number;

        /** C2S_ACTIVITY_DRAW_PRIZE_REWARD activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_DRAW_PRIZE_REWARD. */
    class C2S_ACTIVITY_DRAW_PRIZE_REWARD implements IC2S_ACTIVITY_DRAW_PRIZE_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_DRAW_PRIZE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_DRAW_PRIZE_REWARD);

        /** C2S_ACTIVITY_DRAW_PRIZE_REWARD id. */
        public id: number;

        /** C2S_ACTIVITY_DRAW_PRIZE_REWARD activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_DRAW_PRIZE_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_DRAW_PRIZE_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_DRAW_PRIZE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_DRAW_PRIZE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_DRAW_PRIZE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_DRAW_PRIZE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_DRAW_PRIZE_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_DRAW_PRIZE_REWARD. */
    interface IS2C_ACTIVITY_DRAW_PRIZE_REWARD {

        /** S2C_ACTIVITY_DRAW_PRIZE_REWARD activityAward */
        activityAward?: (gameProto.IActivityAward|null);
    }

    /** Represents a S2C_ACTIVITY_DRAW_PRIZE_REWARD. */
    class S2C_ACTIVITY_DRAW_PRIZE_REWARD implements IS2C_ACTIVITY_DRAW_PRIZE_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_DRAW_PRIZE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_DRAW_PRIZE_REWARD);

        /** S2C_ACTIVITY_DRAW_PRIZE_REWARD activityAward. */
        public activityAward?: (gameProto.IActivityAward|null);

        /**
         * Encodes the specified S2C_ACTIVITY_DRAW_PRIZE_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_DRAW_PRIZE_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_DRAW_PRIZE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_DRAW_PRIZE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_DRAW_PRIZE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_DRAW_PRIZE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_DRAW_PRIZE_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_NOTICE_CONFIGS. */
    interface IC2S_ACTIVITY_NOTICE_CONFIGS {
    }

    /** Represents a C2S_ACTIVITY_NOTICE_CONFIGS. */
    class C2S_ACTIVITY_NOTICE_CONFIGS implements IC2S_ACTIVITY_NOTICE_CONFIGS {

        /**
         * Constructs a new C2S_ACTIVITY_NOTICE_CONFIGS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_NOTICE_CONFIGS);

        /**
         * Encodes the specified C2S_ACTIVITY_NOTICE_CONFIGS message. Does not implicitly {@link gameProto.C2S_ACTIVITY_NOTICE_CONFIGS.verify|verify} messages.
         * @param message C2S_ACTIVITY_NOTICE_CONFIGS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_NOTICE_CONFIGS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_NOTICE_CONFIGS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_NOTICE_CONFIGS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_NOTICE_CONFIGS;
    }

    /** Properties of a S2C_ACTIVITY_NOTICE_CONFIGS. */
    interface IS2C_ACTIVITY_NOTICE_CONFIGS {

        /** S2C_ACTIVITY_NOTICE_CONFIGS activityNotiseConfigs */
        activityNotiseConfigs?: (gameProto.IActivityNotiseConfig[]|null);
    }

    /** Represents a S2C_ACTIVITY_NOTICE_CONFIGS. */
    class S2C_ACTIVITY_NOTICE_CONFIGS implements IS2C_ACTIVITY_NOTICE_CONFIGS {

        /**
         * Constructs a new S2C_ACTIVITY_NOTICE_CONFIGS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_NOTICE_CONFIGS);

        /** S2C_ACTIVITY_NOTICE_CONFIGS activityNotiseConfigs. */
        public activityNotiseConfigs: gameProto.IActivityNotiseConfig[];

        /**
         * Encodes the specified S2C_ACTIVITY_NOTICE_CONFIGS message. Does not implicitly {@link gameProto.S2C_ACTIVITY_NOTICE_CONFIGS.verify|verify} messages.
         * @param message S2C_ACTIVITY_NOTICE_CONFIGS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_NOTICE_CONFIGS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_NOTICE_CONFIGS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_NOTICE_CONFIGS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_NOTICE_CONFIGS;
    }

    /** Properties of a C2S_ACTIVITY_NEW_GENERAL_INFO. */
    interface IC2S_ACTIVITY_NEW_GENERAL_INFO {

        /** C2S_ACTIVITY_NEW_GENERAL_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_NEW_GENERAL_INFO. */
    class C2S_ACTIVITY_NEW_GENERAL_INFO implements IC2S_ACTIVITY_NEW_GENERAL_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_NEW_GENERAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_NEW_GENERAL_INFO);

        /** C2S_ACTIVITY_NEW_GENERAL_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_NEW_GENERAL_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_NEW_GENERAL_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_NEW_GENERAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_NEW_GENERAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_NEW_GENERAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_NEW_GENERAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_NEW_GENERAL_INFO;
    }

    /** Properties of a S2C_ACTIVITY_NEW_GENERAL_INFO. */
    interface IS2C_ACTIVITY_NEW_GENERAL_INFO {

        /** S2C_ACTIVITY_NEW_GENERAL_INFO todayCostKeepsake */
        todayCostKeepsake: number;

        /** S2C_ACTIVITY_NEW_GENERAL_INFO boxReardRecord */
        boxReardRecord?: (number[]|null);

        /** S2C_ACTIVITY_NEW_GENERAL_INFO activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_INFO chooseRewardList */
        chooseRewardList?: (gameProto.ITuple[]|null);

        /** S2C_ACTIVITY_NEW_GENERAL_INFO generalBagStatu */
        generalBagStatu?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_NEW_GENERAL_INFO. */
    class S2C_ACTIVITY_NEW_GENERAL_INFO implements IS2C_ACTIVITY_NEW_GENERAL_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_NEW_GENERAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_NEW_GENERAL_INFO);

        /** S2C_ACTIVITY_NEW_GENERAL_INFO todayCostKeepsake. */
        public todayCostKeepsake: number;

        /** S2C_ACTIVITY_NEW_GENERAL_INFO boxReardRecord. */
        public boxReardRecord: number[];

        /** S2C_ACTIVITY_NEW_GENERAL_INFO activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_NEW_GENERAL_INFO chooseRewardList. */
        public chooseRewardList: gameProto.ITuple[];

        /** S2C_ACTIVITY_NEW_GENERAL_INFO generalBagStatu. */
        public generalBagStatu: number;

        /**
         * Encodes the specified S2C_ACTIVITY_NEW_GENERAL_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_NEW_GENERAL_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_NEW_GENERAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_NEW_GENERAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_NEW_GENERAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_NEW_GENERAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_NEW_GENERAL_INFO;
    }

    /** Properties of a C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD. */
    interface IC2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD {

        /** C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD items */
        items?: (number[]|null);
    }

    /** Represents a C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD. */
    class C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD implements IC2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD);

        /** C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD items. */
        public items: number[];

        /**
         * Encodes the specified C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD. */
    interface IS2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD {

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD code */
        code?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD items */
        items?: (gameProto.ITuple[]|null);

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD activityId */
        activityId: number;
    }

    /** Represents a S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD. */
    class S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD implements IS2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD);

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD code. */
        public code: number;

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD items. */
        public items: gameProto.ITuple[];

        /** S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_NEW_GENERAL_CHOOSE_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD. */
    interface IC2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD {

        /** C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD visitType */
        visitType: number;
    }

    /** Represents a C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD. */
    class C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD implements IC2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD);

        /** C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD visitType. */
        public visitType: number;

        /**
         * Encodes the specified C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_NEW_GENERAL_VISIT_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD. */
    interface IS2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD {

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD todayCostKeepsake */
        todayCostKeepsake?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD. */
    class S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD implements IS2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD);

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD todayCostKeepsake. */
        public todayCostKeepsake: number;

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_NEW_GENERAL_VISIT_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD. */
    interface IC2S_ACTIVITY_NEW_GENERAL_BOX_REWARD {

        /** C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD activityId */
        activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD step */
        step?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD. */
    class C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD implements IC2S_ACTIVITY_NEW_GENERAL_BOX_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_NEW_GENERAL_BOX_REWARD);

        /** C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD activityId. */
        public activityId: number;

        /** C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD step. */
        public step: number;

        /**
         * Encodes the specified C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_NEW_GENERAL_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_NEW_GENERAL_BOX_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD. */
    interface IS2C_ACTIVITY_NEW_GENERAL_BOX_REWARD {

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD code */
        code?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD boxReardRecord */
        boxReardRecord?: (number[]|null);
    }

    /** Represents a S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD. */
    class S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD implements IS2C_ACTIVITY_NEW_GENERAL_BOX_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_NEW_GENERAL_BOX_REWARD);

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD code. */
        public code: number;

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD boxReardRecord. */
        public boxReardRecord: number[];

        /**
         * Encodes the specified S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_NEW_GENERAL_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_NEW_GENERAL_BOX_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_BUY_GENERAL_BAG. */
    interface IC2S_ACTIVITY_BUY_GENERAL_BAG {

        /** C2S_ACTIVITY_BUY_GENERAL_BAG activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_BUY_GENERAL_BAG. */
    class C2S_ACTIVITY_BUY_GENERAL_BAG implements IC2S_ACTIVITY_BUY_GENERAL_BAG {

        /**
         * Constructs a new C2S_ACTIVITY_BUY_GENERAL_BAG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_BUY_GENERAL_BAG);

        /** C2S_ACTIVITY_BUY_GENERAL_BAG activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_BUY_GENERAL_BAG message. Does not implicitly {@link gameProto.C2S_ACTIVITY_BUY_GENERAL_BAG.verify|verify} messages.
         * @param message C2S_ACTIVITY_BUY_GENERAL_BAG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_BUY_GENERAL_BAG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_BUY_GENERAL_BAG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_BUY_GENERAL_BAG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_BUY_GENERAL_BAG;
    }

    /** Properties of a S2C_ACTIVITY_BUY_GENERAL_BAG. */
    interface IS2C_ACTIVITY_BUY_GENERAL_BAG {

        /** S2C_ACTIVITY_BUY_GENERAL_BAG code */
        code: number;

        /** S2C_ACTIVITY_BUY_GENERAL_BAG activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_BUY_GENERAL_BAG generalBagStatu */
        generalBagStatu?: (number|null);
    }

    /** Represents a S2C_ACTIVITY_BUY_GENERAL_BAG. */
    class S2C_ACTIVITY_BUY_GENERAL_BAG implements IS2C_ACTIVITY_BUY_GENERAL_BAG {

        /**
         * Constructs a new S2C_ACTIVITY_BUY_GENERAL_BAG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_BUY_GENERAL_BAG);

        /** S2C_ACTIVITY_BUY_GENERAL_BAG code. */
        public code: number;

        /** S2C_ACTIVITY_BUY_GENERAL_BAG activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_BUY_GENERAL_BAG generalBagStatu. */
        public generalBagStatu: number;

        /**
         * Encodes the specified S2C_ACTIVITY_BUY_GENERAL_BAG message. Does not implicitly {@link gameProto.S2C_ACTIVITY_BUY_GENERAL_BAG.verify|verify} messages.
         * @param message S2C_ACTIVITY_BUY_GENERAL_BAG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_BUY_GENERAL_BAG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_BUY_GENERAL_BAG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_BUY_GENERAL_BAG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_BUY_GENERAL_BAG;
    }

    /** Properties of a C2S_ACTIVITY_AWARD_GENERAL_BAG. */
    interface IC2S_ACTIVITY_AWARD_GENERAL_BAG {

        /** C2S_ACTIVITY_AWARD_GENERAL_BAG activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_AWARD_GENERAL_BAG. */
    class C2S_ACTIVITY_AWARD_GENERAL_BAG implements IC2S_ACTIVITY_AWARD_GENERAL_BAG {

        /**
         * Constructs a new C2S_ACTIVITY_AWARD_GENERAL_BAG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_AWARD_GENERAL_BAG);

        /** C2S_ACTIVITY_AWARD_GENERAL_BAG activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_AWARD_GENERAL_BAG message. Does not implicitly {@link gameProto.C2S_ACTIVITY_AWARD_GENERAL_BAG.verify|verify} messages.
         * @param message C2S_ACTIVITY_AWARD_GENERAL_BAG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_AWARD_GENERAL_BAG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_AWARD_GENERAL_BAG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_AWARD_GENERAL_BAG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_AWARD_GENERAL_BAG;
    }

    /** Properties of a S2C_ACTIVITY_AWARD_GENERAL_BAG. */
    interface IS2C_ACTIVITY_AWARD_GENERAL_BAG {

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG code */
        code: number;

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG generalBagStatu */
        generalBagStatu?: (number|null);

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG activityId */
        activityId?: (number|null);

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_ACTIVITY_AWARD_GENERAL_BAG. */
    class S2C_ACTIVITY_AWARD_GENERAL_BAG implements IS2C_ACTIVITY_AWARD_GENERAL_BAG {

        /**
         * Constructs a new S2C_ACTIVITY_AWARD_GENERAL_BAG.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_AWARD_GENERAL_BAG);

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG code. */
        public code: number;

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG generalBagStatu. */
        public generalBagStatu: number;

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG activityId. */
        public activityId: number;

        /** S2C_ACTIVITY_AWARD_GENERAL_BAG message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_ACTIVITY_AWARD_GENERAL_BAG message. Does not implicitly {@link gameProto.S2C_ACTIVITY_AWARD_GENERAL_BAG.verify|verify} messages.
         * @param message S2C_ACTIVITY_AWARD_GENERAL_BAG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_AWARD_GENERAL_BAG, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_AWARD_GENERAL_BAG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_AWARD_GENERAL_BAG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_AWARD_GENERAL_BAG;
    }

    /** Properties of a C2S_ACTIVITY_TREASEURE_BOWL_INFO. */
    interface IC2S_ACTIVITY_TREASEURE_BOWL_INFO {

        /** C2S_ACTIVITY_TREASEURE_BOWL_INFO activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_TREASEURE_BOWL_INFO. */
    class C2S_ACTIVITY_TREASEURE_BOWL_INFO implements IC2S_ACTIVITY_TREASEURE_BOWL_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_TREASEURE_BOWL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_TREASEURE_BOWL_INFO);

        /** C2S_ACTIVITY_TREASEURE_BOWL_INFO activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_TREASEURE_BOWL_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_TREASEURE_BOWL_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_TREASEURE_BOWL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_TREASEURE_BOWL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_TREASEURE_BOWL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_TREASEURE_BOWL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_TREASEURE_BOWL_INFO;
    }

    /** Properties of a S2C_ACTIVITY_TREASEURE_BOWL_INFO. */
    interface IS2C_ACTIVITY_TREASEURE_BOWL_INFO {

        /** S2C_ACTIVITY_TREASEURE_BOWL_INFO treasureBowl */
        treasureBowl: gameProto.ITreasureBowl;
    }

    /** Represents a S2C_ACTIVITY_TREASEURE_BOWL_INFO. */
    class S2C_ACTIVITY_TREASEURE_BOWL_INFO implements IS2C_ACTIVITY_TREASEURE_BOWL_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_TREASEURE_BOWL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_TREASEURE_BOWL_INFO);

        /** S2C_ACTIVITY_TREASEURE_BOWL_INFO treasureBowl. */
        public treasureBowl: gameProto.ITreasureBowl;

        /**
         * Encodes the specified S2C_ACTIVITY_TREASEURE_BOWL_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_TREASEURE_BOWL_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_TREASEURE_BOWL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_TREASEURE_BOWL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_TREASEURE_BOWL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_TREASEURE_BOWL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_TREASEURE_BOWL_INFO;
    }

    /** Properties of a C2S_ACTIVITY_TREASEURE_BOWL_REWARD. */
    interface IC2S_ACTIVITY_TREASEURE_BOWL_REWARD {

        /** C2S_ACTIVITY_TREASEURE_BOWL_REWARD activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_ACTIVITY_TREASEURE_BOWL_REWARD. */
    class C2S_ACTIVITY_TREASEURE_BOWL_REWARD implements IC2S_ACTIVITY_TREASEURE_BOWL_REWARD {

        /**
         * Constructs a new C2S_ACTIVITY_TREASEURE_BOWL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_TREASEURE_BOWL_REWARD);

        /** C2S_ACTIVITY_TREASEURE_BOWL_REWARD activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_TREASEURE_BOWL_REWARD message. Does not implicitly {@link gameProto.C2S_ACTIVITY_TREASEURE_BOWL_REWARD.verify|verify} messages.
         * @param message C2S_ACTIVITY_TREASEURE_BOWL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_TREASEURE_BOWL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_TREASEURE_BOWL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_TREASEURE_BOWL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_TREASEURE_BOWL_REWARD;
    }

    /** Properties of a S2C_ACTIVITY_TREASEURE_BOWL_REWARD. */
    interface IS2C_ACTIVITY_TREASEURE_BOWL_REWARD {

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD code */
        code: number;

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD treasureBowl */
        treasureBowl: gameProto.ITreasureBowl;
    }

    /** Represents a S2C_ACTIVITY_TREASEURE_BOWL_REWARD. */
    class S2C_ACTIVITY_TREASEURE_BOWL_REWARD implements IS2C_ACTIVITY_TREASEURE_BOWL_REWARD {

        /**
         * Constructs a new S2C_ACTIVITY_TREASEURE_BOWL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_TREASEURE_BOWL_REWARD);

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD code. */
        public code: number;

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_ACTIVITY_TREASEURE_BOWL_REWARD treasureBowl. */
        public treasureBowl: gameProto.ITreasureBowl;

        /**
         * Encodes the specified S2C_ACTIVITY_TREASEURE_BOWL_REWARD message. Does not implicitly {@link gameProto.S2C_ACTIVITY_TREASEURE_BOWL_REWARD.verify|verify} messages.
         * @param message S2C_ACTIVITY_TREASEURE_BOWL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_TREASEURE_BOWL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_TREASEURE_BOWL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_TREASEURE_BOWL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_TREASEURE_BOWL_REWARD;
    }

    /** Properties of a C2S_ACTIVITY_PREFERENTAIL_STORE_INFO. */
    interface IC2S_ACTIVITY_PREFERENTAIL_STORE_INFO {

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_INFO storeId */
        storeId: number;
    }

    /** Represents a C2S_ACTIVITY_PREFERENTAIL_STORE_INFO. */
    class C2S_ACTIVITY_PREFERENTAIL_STORE_INFO implements IC2S_ACTIVITY_PREFERENTAIL_STORE_INFO {

        /**
         * Constructs a new C2S_ACTIVITY_PREFERENTAIL_STORE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_PREFERENTAIL_STORE_INFO);

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_INFO storeId. */
        public storeId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_PREFERENTAIL_STORE_INFO message. Does not implicitly {@link gameProto.C2S_ACTIVITY_PREFERENTAIL_STORE_INFO.verify|verify} messages.
         * @param message C2S_ACTIVITY_PREFERENTAIL_STORE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_PREFERENTAIL_STORE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_PREFERENTAIL_STORE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_PREFERENTAIL_STORE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_PREFERENTAIL_STORE_INFO;
    }

    /** Properties of a S2C_ACTIVITY_PREFERENTAIL_STORE_INFO. */
    interface IS2C_ACTIVITY_PREFERENTAIL_STORE_INFO {

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_INFO info */
        info: gameProto.IMerchantInfo;
    }

    /** Represents a S2C_ACTIVITY_PREFERENTAIL_STORE_INFO. */
    class S2C_ACTIVITY_PREFERENTAIL_STORE_INFO implements IS2C_ACTIVITY_PREFERENTAIL_STORE_INFO {

        /**
         * Constructs a new S2C_ACTIVITY_PREFERENTAIL_STORE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_PREFERENTAIL_STORE_INFO);

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_INFO info. */
        public info: gameProto.IMerchantInfo;

        /**
         * Encodes the specified S2C_ACTIVITY_PREFERENTAIL_STORE_INFO message. Does not implicitly {@link gameProto.S2C_ACTIVITY_PREFERENTAIL_STORE_INFO.verify|verify} messages.
         * @param message S2C_ACTIVITY_PREFERENTAIL_STORE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_PREFERENTAIL_STORE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_PREFERENTAIL_STORE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_PREFERENTAIL_STORE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_PREFERENTAIL_STORE_INFO;
    }

    /** Properties of a C2S_ACTIVITY_PREFERENTAIL_REFRESH. */
    interface IC2S_ACTIVITY_PREFERENTAIL_REFRESH {

        /** C2S_ACTIVITY_PREFERENTAIL_REFRESH storeId */
        storeId: number;
    }

    /** Represents a C2S_ACTIVITY_PREFERENTAIL_REFRESH. */
    class C2S_ACTIVITY_PREFERENTAIL_REFRESH implements IC2S_ACTIVITY_PREFERENTAIL_REFRESH {

        /**
         * Constructs a new C2S_ACTIVITY_PREFERENTAIL_REFRESH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_PREFERENTAIL_REFRESH);

        /** C2S_ACTIVITY_PREFERENTAIL_REFRESH storeId. */
        public storeId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_PREFERENTAIL_REFRESH message. Does not implicitly {@link gameProto.C2S_ACTIVITY_PREFERENTAIL_REFRESH.verify|verify} messages.
         * @param message C2S_ACTIVITY_PREFERENTAIL_REFRESH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_PREFERENTAIL_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_PREFERENTAIL_REFRESH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_PREFERENTAIL_REFRESH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_PREFERENTAIL_REFRESH;
    }

    /** Properties of a S2C_ACTIVITY_PREFERENTAIL_REFRESH. */
    interface IS2C_ACTIVITY_PREFERENTAIL_REFRESH {

        /** S2C_ACTIVITY_PREFERENTAIL_REFRESH info */
        info: gameProto.IMerchantInfo;
    }

    /** Represents a S2C_ACTIVITY_PREFERENTAIL_REFRESH. */
    class S2C_ACTIVITY_PREFERENTAIL_REFRESH implements IS2C_ACTIVITY_PREFERENTAIL_REFRESH {

        /**
         * Constructs a new S2C_ACTIVITY_PREFERENTAIL_REFRESH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_PREFERENTAIL_REFRESH);

        /** S2C_ACTIVITY_PREFERENTAIL_REFRESH info. */
        public info: gameProto.IMerchantInfo;

        /**
         * Encodes the specified S2C_ACTIVITY_PREFERENTAIL_REFRESH message. Does not implicitly {@link gameProto.S2C_ACTIVITY_PREFERENTAIL_REFRESH.verify|verify} messages.
         * @param message S2C_ACTIVITY_PREFERENTAIL_REFRESH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_PREFERENTAIL_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_PREFERENTAIL_REFRESH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_PREFERENTAIL_REFRESH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_PREFERENTAIL_REFRESH;
    }

    /** Properties of a C2S_ACTIVITY_PREFERENTAIL_STORE_BUY. */
    interface IC2S_ACTIVITY_PREFERENTAIL_STORE_BUY {

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY storeId */
        storeId: number;

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY id */
        id: number;

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY num */
        num: number;
    }

    /** Represents a C2S_ACTIVITY_PREFERENTAIL_STORE_BUY. */
    class C2S_ACTIVITY_PREFERENTAIL_STORE_BUY implements IC2S_ACTIVITY_PREFERENTAIL_STORE_BUY {

        /**
         * Constructs a new C2S_ACTIVITY_PREFERENTAIL_STORE_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_PREFERENTAIL_STORE_BUY);

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY storeId. */
        public storeId: number;

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY id. */
        public id: number;

        /** C2S_ACTIVITY_PREFERENTAIL_STORE_BUY num. */
        public num: number;

        /**
         * Encodes the specified C2S_ACTIVITY_PREFERENTAIL_STORE_BUY message. Does not implicitly {@link gameProto.C2S_ACTIVITY_PREFERENTAIL_STORE_BUY.verify|verify} messages.
         * @param message C2S_ACTIVITY_PREFERENTAIL_STORE_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_PREFERENTAIL_STORE_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_PREFERENTAIL_STORE_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_PREFERENTAIL_STORE_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_PREFERENTAIL_STORE_BUY;
    }

    /** Properties of a S2C_ACTIVITY_PREFERENTAIL_STORE_BUY. */
    interface IS2C_ACTIVITY_PREFERENTAIL_STORE_BUY {

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_BUY storeId */
        storeId: number;

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_BUY goodsInfo */
        goodsInfo: gameProto.IGoodsInfo;
    }

    /** Represents a S2C_ACTIVITY_PREFERENTAIL_STORE_BUY. */
    class S2C_ACTIVITY_PREFERENTAIL_STORE_BUY implements IS2C_ACTIVITY_PREFERENTAIL_STORE_BUY {

        /**
         * Constructs a new S2C_ACTIVITY_PREFERENTAIL_STORE_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_PREFERENTAIL_STORE_BUY);

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_BUY storeId. */
        public storeId: number;

        /** S2C_ACTIVITY_PREFERENTAIL_STORE_BUY goodsInfo. */
        public goodsInfo: gameProto.IGoodsInfo;

        /**
         * Encodes the specified S2C_ACTIVITY_PREFERENTAIL_STORE_BUY message. Does not implicitly {@link gameProto.S2C_ACTIVITY_PREFERENTAIL_STORE_BUY.verify|verify} messages.
         * @param message S2C_ACTIVITY_PREFERENTAIL_STORE_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_PREFERENTAIL_STORE_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_PREFERENTAIL_STORE_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_PREFERENTAIL_STORE_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_PREFERENTAIL_STORE_BUY;
    }

    /** Properties of an ApkChallengeHisVo. */
    interface IApkChallengeHisVo {

        /** ApkChallengeHisVo playerId */
        playerId: number;

        /** ApkChallengeHisVo playerName */
        playerName: string;

        /** ApkChallengeHisVo head */
        head: number;

        /** ApkChallengeHisVo modifyRank */
        modifyRank: number;

        /** ApkChallengeHisVo force */
        force: number;

        /** ApkChallengeHisVo challengeTime */
        challengeTime: number;

        /** ApkChallengeHisVo challengeWin */
        challengeWin: boolean;

        /** ApkChallengeHisVo countryId */
        countryId: number;
    }

    /** Represents an ApkChallengeHisVo. */
    class ApkChallengeHisVo implements IApkChallengeHisVo {

        /**
         * Constructs a new ApkChallengeHisVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApkChallengeHisVo);

        /** ApkChallengeHisVo playerId. */
        public playerId: number;

        /** ApkChallengeHisVo playerName. */
        public playerName: string;

        /** ApkChallengeHisVo head. */
        public head: number;

        /** ApkChallengeHisVo modifyRank. */
        public modifyRank: number;

        /** ApkChallengeHisVo force. */
        public force: number;

        /** ApkChallengeHisVo challengeTime. */
        public challengeTime: number;

        /** ApkChallengeHisVo challengeWin. */
        public challengeWin: boolean;

        /** ApkChallengeHisVo countryId. */
        public countryId: number;

        /**
         * Encodes the specified ApkChallengeHisVo message. Does not implicitly {@link gameProto.ApkChallengeHisVo.verify|verify} messages.
         * @param message ApkChallengeHisVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApkChallengeHisVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApkChallengeHisVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApkChallengeHisVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApkChallengeHisVo;
    }

    /** Properties of an ApkRankVo. */
    interface IApkRankVo {

        /** ApkRankVo playerId */
        playerId: number;

        /** ApkRankVo playerName */
        playerName: string;

        /** ApkRankVo head */
        head: number;

        /** ApkRankVo rank */
        rank: number;

        /** ApkRankVo force */
        force: number;

        /** ApkRankVo generalWinInfo */
        generalWinInfo?: (gameProto.IGeneralWinInfo[]|null);

        /** ApkRankVo countryId */
        countryId: number;
    }

    /** Represents an ApkRankVo. */
    class ApkRankVo implements IApkRankVo {

        /**
         * Constructs a new ApkRankVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApkRankVo);

        /** ApkRankVo playerId. */
        public playerId: number;

        /** ApkRankVo playerName. */
        public playerName: string;

        /** ApkRankVo head. */
        public head: number;

        /** ApkRankVo rank. */
        public rank: number;

        /** ApkRankVo force. */
        public force: number;

        /** ApkRankVo generalWinInfo. */
        public generalWinInfo: gameProto.IGeneralWinInfo[];

        /** ApkRankVo countryId. */
        public countryId: number;

        /**
         * Encodes the specified ApkRankVo message. Does not implicitly {@link gameProto.ApkRankVo.verify|verify} messages.
         * @param message ApkRankVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApkRankVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApkRankVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApkRankVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApkRankVo;
    }

    /** Properties of a GetMyApkReq. */
    interface IGetMyApkReq {
    }

    /** Represents a GetMyApkReq. */
    class GetMyApkReq implements IGetMyApkReq {

        /**
         * Constructs a new GetMyApkReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetMyApkReq);

        /**
         * Encodes the specified GetMyApkReq message. Does not implicitly {@link gameProto.GetMyApkReq.verify|verify} messages.
         * @param message GetMyApkReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetMyApkReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMyApkReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMyApkReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetMyApkReq;
    }

    /** Properties of a GetMyApkResp. */
    interface IGetMyApkResp {

        /** GetMyApkResp challengeCount */
        challengeCount?: (number|null);

        /** GetMyApkResp buyCount */
        buyCount?: (number|null);

        /** GetMyApkResp challenged */
        challenged?: (boolean|null);

        /** GetMyApkResp rank */
        rank?: (number|null);
    }

    /** Represents a GetMyApkResp. */
    class GetMyApkResp implements IGetMyApkResp {

        /**
         * Constructs a new GetMyApkResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetMyApkResp);

        /** GetMyApkResp challengeCount. */
        public challengeCount: number;

        /** GetMyApkResp buyCount. */
        public buyCount: number;

        /** GetMyApkResp challenged. */
        public challenged: boolean;

        /** GetMyApkResp rank. */
        public rank: number;

        /**
         * Encodes the specified GetMyApkResp message. Does not implicitly {@link gameProto.GetMyApkResp.verify|verify} messages.
         * @param message GetMyApkResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetMyApkResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMyApkResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMyApkResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetMyApkResp;
    }

    /** Properties of a GetChallengeListReq. */
    interface IGetChallengeListReq {
    }

    /** Represents a GetChallengeListReq. */
    class GetChallengeListReq implements IGetChallengeListReq {

        /**
         * Constructs a new GetChallengeListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetChallengeListReq);

        /**
         * Encodes the specified GetChallengeListReq message. Does not implicitly {@link gameProto.GetChallengeListReq.verify|verify} messages.
         * @param message GetChallengeListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetChallengeListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetChallengeListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetChallengeListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetChallengeListReq;
    }

    /** Properties of a GetChallengeListResp. */
    interface IGetChallengeListResp {

        /** GetChallengeListResp apkRankVoList */
        apkRankVoList?: (gameProto.IApkRankVo[]|null);
    }

    /** Represents a GetChallengeListResp. */
    class GetChallengeListResp implements IGetChallengeListResp {

        /**
         * Constructs a new GetChallengeListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetChallengeListResp);

        /** GetChallengeListResp apkRankVoList. */
        public apkRankVoList: gameProto.IApkRankVo[];

        /**
         * Encodes the specified GetChallengeListResp message. Does not implicitly {@link gameProto.GetChallengeListResp.verify|verify} messages.
         * @param message GetChallengeListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetChallengeListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetChallengeListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetChallengeListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetChallengeListResp;
    }

    /** Properties of a ChallengeReq. */
    interface IChallengeReq {

        /** ChallengeReq rank */
        rank: number;
    }

    /** Represents a ChallengeReq. */
    class ChallengeReq implements IChallengeReq {

        /**
         * Constructs a new ChallengeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeReq);

        /** ChallengeReq rank. */
        public rank: number;

        /**
         * Encodes the specified ChallengeReq message. Does not implicitly {@link gameProto.ChallengeReq.verify|verify} messages.
         * @param message ChallengeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeReq;
    }

    /** Properties of a ChallengeResp. */
    interface IChallengeResp {

        /** ChallengeResp battleId */
        battleId: number;
    }

    /** Represents a ChallengeResp. */
    class ChallengeResp implements IChallengeResp {

        /**
         * Constructs a new ChallengeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeResp);

        /** ChallengeResp battleId. */
        public battleId: number;

        /**
         * Encodes the specified ChallengeResp message. Does not implicitly {@link gameProto.ChallengeResp.verify|verify} messages.
         * @param message ChallengeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeResp;
    }

    /** Properties of a ChallengeResultResp. */
    interface IChallengeResultResp {

        /** ChallengeResultResp apkRankVoList */
        apkRankVoList?: (gameProto.IApkRankVo[]|null);

        /** ChallengeResultResp result */
        result: boolean;

        /** ChallengeResultResp message */
        message?: (gameProto.IValuesMessage[]|null);

        /** ChallengeResultResp battleId */
        battleId: number;
    }

    /** Represents a ChallengeResultResp. */
    class ChallengeResultResp implements IChallengeResultResp {

        /**
         * Constructs a new ChallengeResultResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeResultResp);

        /** ChallengeResultResp apkRankVoList. */
        public apkRankVoList: gameProto.IApkRankVo[];

        /** ChallengeResultResp result. */
        public result: boolean;

        /** ChallengeResultResp message. */
        public message: gameProto.IValuesMessage[];

        /** ChallengeResultResp battleId. */
        public battleId: number;

        /**
         * Encodes the specified ChallengeResultResp message. Does not implicitly {@link gameProto.ChallengeResultResp.verify|verify} messages.
         * @param message ChallengeResultResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeResultResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeResultResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeResultResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeResultResp;
    }

    /** Properties of a GetBuyCountReq. */
    interface IGetBuyCountReq {

        /** GetBuyCountReq num */
        num: number;
    }

    /** Represents a GetBuyCountReq. */
    class GetBuyCountReq implements IGetBuyCountReq {

        /**
         * Constructs a new GetBuyCountReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetBuyCountReq);

        /** GetBuyCountReq num. */
        public num: number;

        /**
         * Encodes the specified GetBuyCountReq message. Does not implicitly {@link gameProto.GetBuyCountReq.verify|verify} messages.
         * @param message GetBuyCountReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetBuyCountReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetBuyCountReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetBuyCountReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetBuyCountReq;
    }

    /** Properties of a GetBuyCountResp. */
    interface IGetBuyCountResp {

        /** GetBuyCountResp challengeCount */
        challengeCount: number;

        /** GetBuyCountResp buyCount */
        buyCount: number;
    }

    /** Represents a GetBuyCountResp. */
    class GetBuyCountResp implements IGetBuyCountResp {

        /**
         * Constructs a new GetBuyCountResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetBuyCountResp);

        /** GetBuyCountResp challengeCount. */
        public challengeCount: number;

        /** GetBuyCountResp buyCount. */
        public buyCount: number;

        /**
         * Encodes the specified GetBuyCountResp message. Does not implicitly {@link gameProto.GetBuyCountResp.verify|verify} messages.
         * @param message GetBuyCountResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetBuyCountResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetBuyCountResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetBuyCountResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetBuyCountResp;
    }

    /** Properties of a GetRankListReq. */
    interface IGetRankListReq {

        /** GetRankListReq count */
        count: number;
    }

    /** Represents a GetRankListReq. */
    class GetRankListReq implements IGetRankListReq {

        /**
         * Constructs a new GetRankListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetRankListReq);

        /** GetRankListReq count. */
        public count: number;

        /**
         * Encodes the specified GetRankListReq message. Does not implicitly {@link gameProto.GetRankListReq.verify|verify} messages.
         * @param message GetRankListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetRankListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetRankListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRankListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetRankListReq;
    }

    /** Properties of a GetRankListResp. */
    interface IGetRankListResp {

        /** GetRankListResp apkRankVoList */
        apkRankVoList?: (gameProto.IApkRankVo[]|null);

        /** GetRankListResp apkRankVo */
        apkRankVo?: (gameProto.IApkRankVo|null);
    }

    /** Represents a GetRankListResp. */
    class GetRankListResp implements IGetRankListResp {

        /**
         * Constructs a new GetRankListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetRankListResp);

        /** GetRankListResp apkRankVoList. */
        public apkRankVoList: gameProto.IApkRankVo[];

        /** GetRankListResp apkRankVo. */
        public apkRankVo?: (gameProto.IApkRankVo|null);

        /**
         * Encodes the specified GetRankListResp message. Does not implicitly {@link gameProto.GetRankListResp.verify|verify} messages.
         * @param message GetRankListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetRankListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetRankListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetRankListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetRankListResp;
    }

    /** Properties of a GetChallengeHisReq. */
    interface IGetChallengeHisReq {

        /** GetChallengeHisReq count */
        count: number;
    }

    /** Represents a GetChallengeHisReq. */
    class GetChallengeHisReq implements IGetChallengeHisReq {

        /**
         * Constructs a new GetChallengeHisReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetChallengeHisReq);

        /** GetChallengeHisReq count. */
        public count: number;

        /**
         * Encodes the specified GetChallengeHisReq message. Does not implicitly {@link gameProto.GetChallengeHisReq.verify|verify} messages.
         * @param message GetChallengeHisReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetChallengeHisReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetChallengeHisReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetChallengeHisReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetChallengeHisReq;
    }

    /** Properties of a GetChallengeHisResp. */
    interface IGetChallengeHisResp {

        /** GetChallengeHisResp apkChallengeHisVoList */
        apkChallengeHisVoList?: (gameProto.IApkChallengeHisVo[]|null);
    }

    /** Represents a GetChallengeHisResp. */
    class GetChallengeHisResp implements IGetChallengeHisResp {

        /**
         * Constructs a new GetChallengeHisResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetChallengeHisResp);

        /** GetChallengeHisResp apkChallengeHisVoList. */
        public apkChallengeHisVoList: gameProto.IApkChallengeHisVo[];

        /**
         * Encodes the specified GetChallengeHisResp message. Does not implicitly {@link gameProto.GetChallengeHisResp.verify|verify} messages.
         * @param message GetChallengeHisResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetChallengeHisResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetChallengeHisResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetChallengeHisResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetChallengeHisResp;
    }

    /** Properties of a ChallengeFastReq. */
    interface IChallengeFastReq {

        /** ChallengeFastReq rank */
        rank: number;
    }

    /** Represents a ChallengeFastReq. */
    class ChallengeFastReq implements IChallengeFastReq {

        /**
         * Constructs a new ChallengeFastReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeFastReq);

        /** ChallengeFastReq rank. */
        public rank: number;

        /**
         * Encodes the specified ChallengeFastReq message. Does not implicitly {@link gameProto.ChallengeFastReq.verify|verify} messages.
         * @param message ChallengeFastReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeFastReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeFastReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeFastReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeFastReq;
    }

    /** Properties of a ChallengeFastResp. */
    interface IChallengeFastResp {

        /** ChallengeFastResp message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a ChallengeFastResp. */
    class ChallengeFastResp implements IChallengeFastResp {

        /**
         * Constructs a new ChallengeFastResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeFastResp);

        /** ChallengeFastResp message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified ChallengeFastResp message. Does not implicitly {@link gameProto.ChallengeFastResp.verify|verify} messages.
         * @param message ChallengeFastResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeFastResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeFastResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeFastResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeFastResp;
    }

    /** Properties of a ChallengeCheckReq. */
    interface IChallengeCheckReq {

        /** ChallengeCheckReq rank */
        rank: number;

        /** ChallengeCheckReq playerId */
        playerId: number;
    }

    /** Represents a ChallengeCheckReq. */
    class ChallengeCheckReq implements IChallengeCheckReq {

        /**
         * Constructs a new ChallengeCheckReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeCheckReq);

        /** ChallengeCheckReq rank. */
        public rank: number;

        /** ChallengeCheckReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified ChallengeCheckReq message. Does not implicitly {@link gameProto.ChallengeCheckReq.verify|verify} messages.
         * @param message ChallengeCheckReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeCheckReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeCheckReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeCheckReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeCheckReq;
    }

    /** Properties of a ChallengeCheckResp. */
    interface IChallengeCheckResp {

        /** ChallengeCheckResp refresh */
        refresh: boolean;
    }

    /** Represents a ChallengeCheckResp. */
    class ChallengeCheckResp implements IChallengeCheckResp {

        /**
         * Constructs a new ChallengeCheckResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengeCheckResp);

        /** ChallengeCheckResp refresh. */
        public refresh: boolean;

        /**
         * Encodes the specified ChallengeCheckResp message. Does not implicitly {@link gameProto.ChallengeCheckResp.verify|verify} messages.
         * @param message ChallengeCheckResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengeCheckResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengeCheckResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengeCheckResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengeCheckResp;
    }

    /** Properties of a CleanUpArenaInfo. */
    interface ICleanUpArenaInfo {

        /** CleanUpArenaInfo arenaId */
        arenaId: number;

        /** CleanUpArenaInfo values */
        values?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a CleanUpArenaInfo. */
    class CleanUpArenaInfo implements ICleanUpArenaInfo {

        /**
         * Constructs a new CleanUpArenaInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICleanUpArenaInfo);

        /** CleanUpArenaInfo arenaId. */
        public arenaId: number;

        /** CleanUpArenaInfo values. */
        public values: gameProto.IValuesMessage[];

        /**
         * Encodes the specified CleanUpArenaInfo message. Does not implicitly {@link gameProto.CleanUpArenaInfo.verify|verify} messages.
         * @param message CleanUpArenaInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICleanUpArenaInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CleanUpArenaInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CleanUpArenaInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CleanUpArenaInfo;
    }

    /** Properties of an ArenaIdIdReq. */
    interface IArenaIdIdReq {
    }

    /** Represents an ArenaIdIdReq. */
    class ArenaIdIdReq implements IArenaIdIdReq {

        /**
         * Constructs a new ArenaIdIdReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaIdIdReq);

        /**
         * Encodes the specified ArenaIdIdReq message. Does not implicitly {@link gameProto.ArenaIdIdReq.verify|verify} messages.
         * @param message ArenaIdIdReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaIdIdReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaIdIdReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaIdIdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaIdIdReq;
    }

    /** Properties of an ArenaIdResp. */
    interface IArenaIdResp {

        /** ArenaIdResp arenaId */
        arenaId: number;

        /** ArenaIdResp canCleanUp */
        canCleanUp: boolean;

        /** ArenaIdResp resetCount */
        resetCount: number;

        /** ArenaIdResp firstRewarded */
        firstRewarded?: (number[]|null);
    }

    /** Represents an ArenaIdResp. */
    class ArenaIdResp implements IArenaIdResp {

        /**
         * Constructs a new ArenaIdResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaIdResp);

        /** ArenaIdResp arenaId. */
        public arenaId: number;

        /** ArenaIdResp canCleanUp. */
        public canCleanUp: boolean;

        /** ArenaIdResp resetCount. */
        public resetCount: number;

        /** ArenaIdResp firstRewarded. */
        public firstRewarded: number[];

        /**
         * Encodes the specified ArenaIdResp message. Does not implicitly {@link gameProto.ArenaIdResp.verify|verify} messages.
         * @param message ArenaIdResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaIdResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaIdResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaIdResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaIdResp;
    }

    /** Properties of an EnterArenaBattleReq. */
    interface IEnterArenaBattleReq {

        /** EnterArenaBattleReq armyId */
        armyId: number;
    }

    /** Represents an EnterArenaBattleReq. */
    class EnterArenaBattleReq implements IEnterArenaBattleReq {

        /**
         * Constructs a new EnterArenaBattleReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEnterArenaBattleReq);

        /** EnterArenaBattleReq armyId. */
        public armyId: number;

        /**
         * Encodes the specified EnterArenaBattleReq message. Does not implicitly {@link gameProto.EnterArenaBattleReq.verify|verify} messages.
         * @param message EnterArenaBattleReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEnterArenaBattleReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EnterArenaBattleReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterArenaBattleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.EnterArenaBattleReq;
    }

    /** Properties of an EnterArenaBattleResp. */
    interface IEnterArenaBattleResp {

        /** EnterArenaBattleResp battleId */
        battleId: number;
    }

    /** Represents an EnterArenaBattleResp. */
    class EnterArenaBattleResp implements IEnterArenaBattleResp {

        /**
         * Constructs a new EnterArenaBattleResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEnterArenaBattleResp);

        /** EnterArenaBattleResp battleId. */
        public battleId: number;

        /**
         * Encodes the specified EnterArenaBattleResp message. Does not implicitly {@link gameProto.EnterArenaBattleResp.verify|verify} messages.
         * @param message EnterArenaBattleResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEnterArenaBattleResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EnterArenaBattleResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterArenaBattleResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.EnterArenaBattleResp;
    }

    /** Properties of a CleanUpArenaBattleReq. */
    interface ICleanUpArenaBattleReq {
    }

    /** Represents a CleanUpArenaBattleReq. */
    class CleanUpArenaBattleReq implements ICleanUpArenaBattleReq {

        /**
         * Constructs a new CleanUpArenaBattleReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICleanUpArenaBattleReq);

        /**
         * Encodes the specified CleanUpArenaBattleReq message. Does not implicitly {@link gameProto.CleanUpArenaBattleReq.verify|verify} messages.
         * @param message CleanUpArenaBattleReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICleanUpArenaBattleReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CleanUpArenaBattleReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CleanUpArenaBattleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CleanUpArenaBattleReq;
    }

    /** Properties of a CleanUpArenaBattleResp. */
    interface ICleanUpArenaBattleResp {

        /** CleanUpArenaBattleResp arenaId */
        arenaId: number;

        /** CleanUpArenaBattleResp values */
        values?: (gameProto.ICleanUpArenaInfo[]|null);
    }

    /** Represents a CleanUpArenaBattleResp. */
    class CleanUpArenaBattleResp implements ICleanUpArenaBattleResp {

        /**
         * Constructs a new CleanUpArenaBattleResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICleanUpArenaBattleResp);

        /** CleanUpArenaBattleResp arenaId. */
        public arenaId: number;

        /** CleanUpArenaBattleResp values. */
        public values: gameProto.ICleanUpArenaInfo[];

        /**
         * Encodes the specified CleanUpArenaBattleResp message. Does not implicitly {@link gameProto.CleanUpArenaBattleResp.verify|verify} messages.
         * @param message CleanUpArenaBattleResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICleanUpArenaBattleResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CleanUpArenaBattleResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CleanUpArenaBattleResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CleanUpArenaBattleResp;
    }

    /** Properties of an ArenaResetReq. */
    interface IArenaResetReq {
    }

    /** Represents an ArenaResetReq. */
    class ArenaResetReq implements IArenaResetReq {

        /**
         * Constructs a new ArenaResetReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaResetReq);

        /**
         * Encodes the specified ArenaResetReq message. Does not implicitly {@link gameProto.ArenaResetReq.verify|verify} messages.
         * @param message ArenaResetReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaResetReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaResetReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaResetReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaResetReq;
    }

    /** Properties of an ArenaResetResp. */
    interface IArenaResetResp {

        /** ArenaResetResp arenaId */
        arenaId: number;
    }

    /** Represents an ArenaResetResp. */
    class ArenaResetResp implements IArenaResetResp {

        /**
         * Constructs a new ArenaResetResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaResetResp);

        /** ArenaResetResp arenaId. */
        public arenaId: number;

        /**
         * Encodes the specified ArenaResetResp message. Does not implicitly {@link gameProto.ArenaResetResp.verify|verify} messages.
         * @param message ArenaResetResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaResetResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaResetResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaResetResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaResetResp;
    }

    /** Properties of an ArenaRewardListReq. */
    interface IArenaRewardListReq {
    }

    /** Represents an ArenaRewardListReq. */
    class ArenaRewardListReq implements IArenaRewardListReq {

        /**
         * Constructs a new ArenaRewardListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaRewardListReq);

        /**
         * Encodes the specified ArenaRewardListReq message. Does not implicitly {@link gameProto.ArenaRewardListReq.verify|verify} messages.
         * @param message ArenaRewardListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaRewardListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaRewardListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaRewardListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaRewardListReq;
    }

    /** Properties of an ArenaRewardListResp. */
    interface IArenaRewardListResp {

        /** ArenaRewardListResp arenaId */
        arenaId?: (number[]|null);
    }

    /** Represents an ArenaRewardListResp. */
    class ArenaRewardListResp implements IArenaRewardListResp {

        /**
         * Constructs a new ArenaRewardListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaRewardListResp);

        /** ArenaRewardListResp arenaId. */
        public arenaId: number[];

        /**
         * Encodes the specified ArenaRewardListResp message. Does not implicitly {@link gameProto.ArenaRewardListResp.verify|verify} messages.
         * @param message ArenaRewardListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaRewardListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaRewardListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaRewardListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaRewardListResp;
    }

    /** Properties of an ArenaGetRewardReq. */
    interface IArenaGetRewardReq {

        /** ArenaGetRewardReq arenaId */
        arenaId: number;
    }

    /** Represents an ArenaGetRewardReq. */
    class ArenaGetRewardReq implements IArenaGetRewardReq {

        /**
         * Constructs a new ArenaGetRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaGetRewardReq);

        /** ArenaGetRewardReq arenaId. */
        public arenaId: number;

        /**
         * Encodes the specified ArenaGetRewardReq message. Does not implicitly {@link gameProto.ArenaGetRewardReq.verify|verify} messages.
         * @param message ArenaGetRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaGetRewardReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaGetRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaGetRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaGetRewardReq;
    }

    /** Properties of an ArenaGetRewardResp. */
    interface IArenaGetRewardResp {

        /** ArenaGetRewardResp arenaId */
        arenaId: number;

        /** ArenaGetRewardResp result */
        result: boolean;
    }

    /** Represents an ArenaGetRewardResp. */
    class ArenaGetRewardResp implements IArenaGetRewardResp {

        /**
         * Constructs a new ArenaGetRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaGetRewardResp);

        /** ArenaGetRewardResp arenaId. */
        public arenaId: number;

        /** ArenaGetRewardResp result. */
        public result: boolean;

        /**
         * Encodes the specified ArenaGetRewardResp message. Does not implicitly {@link gameProto.ArenaGetRewardResp.verify|verify} messages.
         * @param message ArenaGetRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaGetRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaGetRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaGetRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaGetRewardResp;
    }

    /** Properties of an ArenaBattleRewardResp. */
    interface IArenaBattleRewardResp {

        /** ArenaBattleRewardResp arenaId */
        arenaId: number;

        /** ArenaBattleRewardResp reward */
        reward?: (gameProto.IValuesMessage[]|null);

        /** ArenaBattleRewardResp result */
        result: boolean;

        /** ArenaBattleRewardResp battleId */
        battleId: number;
    }

    /** Represents an ArenaBattleRewardResp. */
    class ArenaBattleRewardResp implements IArenaBattleRewardResp {

        /**
         * Constructs a new ArenaBattleRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArenaBattleRewardResp);

        /** ArenaBattleRewardResp arenaId. */
        public arenaId: number;

        /** ArenaBattleRewardResp reward. */
        public reward: gameProto.IValuesMessage[];

        /** ArenaBattleRewardResp result. */
        public result: boolean;

        /** ArenaBattleRewardResp battleId. */
        public battleId: number;

        /**
         * Encodes the specified ArenaBattleRewardResp message. Does not implicitly {@link gameProto.ArenaBattleRewardResp.verify|verify} messages.
         * @param message ArenaBattleRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArenaBattleRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArenaBattleRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArenaBattleRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArenaBattleRewardResp;
    }

    /** Properties of a C2S_ARENA_BUY_RESET. */
    interface IC2S_ARENA_BUY_RESET {
    }

    /** Represents a C2S_ARENA_BUY_RESET. */
    class C2S_ARENA_BUY_RESET implements IC2S_ARENA_BUY_RESET {

        /**
         * Constructs a new C2S_ARENA_BUY_RESET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ARENA_BUY_RESET);

        /**
         * Encodes the specified C2S_ARENA_BUY_RESET message. Does not implicitly {@link gameProto.C2S_ARENA_BUY_RESET.verify|verify} messages.
         * @param message C2S_ARENA_BUY_RESET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ARENA_BUY_RESET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ARENA_BUY_RESET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ARENA_BUY_RESET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ARENA_BUY_RESET;
    }

    /** Properties of a S2C_ARENA_BUY_RESET. */
    interface IS2C_ARENA_BUY_RESET {

        /** S2C_ARENA_BUY_RESET resetCount */
        resetCount?: (number|null);

        /** S2C_ARENA_BUY_RESET buyResetCount */
        buyResetCount?: (number|null);
    }

    /** Represents a S2C_ARENA_BUY_RESET. */
    class S2C_ARENA_BUY_RESET implements IS2C_ARENA_BUY_RESET {

        /**
         * Constructs a new S2C_ARENA_BUY_RESET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ARENA_BUY_RESET);

        /** S2C_ARENA_BUY_RESET resetCount. */
        public resetCount: number;

        /** S2C_ARENA_BUY_RESET buyResetCount. */
        public buyResetCount: number;

        /**
         * Encodes the specified S2C_ARENA_BUY_RESET message. Does not implicitly {@link gameProto.S2C_ARENA_BUY_RESET.verify|verify} messages.
         * @param message S2C_ARENA_BUY_RESET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ARENA_BUY_RESET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ARENA_BUY_RESET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ARENA_BUY_RESET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ARENA_BUY_RESET;
    }

    /** Properties of an ArmyMessage. */
    interface IArmyMessage {

        /** ArmyMessage armyType */
        armyType: number;

        /** ArmyMessage num */
        num: number;

        /** ArmyMessage level */
        level: number;

        /** ArmyMessage soldierAttribute */
        soldierAttribute?: (gameProto.IAttributeValue[]|null);
    }

    /** Represents an ArmyMessage. */
    class ArmyMessage implements IArmyMessage {

        /**
         * Constructs a new ArmyMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArmyMessage);

        /** ArmyMessage armyType. */
        public armyType: number;

        /** ArmyMessage num. */
        public num: number;

        /** ArmyMessage level. */
        public level: number;

        /** ArmyMessage soldierAttribute. */
        public soldierAttribute: gameProto.IAttributeValue[];

        /**
         * Encodes the specified ArmyMessage message. Does not implicitly {@link gameProto.ArmyMessage.verify|verify} messages.
         * @param message ArmyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArmyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArmyMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArmyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArmyMessage;
    }

    /** Properties of a GetArmyReq. */
    interface IGetArmyReq {
    }

    /** Represents a GetArmyReq. */
    class GetArmyReq implements IGetArmyReq {

        /**
         * Constructs a new GetArmyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetArmyReq);

        /**
         * Encodes the specified GetArmyReq message. Does not implicitly {@link gameProto.GetArmyReq.verify|verify} messages.
         * @param message GetArmyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetArmyReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetArmyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetArmyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetArmyReq;
    }

    /** Properties of a GetArmyResp. */
    interface IGetArmyResp {

        /** GetArmyResp armys */
        armys?: (gameProto.IArmyMessage[]|null);
    }

    /** Represents a GetArmyResp. */
    class GetArmyResp implements IGetArmyResp {

        /**
         * Constructs a new GetArmyResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetArmyResp);

        /** GetArmyResp armys. */
        public armys: gameProto.IArmyMessage[];

        /**
         * Encodes the specified GetArmyResp message. Does not implicitly {@link gameProto.GetArmyResp.verify|verify} messages.
         * @param message GetArmyResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetArmyResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetArmyResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetArmyResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetArmyResp;
    }

    /** Properties of an ArmyUpgradeLevelReq. */
    interface IArmyUpgradeLevelReq {

        /** ArmyUpgradeLevelReq armyType */
        armyType: number;
    }

    /** Represents an ArmyUpgradeLevelReq. */
    class ArmyUpgradeLevelReq implements IArmyUpgradeLevelReq {

        /**
         * Constructs a new ArmyUpgradeLevelReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArmyUpgradeLevelReq);

        /** ArmyUpgradeLevelReq armyType. */
        public armyType: number;

        /**
         * Encodes the specified ArmyUpgradeLevelReq message. Does not implicitly {@link gameProto.ArmyUpgradeLevelReq.verify|verify} messages.
         * @param message ArmyUpgradeLevelReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArmyUpgradeLevelReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArmyUpgradeLevelReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArmyUpgradeLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArmyUpgradeLevelReq;
    }

    /** Properties of an ArmyUpgradeLevelResp. */
    interface IArmyUpgradeLevelResp {

        /** ArmyUpgradeLevelResp armyType */
        armyType: number;

        /** ArmyUpgradeLevelResp level */
        level: number;
    }

    /** Represents an ArmyUpgradeLevelResp. */
    class ArmyUpgradeLevelResp implements IArmyUpgradeLevelResp {

        /**
         * Constructs a new ArmyUpgradeLevelResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArmyUpgradeLevelResp);

        /** ArmyUpgradeLevelResp armyType. */
        public armyType: number;

        /** ArmyUpgradeLevelResp level. */
        public level: number;

        /**
         * Encodes the specified ArmyUpgradeLevelResp message. Does not implicitly {@link gameProto.ArmyUpgradeLevelResp.verify|verify} messages.
         * @param message ArmyUpgradeLevelResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArmyUpgradeLevelResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArmyUpgradeLevelResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArmyUpgradeLevelResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArmyUpgradeLevelResp;
    }

    /** Properties of a BackpackGrid. */
    interface IBackpackGrid {

        /** BackpackGrid itemId */
        itemId: number;

        /** BackpackGrid count */
        count: number;

        /** BackpackGrid uuid */
        uuid: number;

        /** BackpackGrid level */
        level?: (number|null);
    }

    /** Represents a BackpackGrid. */
    class BackpackGrid implements IBackpackGrid {

        /**
         * Constructs a new BackpackGrid.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackGrid);

        /** BackpackGrid itemId. */
        public itemId: number;

        /** BackpackGrid count. */
        public count: number;

        /** BackpackGrid uuid. */
        public uuid: number;

        /** BackpackGrid level. */
        public level: number;

        /**
         * Encodes the specified BackpackGrid message. Does not implicitly {@link gameProto.BackpackGrid.verify|verify} messages.
         * @param message BackpackGrid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackGrid, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackGrid message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackGrid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackGrid;
    }

    /** Properties of a BackpackQueryReq. */
    interface IBackpackQueryReq {
    }

    /** Represents a BackpackQueryReq. */
    class BackpackQueryReq implements IBackpackQueryReq {

        /**
         * Constructs a new BackpackQueryReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackQueryReq);

        /**
         * Encodes the specified BackpackQueryReq message. Does not implicitly {@link gameProto.BackpackQueryReq.verify|verify} messages.
         * @param message BackpackQueryReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackQueryReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackQueryReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackQueryReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackQueryReq;
    }

    /** Properties of a BackpackQueryResp. */
    interface IBackpackQueryResp {

        /** BackpackQueryResp backpackGrids */
        backpackGrids?: (gameProto.IBackpackGrid[]|null);
    }

    /** Represents a BackpackQueryResp. */
    class BackpackQueryResp implements IBackpackQueryResp {

        /**
         * Constructs a new BackpackQueryResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackQueryResp);

        /** BackpackQueryResp backpackGrids. */
        public backpackGrids: gameProto.IBackpackGrid[];

        /**
         * Encodes the specified BackpackQueryResp message. Does not implicitly {@link gameProto.BackpackQueryResp.verify|verify} messages.
         * @param message BackpackQueryResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackQueryResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackQueryResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackQueryResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackQueryResp;
    }

    /** Properties of a BackpackItemUseReq. */
    interface IBackpackItemUseReq {

        /** BackpackItemUseReq itemId */
        itemId: number;

        /** BackpackItemUseReq count */
        count: number;
    }

    /** Represents a BackpackItemUseReq. */
    class BackpackItemUseReq implements IBackpackItemUseReq {

        /**
         * Constructs a new BackpackItemUseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackItemUseReq);

        /** BackpackItemUseReq itemId. */
        public itemId: number;

        /** BackpackItemUseReq count. */
        public count: number;

        /**
         * Encodes the specified BackpackItemUseReq message. Does not implicitly {@link gameProto.BackpackItemUseReq.verify|verify} messages.
         * @param message BackpackItemUseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackItemUseReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackItemUseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackItemUseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackItemUseReq;
    }

    /** Properties of a BackpackItemUseResp. */
    interface IBackpackItemUseResp {

        /** BackpackItemUseResp result */
        result: boolean;

        /** BackpackItemUseResp message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a BackpackItemUseResp. */
    class BackpackItemUseResp implements IBackpackItemUseResp {

        /**
         * Constructs a new BackpackItemUseResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackItemUseResp);

        /** BackpackItemUseResp result. */
        public result: boolean;

        /** BackpackItemUseResp message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified BackpackItemUseResp message. Does not implicitly {@link gameProto.BackpackItemUseResp.verify|verify} messages.
         * @param message BackpackItemUseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackItemUseResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackItemUseResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackItemUseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackItemUseResp;
    }

    /** Properties of a BackpackSafeUseReq. */
    interface IBackpackSafeUseReq {
    }

    /** Represents a BackpackSafeUseReq. */
    class BackpackSafeUseReq implements IBackpackSafeUseReq {

        /**
         * Constructs a new BackpackSafeUseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackSafeUseReq);

        /**
         * Encodes the specified BackpackSafeUseReq message. Does not implicitly {@link gameProto.BackpackSafeUseReq.verify|verify} messages.
         * @param message BackpackSafeUseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackSafeUseReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackSafeUseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackSafeUseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackSafeUseReq;
    }

    /** Properties of a BackpackSafeUseResp. */
    interface IBackpackSafeUseResp {

        /** BackpackSafeUseResp result */
        result: boolean;
    }

    /** Represents a BackpackSafeUseResp. */
    class BackpackSafeUseResp implements IBackpackSafeUseResp {

        /**
         * Constructs a new BackpackSafeUseResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackSafeUseResp);

        /** BackpackSafeUseResp result. */
        public result: boolean;

        /**
         * Encodes the specified BackpackSafeUseResp message. Does not implicitly {@link gameProto.BackpackSafeUseResp.verify|verify} messages.
         * @param message BackpackSafeUseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackSafeUseResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackSafeUseResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackSafeUseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackSafeUseResp;
    }

    /** Properties of a BackpackDeleteItemReq. */
    interface IBackpackDeleteItemReq {

        /** BackpackDeleteItemReq item */
        item: gameProto.IBackpackGrid;
    }

    /** Represents a BackpackDeleteItemReq. */
    class BackpackDeleteItemReq implements IBackpackDeleteItemReq {

        /**
         * Constructs a new BackpackDeleteItemReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackDeleteItemReq);

        /** BackpackDeleteItemReq item. */
        public item: gameProto.IBackpackGrid;

        /**
         * Encodes the specified BackpackDeleteItemReq message. Does not implicitly {@link gameProto.BackpackDeleteItemReq.verify|verify} messages.
         * @param message BackpackDeleteItemReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackDeleteItemReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackDeleteItemReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackDeleteItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackDeleteItemReq;
    }

    /** Properties of a BackpackDeleteItemResp. */
    interface IBackpackDeleteItemResp {

        /** BackpackDeleteItemResp result */
        result: boolean;
    }

    /** Represents a BackpackDeleteItemResp. */
    class BackpackDeleteItemResp implements IBackpackDeleteItemResp {

        /**
         * Constructs a new BackpackDeleteItemResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBackpackDeleteItemResp);

        /** BackpackDeleteItemResp result. */
        public result: boolean;

        /**
         * Encodes the specified BackpackDeleteItemResp message. Does not implicitly {@link gameProto.BackpackDeleteItemResp.verify|verify} messages.
         * @param message BackpackDeleteItemResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBackpackDeleteItemResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BackpackDeleteItemResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackpackDeleteItemResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BackpackDeleteItemResp;
    }

    /** Properties of a S2C_BACKPACKGRID_CHANGE. */
    interface IS2C_BACKPACKGRID_CHANGE {

        /** S2C_BACKPACKGRID_CHANGE grids */
        grids?: (gameProto.IBackpackGrid[]|null);
    }

    /** Represents a S2C_BACKPACKGRID_CHANGE. */
    class S2C_BACKPACKGRID_CHANGE implements IS2C_BACKPACKGRID_CHANGE {

        /**
         * Constructs a new S2C_BACKPACKGRID_CHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BACKPACKGRID_CHANGE);

        /** S2C_BACKPACKGRID_CHANGE grids. */
        public grids: gameProto.IBackpackGrid[];

        /**
         * Encodes the specified S2C_BACKPACKGRID_CHANGE message. Does not implicitly {@link gameProto.S2C_BACKPACKGRID_CHANGE.verify|verify} messages.
         * @param message S2C_BACKPACKGRID_CHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BACKPACKGRID_CHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BACKPACKGRID_CHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BACKPACKGRID_CHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BACKPACKGRID_CHANGE;
    }

    /** Properties of a C2S_WAR_START. */
    interface IC2S_WAR_START {

        /** C2S_WAR_START battleId */
        battleId: number;
    }

    /** Represents a C2S_WAR_START. */
    class C2S_WAR_START implements IC2S_WAR_START {

        /**
         * Constructs a new C2S_WAR_START.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_START);

        /** C2S_WAR_START battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WAR_START message. Does not implicitly {@link gameProto.C2S_WAR_START.verify|verify} messages.
         * @param message C2S_WAR_START message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_START, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_START message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_START
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_START;
    }

    /** Properties of a S2C_WAR_START. */
    interface IS2C_WAR_START {

        /** S2C_WAR_START status */
        status: number;
    }

    /** Represents a S2C_WAR_START. */
    class S2C_WAR_START implements IS2C_WAR_START {

        /**
         * Constructs a new S2C_WAR_START.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_START);

        /** S2C_WAR_START status. */
        public status: number;

        /**
         * Encodes the specified S2C_WAR_START message. Does not implicitly {@link gameProto.S2C_WAR_START.verify|verify} messages.
         * @param message S2C_WAR_START message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_START, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_START message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_START
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_START;
    }

    /** Properties of a C2S_WAR_ANAGER_SKILL. */
    interface IC2S_WAR_ANAGER_SKILL {

        /** C2S_WAR_ANAGER_SKILL battleId */
        battleId: number;

        /** C2S_WAR_ANAGER_SKILL elementId */
        elementId: number;

        /** C2S_WAR_ANAGER_SKILL baseSkillId */
        baseSkillId: number;
    }

    /** Represents a C2S_WAR_ANAGER_SKILL. */
    class C2S_WAR_ANAGER_SKILL implements IC2S_WAR_ANAGER_SKILL {

        /**
         * Constructs a new C2S_WAR_ANAGER_SKILL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_ANAGER_SKILL);

        /** C2S_WAR_ANAGER_SKILL battleId. */
        public battleId: number;

        /** C2S_WAR_ANAGER_SKILL elementId. */
        public elementId: number;

        /** C2S_WAR_ANAGER_SKILL baseSkillId. */
        public baseSkillId: number;

        /**
         * Encodes the specified C2S_WAR_ANAGER_SKILL message. Does not implicitly {@link gameProto.C2S_WAR_ANAGER_SKILL.verify|verify} messages.
         * @param message C2S_WAR_ANAGER_SKILL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_ANAGER_SKILL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_ANAGER_SKILL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_ANAGER_SKILL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_ANAGER_SKILL;
    }

    /** Properties of a C2S_WAR_REENTRY_BATTLE. */
    interface IC2S_WAR_REENTRY_BATTLE {

        /** C2S_WAR_REENTRY_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_WAR_REENTRY_BATTLE. */
    class C2S_WAR_REENTRY_BATTLE implements IC2S_WAR_REENTRY_BATTLE {

        /**
         * Constructs a new C2S_WAR_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_REENTRY_BATTLE);

        /** C2S_WAR_REENTRY_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WAR_REENTRY_BATTLE message. Does not implicitly {@link gameProto.C2S_WAR_REENTRY_BATTLE.verify|verify} messages.
         * @param message C2S_WAR_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_REENTRY_BATTLE;
    }

    /** Properties of a S2C_WAR_REENTRY_BATTLE. */
    interface IS2C_WAR_REENTRY_BATTLE {

        /** S2C_WAR_REENTRY_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WAR_REENTRY_BATTLE. */
    class S2C_WAR_REENTRY_BATTLE implements IS2C_WAR_REENTRY_BATTLE {

        /**
         * Constructs a new S2C_WAR_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_REENTRY_BATTLE);

        /** S2C_WAR_REENTRY_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WAR_REENTRY_BATTLE message. Does not implicitly {@link gameProto.S2C_WAR_REENTRY_BATTLE.verify|verify} messages.
         * @param message S2C_WAR_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_REENTRY_BATTLE;
    }

    /** Properties of a C2S_WAR_QUIT_BATTLE. */
    interface IC2S_WAR_QUIT_BATTLE {

        /** C2S_WAR_QUIT_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_WAR_QUIT_BATTLE. */
    class C2S_WAR_QUIT_BATTLE implements IC2S_WAR_QUIT_BATTLE {

        /**
         * Constructs a new C2S_WAR_QUIT_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_QUIT_BATTLE);

        /** C2S_WAR_QUIT_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WAR_QUIT_BATTLE message. Does not implicitly {@link gameProto.C2S_WAR_QUIT_BATTLE.verify|verify} messages.
         * @param message C2S_WAR_QUIT_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_QUIT_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_QUIT_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_QUIT_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_QUIT_BATTLE;
    }

    /** Properties of a S2C_WAR_QUIT_BATTLE. */
    interface IS2C_WAR_QUIT_BATTLE {

        /** S2C_WAR_QUIT_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WAR_QUIT_BATTLE. */
    class S2C_WAR_QUIT_BATTLE implements IS2C_WAR_QUIT_BATTLE {

        /**
         * Constructs a new S2C_WAR_QUIT_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_QUIT_BATTLE);

        /** S2C_WAR_QUIT_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WAR_QUIT_BATTLE message. Does not implicitly {@link gameProto.S2C_WAR_QUIT_BATTLE.verify|verify} messages.
         * @param message S2C_WAR_QUIT_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_QUIT_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_QUIT_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_QUIT_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_QUIT_BATTLE;
    }

    /** Properties of a C2S_WAR_QUICK_BATTLE. */
    interface IC2S_WAR_QUICK_BATTLE {

        /** C2S_WAR_QUICK_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_WAR_QUICK_BATTLE. */
    class C2S_WAR_QUICK_BATTLE implements IC2S_WAR_QUICK_BATTLE {

        /**
         * Constructs a new C2S_WAR_QUICK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_QUICK_BATTLE);

        /** C2S_WAR_QUICK_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WAR_QUICK_BATTLE message. Does not implicitly {@link gameProto.C2S_WAR_QUICK_BATTLE.verify|verify} messages.
         * @param message C2S_WAR_QUICK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_QUICK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_QUICK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_QUICK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_QUICK_BATTLE;
    }

    /** Properties of a S2C_WAR_QUICK_BATTLE. */
    interface IS2C_WAR_QUICK_BATTLE {

        /** S2C_WAR_QUICK_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WAR_QUICK_BATTLE. */
    class S2C_WAR_QUICK_BATTLE implements IS2C_WAR_QUICK_BATTLE {

        /**
         * Constructs a new S2C_WAR_QUICK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_QUICK_BATTLE);

        /** S2C_WAR_QUICK_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WAR_QUICK_BATTLE message. Does not implicitly {@link gameProto.S2C_WAR_QUICK_BATTLE.verify|verify} messages.
         * @param message S2C_WAR_QUICK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_QUICK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_QUICK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_QUICK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_QUICK_BATTLE;
    }

    /** Properties of a WarAutoState. */
    interface IWarAutoState {

        /** WarAutoState warType */
        warType: number;

        /** WarAutoState autoState */
        autoState: boolean;
    }

    /** Represents a WarAutoState. */
    class WarAutoState implements IWarAutoState {

        /**
         * Constructs a new WarAutoState.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarAutoState);

        /** WarAutoState warType. */
        public warType: number;

        /** WarAutoState autoState. */
        public autoState: boolean;

        /**
         * Encodes the specified WarAutoState message. Does not implicitly {@link gameProto.WarAutoState.verify|verify} messages.
         * @param message WarAutoState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarAutoState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarAutoState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarAutoState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarAutoState;
    }

    /** Properties of a C2S_WAR_AUTO. */
    interface IC2S_WAR_AUTO {

        /** C2S_WAR_AUTO battleId */
        battleId: number;

        /** C2S_WAR_AUTO autoState */
        autoState: boolean;
    }

    /** Represents a C2S_WAR_AUTO. */
    class C2S_WAR_AUTO implements IC2S_WAR_AUTO {

        /**
         * Constructs a new C2S_WAR_AUTO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_AUTO);

        /** C2S_WAR_AUTO battleId. */
        public battleId: number;

        /** C2S_WAR_AUTO autoState. */
        public autoState: boolean;

        /**
         * Encodes the specified C2S_WAR_AUTO message. Does not implicitly {@link gameProto.C2S_WAR_AUTO.verify|verify} messages.
         * @param message C2S_WAR_AUTO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_AUTO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_AUTO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_AUTO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_AUTO;
    }

    /** Properties of a S2C_WAR_AUTO. */
    interface IS2C_WAR_AUTO {

        /** S2C_WAR_AUTO state */
        state: number;
    }

    /** Represents a S2C_WAR_AUTO. */
    class S2C_WAR_AUTO implements IS2C_WAR_AUTO {

        /**
         * Constructs a new S2C_WAR_AUTO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_AUTO);

        /** S2C_WAR_AUTO state. */
        public state: number;

        /**
         * Encodes the specified S2C_WAR_AUTO message. Does not implicitly {@link gameProto.S2C_WAR_AUTO.verify|verify} messages.
         * @param message S2C_WAR_AUTO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_AUTO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_AUTO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_AUTO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_AUTO;
    }

    /** Properties of a C2S_WAR_AUTO_LIST. */
    interface IC2S_WAR_AUTO_LIST {
    }

    /** Represents a C2S_WAR_AUTO_LIST. */
    class C2S_WAR_AUTO_LIST implements IC2S_WAR_AUTO_LIST {

        /**
         * Constructs a new C2S_WAR_AUTO_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_AUTO_LIST);

        /**
         * Encodes the specified C2S_WAR_AUTO_LIST message. Does not implicitly {@link gameProto.C2S_WAR_AUTO_LIST.verify|verify} messages.
         * @param message C2S_WAR_AUTO_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_AUTO_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_AUTO_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_AUTO_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_AUTO_LIST;
    }

    /** Properties of a S2C_WAR_AUTO_LIST. */
    interface IS2C_WAR_AUTO_LIST {

        /** S2C_WAR_AUTO_LIST list */
        list?: (gameProto.IWarAutoState[]|null);
    }

    /** Represents a S2C_WAR_AUTO_LIST. */
    class S2C_WAR_AUTO_LIST implements IS2C_WAR_AUTO_LIST {

        /**
         * Constructs a new S2C_WAR_AUTO_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_AUTO_LIST);

        /** S2C_WAR_AUTO_LIST list. */
        public list: gameProto.IWarAutoState[];

        /**
         * Encodes the specified S2C_WAR_AUTO_LIST message. Does not implicitly {@link gameProto.S2C_WAR_AUTO_LIST.verify|verify} messages.
         * @param message S2C_WAR_AUTO_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_AUTO_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_AUTO_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_AUTO_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_AUTO_LIST;
    }

    /** Properties of a C2S_WAR_QUERY_HERO_DATA. */
    interface IC2S_WAR_QUERY_HERO_DATA {

        /** C2S_WAR_QUERY_HERO_DATA battleId */
        battleId: number;

        /** C2S_WAR_QUERY_HERO_DATA elementId */
        elementId?: (number[]|null);
    }

    /** Represents a C2S_WAR_QUERY_HERO_DATA. */
    class C2S_WAR_QUERY_HERO_DATA implements IC2S_WAR_QUERY_HERO_DATA {

        /**
         * Constructs a new C2S_WAR_QUERY_HERO_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WAR_QUERY_HERO_DATA);

        /** C2S_WAR_QUERY_HERO_DATA battleId. */
        public battleId: number;

        /** C2S_WAR_QUERY_HERO_DATA elementId. */
        public elementId: number[];

        /**
         * Encodes the specified C2S_WAR_QUERY_HERO_DATA message. Does not implicitly {@link gameProto.C2S_WAR_QUERY_HERO_DATA.verify|verify} messages.
         * @param message C2S_WAR_QUERY_HERO_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WAR_QUERY_HERO_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WAR_QUERY_HERO_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WAR_QUERY_HERO_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WAR_QUERY_HERO_DATA;
    }

    /** Properties of a C2S_GM_REENTRY_BATTLE. */
    interface IC2S_GM_REENTRY_BATTLE {

        /** C2S_GM_REENTRY_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_GM_REENTRY_BATTLE. */
    class C2S_GM_REENTRY_BATTLE implements IC2S_GM_REENTRY_BATTLE {

        /**
         * Constructs a new C2S_GM_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GM_REENTRY_BATTLE);

        /** C2S_GM_REENTRY_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_GM_REENTRY_BATTLE message. Does not implicitly {@link gameProto.C2S_GM_REENTRY_BATTLE.verify|verify} messages.
         * @param message C2S_GM_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GM_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GM_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GM_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GM_REENTRY_BATTLE;
    }

    /** Properties of a S2C_GM_REENTRY_BATTLE. */
    interface IS2C_GM_REENTRY_BATTLE {

        /** S2C_GM_REENTRY_BATTLE status */
        status?: (number|null);
    }

    /** Represents a S2C_GM_REENTRY_BATTLE. */
    class S2C_GM_REENTRY_BATTLE implements IS2C_GM_REENTRY_BATTLE {

        /**
         * Constructs a new S2C_GM_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GM_REENTRY_BATTLE);

        /** S2C_GM_REENTRY_BATTLE status. */
        public status: number;

        /**
         * Encodes the specified S2C_GM_REENTRY_BATTLE message. Does not implicitly {@link gameProto.S2C_GM_REENTRY_BATTLE.verify|verify} messages.
         * @param message S2C_GM_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GM_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GM_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GM_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GM_REENTRY_BATTLE;
    }

    /** Properties of a HeroUnit. */
    interface IHeroUnit {

        /** HeroUnit heroPosition */
        heroPosition: number;

        /** HeroUnit heroMaxTroops */
        heroMaxTroops: number;

        /** HeroUnit heroTroops */
        heroTroops: number;

        /** HeroUnit baseId */
        baseId: number;

        /** HeroUnit id */
        id: number;

        /** HeroUnit anager */
        anager: number;

        /** HeroUnit soldierType */
        soldierType: number;

        /** HeroUnit passiveSkill */
        passiveSkill?: (gameProto.ISysKeyValue[]|null);

        /** HeroUnit attribute */
        attribute?: (gameProto.ISysKeyValue[]|null);
    }

    /** Represents a HeroUnit. */
    class HeroUnit implements IHeroUnit {

        /**
         * Constructs a new HeroUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHeroUnit);

        /** HeroUnit heroPosition. */
        public heroPosition: number;

        /** HeroUnit heroMaxTroops. */
        public heroMaxTroops: number;

        /** HeroUnit heroTroops. */
        public heroTroops: number;

        /** HeroUnit baseId. */
        public baseId: number;

        /** HeroUnit id. */
        public id: number;

        /** HeroUnit anager. */
        public anager: number;

        /** HeroUnit soldierType. */
        public soldierType: number;

        /** HeroUnit passiveSkill. */
        public passiveSkill: gameProto.ISysKeyValue[];

        /** HeroUnit attribute. */
        public attribute: gameProto.ISysKeyValue[];

        /**
         * Encodes the specified HeroUnit message. Does not implicitly {@link gameProto.HeroUnit.verify|verify} messages.
         * @param message HeroUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHeroUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HeroUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HeroUnit;
    }

    /** Properties of a TeamUnit. */
    interface ITeamUnit {

        /** TeamUnit id */
        id: number;

        /** TeamUnit heroUnit */
        heroUnit?: (gameProto.IHeroUnit[]|null);
    }

    /** Represents a TeamUnit. */
    class TeamUnit implements ITeamUnit {

        /**
         * Constructs a new TeamUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamUnit);

        /** TeamUnit id. */
        public id: number;

        /** TeamUnit heroUnit. */
        public heroUnit: gameProto.IHeroUnit[];

        /**
         * Encodes the specified TeamUnit message. Does not implicitly {@link gameProto.TeamUnit.verify|verify} messages.
         * @param message TeamUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamUnit;
    }

    /** Properties of a C2S_GM_WAR. */
    interface IC2S_GM_WAR {

        /** C2S_GM_WAR att */
        att: gameProto.ITeamUnit;

        /** C2S_GM_WAR def */
        def: gameProto.ITeamUnit;

        /** C2S_GM_WAR terrainId */
        terrainId?: (number|null);

        /** C2S_GM_WAR isNotSoldier */
        isNotSoldier?: (boolean|null);

        /** C2S_GM_WAR isSingleSoldier */
        isSingleSoldier?: (boolean|null);

        /** C2S_GM_WAR isDefendAuto */
        isDefendAuto?: (boolean|null);

        /** C2S_GM_WAR isSkillStop */
        isSkillStop?: (boolean|null);
    }

    /** Represents a C2S_GM_WAR. */
    class C2S_GM_WAR implements IC2S_GM_WAR {

        /**
         * Constructs a new C2S_GM_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GM_WAR);

        /** C2S_GM_WAR att. */
        public att: gameProto.ITeamUnit;

        /** C2S_GM_WAR def. */
        public def: gameProto.ITeamUnit;

        /** C2S_GM_WAR terrainId. */
        public terrainId: number;

        /** C2S_GM_WAR isNotSoldier. */
        public isNotSoldier: boolean;

        /** C2S_GM_WAR isSingleSoldier. */
        public isSingleSoldier: boolean;

        /** C2S_GM_WAR isDefendAuto. */
        public isDefendAuto: boolean;

        /** C2S_GM_WAR isSkillStop. */
        public isSkillStop: boolean;

        /**
         * Encodes the specified C2S_GM_WAR message. Does not implicitly {@link gameProto.C2S_GM_WAR.verify|verify} messages.
         * @param message C2S_GM_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GM_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GM_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GM_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GM_WAR;
    }

    /** Properties of a S2C_GM_WAR. */
    interface IS2C_GM_WAR {

        /** S2C_GM_WAR status */
        status: number;

        /** S2C_GM_WAR battleId */
        battleId: number;
    }

    /** Represents a S2C_GM_WAR. */
    class S2C_GM_WAR implements IS2C_GM_WAR {

        /**
         * Constructs a new S2C_GM_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GM_WAR);

        /** S2C_GM_WAR status. */
        public status: number;

        /** S2C_GM_WAR battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_GM_WAR message. Does not implicitly {@link gameProto.S2C_GM_WAR.verify|verify} messages.
         * @param message S2C_GM_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GM_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GM_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GM_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GM_WAR;
    }

    /** Properties of a S2C_GM_WAR_OVER. */
    interface IS2C_GM_WAR_OVER {

        /** S2C_GM_WAR_OVER isVictory */
        isVictory: number;
    }

    /** Represents a S2C_GM_WAR_OVER. */
    class S2C_GM_WAR_OVER implements IS2C_GM_WAR_OVER {

        /**
         * Constructs a new S2C_GM_WAR_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GM_WAR_OVER);

        /** S2C_GM_WAR_OVER isVictory. */
        public isVictory: number;

        /**
         * Encodes the specified S2C_GM_WAR_OVER message. Does not implicitly {@link gameProto.S2C_GM_WAR_OVER.verify|verify} messages.
         * @param message S2C_GM_WAR_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GM_WAR_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GM_WAR_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GM_WAR_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GM_WAR_OVER;
    }

    /** Properties of a C2S_WARPROXY_WAR_SERVER_CLOSE. */
    interface IC2S_WARPROXY_WAR_SERVER_CLOSE {
    }

    /** Represents a C2S_WARPROXY_WAR_SERVER_CLOSE. */
    class C2S_WARPROXY_WAR_SERVER_CLOSE implements IC2S_WARPROXY_WAR_SERVER_CLOSE {

        /**
         * Constructs a new C2S_WARPROXY_WAR_SERVER_CLOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_WAR_SERVER_CLOSE);

        /**
         * Encodes the specified C2S_WARPROXY_WAR_SERVER_CLOSE message. Does not implicitly {@link gameProto.C2S_WARPROXY_WAR_SERVER_CLOSE.verify|verify} messages.
         * @param message C2S_WARPROXY_WAR_SERVER_CLOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_WAR_SERVER_CLOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_WAR_SERVER_CLOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_WAR_SERVER_CLOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_WAR_SERVER_CLOSE;
    }

    /** Properties of a S2C_WARPROXY_WAR_SERVER_CLOSE. */
    interface IS2C_WARPROXY_WAR_SERVER_CLOSE {
    }

    /** Represents a S2C_WARPROXY_WAR_SERVER_CLOSE. */
    class S2C_WARPROXY_WAR_SERVER_CLOSE implements IS2C_WARPROXY_WAR_SERVER_CLOSE {

        /**
         * Constructs a new S2C_WARPROXY_WAR_SERVER_CLOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_WAR_SERVER_CLOSE);

        /**
         * Encodes the specified S2C_WARPROXY_WAR_SERVER_CLOSE message. Does not implicitly {@link gameProto.S2C_WARPROXY_WAR_SERVER_CLOSE.verify|verify} messages.
         * @param message S2C_WARPROXY_WAR_SERVER_CLOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_WAR_SERVER_CLOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_WAR_SERVER_CLOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_WAR_SERVER_CLOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_WAR_SERVER_CLOSE;
    }

    /** Properties of a C2S_WARPROXY_CREATE_BATTLEFIELD. */
    interface IC2S_WARPROXY_CREATE_BATTLEFIELD {

        /** C2S_WARPROXY_CREATE_BATTLEFIELD uid */
        uid: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD warType */
        warType: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD terrainId */
        terrainId: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD cityId */
        cityId?: (number|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD attCountryId */
        attCountryId?: (number|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD defCountryId */
        defCountryId?: (number|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD isNotSoldier */
        isNotSoldier?: (boolean|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD isSkillStop */
        isSkillStop?: (boolean|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD sceneElementData */
        sceneElementData?: (Uint8Array[]|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD globalAttribute */
        globalAttribute?: (Uint8Array|null);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD guideId */
        guideId?: (number|null);
    }

    /** Represents a C2S_WARPROXY_CREATE_BATTLEFIELD. */
    class C2S_WARPROXY_CREATE_BATTLEFIELD implements IC2S_WARPROXY_CREATE_BATTLEFIELD {

        /**
         * Constructs a new C2S_WARPROXY_CREATE_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CREATE_BATTLEFIELD);

        /** C2S_WARPROXY_CREATE_BATTLEFIELD uid. */
        public uid: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD warType. */
        public warType: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD terrainId. */
        public terrainId: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD attCountryId. */
        public attCountryId: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD defCountryId. */
        public defCountryId: number;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD isNotSoldier. */
        public isNotSoldier: boolean;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD isSkillStop. */
        public isSkillStop: boolean;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD sceneElementData. */
        public sceneElementData: Uint8Array[];

        /** C2S_WARPROXY_CREATE_BATTLEFIELD globalAttribute. */
        public globalAttribute: Uint8Array;

        /** C2S_WARPROXY_CREATE_BATTLEFIELD guideId. */
        public guideId: number;

        /**
         * Encodes the specified C2S_WARPROXY_CREATE_BATTLEFIELD message. Does not implicitly {@link gameProto.C2S_WARPROXY_CREATE_BATTLEFIELD.verify|verify} messages.
         * @param message C2S_WARPROXY_CREATE_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CREATE_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CREATE_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CREATE_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CREATE_BATTLEFIELD;
    }

    /** Properties of a S2C_WARPROXY_CREATE_BATTLEFIELD. */
    interface IS2C_WARPROXY_CREATE_BATTLEFIELD {

        /** S2C_WARPROXY_CREATE_BATTLEFIELD battleId */
        battleId: number;
    }

    /** Represents a S2C_WARPROXY_CREATE_BATTLEFIELD. */
    class S2C_WARPROXY_CREATE_BATTLEFIELD implements IS2C_WARPROXY_CREATE_BATTLEFIELD {

        /**
         * Constructs a new S2C_WARPROXY_CREATE_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CREATE_BATTLEFIELD);

        /** S2C_WARPROXY_CREATE_BATTLEFIELD battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_WARPROXY_CREATE_BATTLEFIELD message. Does not implicitly {@link gameProto.S2C_WARPROXY_CREATE_BATTLEFIELD.verify|verify} messages.
         * @param message S2C_WARPROXY_CREATE_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CREATE_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CREATE_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CREATE_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CREATE_BATTLEFIELD;
    }

    /** Properties of a C2S_WARPROXY_GLOBAL_ATTRIBUTE. */
    interface IC2S_WARPROXY_GLOBAL_ATTRIBUTE {

        /** C2S_WARPROXY_GLOBAL_ATTRIBUTE battleId */
        battleId: number;

        /** C2S_WARPROXY_GLOBAL_ATTRIBUTE globalAttribute */
        globalAttribute: Uint8Array;
    }

    /** Represents a C2S_WARPROXY_GLOBAL_ATTRIBUTE. */
    class C2S_WARPROXY_GLOBAL_ATTRIBUTE implements IC2S_WARPROXY_GLOBAL_ATTRIBUTE {

        /**
         * Constructs a new C2S_WARPROXY_GLOBAL_ATTRIBUTE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_GLOBAL_ATTRIBUTE);

        /** C2S_WARPROXY_GLOBAL_ATTRIBUTE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_GLOBAL_ATTRIBUTE globalAttribute. */
        public globalAttribute: Uint8Array;

        /**
         * Encodes the specified C2S_WARPROXY_GLOBAL_ATTRIBUTE message. Does not implicitly {@link gameProto.C2S_WARPROXY_GLOBAL_ATTRIBUTE.verify|verify} messages.
         * @param message C2S_WARPROXY_GLOBAL_ATTRIBUTE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_GLOBAL_ATTRIBUTE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_GLOBAL_ATTRIBUTE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_GLOBAL_ATTRIBUTE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_GLOBAL_ATTRIBUTE;
    }

    /** Properties of a S2C_WARPROXY_GLOBAL_ATTRIBUTE. */
    interface IS2C_WARPROXY_GLOBAL_ATTRIBUTE {

        /** S2C_WARPROXY_GLOBAL_ATTRIBUTE ret */
        ret: number;
    }

    /** Represents a S2C_WARPROXY_GLOBAL_ATTRIBUTE. */
    class S2C_WARPROXY_GLOBAL_ATTRIBUTE implements IS2C_WARPROXY_GLOBAL_ATTRIBUTE {

        /**
         * Constructs a new S2C_WARPROXY_GLOBAL_ATTRIBUTE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_GLOBAL_ATTRIBUTE);

        /** S2C_WARPROXY_GLOBAL_ATTRIBUTE ret. */
        public ret: number;

        /**
         * Encodes the specified S2C_WARPROXY_GLOBAL_ATTRIBUTE message. Does not implicitly {@link gameProto.S2C_WARPROXY_GLOBAL_ATTRIBUTE.verify|verify} messages.
         * @param message S2C_WARPROXY_GLOBAL_ATTRIBUTE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_GLOBAL_ATTRIBUTE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_GLOBAL_ATTRIBUTE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_GLOBAL_ATTRIBUTE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_GLOBAL_ATTRIBUTE;
    }

    /** Properties of a C2S_WARPROXY_ADD_CORPS. */
    interface IC2S_WARPROXY_ADD_CORPS {

        /** C2S_WARPROXY_ADD_CORPS battleId */
        battleId: number;

        /** C2S_WARPROXY_ADD_CORPS teamData */
        teamData: Uint8Array;
    }

    /** Represents a C2S_WARPROXY_ADD_CORPS. */
    class C2S_WARPROXY_ADD_CORPS implements IC2S_WARPROXY_ADD_CORPS {

        /**
         * Constructs a new C2S_WARPROXY_ADD_CORPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_ADD_CORPS);

        /** C2S_WARPROXY_ADD_CORPS battleId. */
        public battleId: number;

        /** C2S_WARPROXY_ADD_CORPS teamData. */
        public teamData: Uint8Array;

        /**
         * Encodes the specified C2S_WARPROXY_ADD_CORPS message. Does not implicitly {@link gameProto.C2S_WARPROXY_ADD_CORPS.verify|verify} messages.
         * @param message C2S_WARPROXY_ADD_CORPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_ADD_CORPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_ADD_CORPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_ADD_CORPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_ADD_CORPS;
    }

    /** Properties of a S2C_WARPROXY_ADD_CORPS. */
    interface IS2C_WARPROXY_ADD_CORPS {

        /** S2C_WARPROXY_ADD_CORPS ret */
        ret: number;
    }

    /** Represents a S2C_WARPROXY_ADD_CORPS. */
    class S2C_WARPROXY_ADD_CORPS implements IS2C_WARPROXY_ADD_CORPS {

        /**
         * Constructs a new S2C_WARPROXY_ADD_CORPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_ADD_CORPS);

        /** S2C_WARPROXY_ADD_CORPS ret. */
        public ret: number;

        /**
         * Encodes the specified S2C_WARPROXY_ADD_CORPS message. Does not implicitly {@link gameProto.S2C_WARPROXY_ADD_CORPS.verify|verify} messages.
         * @param message S2C_WARPROXY_ADD_CORPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_ADD_CORPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_ADD_CORPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_ADD_CORPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_ADD_CORPS;
    }

    /** Properties of a C2S_WARPROXY_INIT_BATTLEFIELD. */
    interface IC2S_WARPROXY_INIT_BATTLEFIELD {

        /** C2S_WARPROXY_INIT_BATTLEFIELD battleId */
        battleId: number;

        /** C2S_WARPROXY_INIT_BATTLEFIELD uid */
        uid: number;
    }

    /** Represents a C2S_WARPROXY_INIT_BATTLEFIELD. */
    class C2S_WARPROXY_INIT_BATTLEFIELD implements IC2S_WARPROXY_INIT_BATTLEFIELD {

        /**
         * Constructs a new C2S_WARPROXY_INIT_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_INIT_BATTLEFIELD);

        /** C2S_WARPROXY_INIT_BATTLEFIELD battleId. */
        public battleId: number;

        /** C2S_WARPROXY_INIT_BATTLEFIELD uid. */
        public uid: number;

        /**
         * Encodes the specified C2S_WARPROXY_INIT_BATTLEFIELD message. Does not implicitly {@link gameProto.C2S_WARPROXY_INIT_BATTLEFIELD.verify|verify} messages.
         * @param message C2S_WARPROXY_INIT_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_INIT_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_INIT_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_INIT_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_INIT_BATTLEFIELD;
    }

    /** Properties of a S2C_WARPROXY_INIT_BATTLEFIELD. */
    interface IS2C_WARPROXY_INIT_BATTLEFIELD {

        /** S2C_WARPROXY_INIT_BATTLEFIELD ret */
        ret: number;
    }

    /** Represents a S2C_WARPROXY_INIT_BATTLEFIELD. */
    class S2C_WARPROXY_INIT_BATTLEFIELD implements IS2C_WARPROXY_INIT_BATTLEFIELD {

        /**
         * Constructs a new S2C_WARPROXY_INIT_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_INIT_BATTLEFIELD);

        /** S2C_WARPROXY_INIT_BATTLEFIELD ret. */
        public ret: number;

        /**
         * Encodes the specified S2C_WARPROXY_INIT_BATTLEFIELD message. Does not implicitly {@link gameProto.S2C_WARPROXY_INIT_BATTLEFIELD.verify|verify} messages.
         * @param message S2C_WARPROXY_INIT_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_INIT_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_INIT_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_INIT_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_INIT_BATTLEFIELD;
    }

    /** Properties of a C2S_WARPROXY_REENTRY_BATTLE. */
    interface IC2S_WARPROXY_REENTRY_BATTLE {

        /** C2S_WARPROXY_REENTRY_BATTLE battleId */
        battleId: number;

        /** C2S_WARPROXY_REENTRY_BATTLE uid */
        uid: number;
    }

    /** Represents a C2S_WARPROXY_REENTRY_BATTLE. */
    class C2S_WARPROXY_REENTRY_BATTLE implements IC2S_WARPROXY_REENTRY_BATTLE {

        /**
         * Constructs a new C2S_WARPROXY_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_REENTRY_BATTLE);

        /** C2S_WARPROXY_REENTRY_BATTLE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_REENTRY_BATTLE uid. */
        public uid: number;

        /**
         * Encodes the specified C2S_WARPROXY_REENTRY_BATTLE message. Does not implicitly {@link gameProto.C2S_WARPROXY_REENTRY_BATTLE.verify|verify} messages.
         * @param message C2S_WARPROXY_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_REENTRY_BATTLE;
    }

    /** Properties of a S2C_WARPROXY_REENTRY_BATTLE. */
    interface IS2C_WARPROXY_REENTRY_BATTLE {

        /** S2C_WARPROXY_REENTRY_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_REENTRY_BATTLE. */
    class S2C_WARPROXY_REENTRY_BATTLE implements IS2C_WARPROXY_REENTRY_BATTLE {

        /**
         * Constructs a new S2C_WARPROXY_REENTRY_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_REENTRY_BATTLE);

        /** S2C_WARPROXY_REENTRY_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_REENTRY_BATTLE message. Does not implicitly {@link gameProto.S2C_WARPROXY_REENTRY_BATTLE.verify|verify} messages.
         * @param message S2C_WARPROXY_REENTRY_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_REENTRY_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_REENTRY_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_REENTRY_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_REENTRY_BATTLE;
    }

    /** Properties of a C2S_WARPROXY_QUIT_BATTLE. */
    interface IC2S_WARPROXY_QUIT_BATTLE {

        /** C2S_WARPROXY_QUIT_BATTLE battleId */
        battleId: number;

        /** C2S_WARPROXY_QUIT_BATTLE uid */
        uid: number;
    }

    /** Represents a C2S_WARPROXY_QUIT_BATTLE. */
    class C2S_WARPROXY_QUIT_BATTLE implements IC2S_WARPROXY_QUIT_BATTLE {

        /**
         * Constructs a new C2S_WARPROXY_QUIT_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_QUIT_BATTLE);

        /** C2S_WARPROXY_QUIT_BATTLE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_QUIT_BATTLE uid. */
        public uid: number;

        /**
         * Encodes the specified C2S_WARPROXY_QUIT_BATTLE message. Does not implicitly {@link gameProto.C2S_WARPROXY_QUIT_BATTLE.verify|verify} messages.
         * @param message C2S_WARPROXY_QUIT_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_QUIT_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_QUIT_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_QUIT_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_QUIT_BATTLE;
    }

    /** Properties of a S2C_WARPROXY_QUIT_BATTLE. */
    interface IS2C_WARPROXY_QUIT_BATTLE {

        /** S2C_WARPROXY_QUIT_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_QUIT_BATTLE. */
    class S2C_WARPROXY_QUIT_BATTLE implements IS2C_WARPROXY_QUIT_BATTLE {

        /**
         * Constructs a new S2C_WARPROXY_QUIT_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_QUIT_BATTLE);

        /** S2C_WARPROXY_QUIT_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_QUIT_BATTLE message. Does not implicitly {@link gameProto.S2C_WARPROXY_QUIT_BATTLE.verify|verify} messages.
         * @param message S2C_WARPROXY_QUIT_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_QUIT_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_QUIT_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_QUIT_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_QUIT_BATTLE;
    }

    /** Properties of a C2S_WARPROXY_ANGER_SKILL. */
    interface IC2S_WARPROXY_ANGER_SKILL {

        /** C2S_WARPROXY_ANGER_SKILL battleId */
        battleId: number;

        /** C2S_WARPROXY_ANGER_SKILL elementId */
        elementId: number;

        /** C2S_WARPROXY_ANGER_SKILL baseSkillId */
        baseSkillId: number;
    }

    /** Represents a C2S_WARPROXY_ANGER_SKILL. */
    class C2S_WARPROXY_ANGER_SKILL implements IC2S_WARPROXY_ANGER_SKILL {

        /**
         * Constructs a new C2S_WARPROXY_ANGER_SKILL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_ANGER_SKILL);

        /** C2S_WARPROXY_ANGER_SKILL battleId. */
        public battleId: number;

        /** C2S_WARPROXY_ANGER_SKILL elementId. */
        public elementId: number;

        /** C2S_WARPROXY_ANGER_SKILL baseSkillId. */
        public baseSkillId: number;

        /**
         * Encodes the specified C2S_WARPROXY_ANGER_SKILL message. Does not implicitly {@link gameProto.C2S_WARPROXY_ANGER_SKILL.verify|verify} messages.
         * @param message C2S_WARPROXY_ANGER_SKILL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_ANGER_SKILL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_ANGER_SKILL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_ANGER_SKILL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_ANGER_SKILL;
    }

    /** Properties of a S2C_WARPROXY_OVER. */
    interface IS2C_WARPROXY_OVER {

        /** S2C_WARPROXY_OVER battleId */
        battleId: number;

        /** S2C_WARPROXY_OVER overData */
        overData: Uint8Array;

        /** S2C_WARPROXY_OVER countryId */
        countryId: number;
    }

    /** Represents a S2C_WARPROXY_OVER. */
    class S2C_WARPROXY_OVER implements IS2C_WARPROXY_OVER {

        /**
         * Constructs a new S2C_WARPROXY_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_OVER);

        /** S2C_WARPROXY_OVER battleId. */
        public battleId: number;

        /** S2C_WARPROXY_OVER overData. */
        public overData: Uint8Array;

        /** S2C_WARPROXY_OVER countryId. */
        public countryId: number;

        /**
         * Encodes the specified S2C_WARPROXY_OVER message. Does not implicitly {@link gameProto.S2C_WARPROXY_OVER.verify|verify} messages.
         * @param message S2C_WARPROXY_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_OVER;
    }

    /** Properties of a S2C_WARPROXY_CONTINUE_WAR. */
    interface IS2C_WARPROXY_CONTINUE_WAR {

        /** S2C_WARPROXY_CONTINUE_WAR battleId */
        battleId: number;

        /** S2C_WARPROXY_CONTINUE_WAR attCountryId */
        attCountryId: number;

        /** S2C_WARPROXY_CONTINUE_WAR defCountryId */
        defCountryId: number;

        /** S2C_WARPROXY_CONTINUE_WAR overData */
        overData: Uint8Array;
    }

    /** Represents a S2C_WARPROXY_CONTINUE_WAR. */
    class S2C_WARPROXY_CONTINUE_WAR implements IS2C_WARPROXY_CONTINUE_WAR {

        /**
         * Constructs a new S2C_WARPROXY_CONTINUE_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CONTINUE_WAR);

        /** S2C_WARPROXY_CONTINUE_WAR battleId. */
        public battleId: number;

        /** S2C_WARPROXY_CONTINUE_WAR attCountryId. */
        public attCountryId: number;

        /** S2C_WARPROXY_CONTINUE_WAR defCountryId. */
        public defCountryId: number;

        /** S2C_WARPROXY_CONTINUE_WAR overData. */
        public overData: Uint8Array;

        /**
         * Encodes the specified S2C_WARPROXY_CONTINUE_WAR message. Does not implicitly {@link gameProto.S2C_WARPROXY_CONTINUE_WAR.verify|verify} messages.
         * @param message S2C_WARPROXY_CONTINUE_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CONTINUE_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CONTINUE_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CONTINUE_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CONTINUE_WAR;
    }

    /** Properties of a S2C_WARPROXY_ROUND_OVER. */
    interface IS2C_WARPROXY_ROUND_OVER {

        /** S2C_WARPROXY_ROUND_OVER battleId */
        battleId: number;

        /** S2C_WARPROXY_ROUND_OVER overData */
        overData: Uint8Array;

        /** S2C_WARPROXY_ROUND_OVER countryId */
        countryId: number;

        /** S2C_WARPROXY_ROUND_OVER roundNumber */
        roundNumber: number;
    }

    /** Represents a S2C_WARPROXY_ROUND_OVER. */
    class S2C_WARPROXY_ROUND_OVER implements IS2C_WARPROXY_ROUND_OVER {

        /**
         * Constructs a new S2C_WARPROXY_ROUND_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_ROUND_OVER);

        /** S2C_WARPROXY_ROUND_OVER battleId. */
        public battleId: number;

        /** S2C_WARPROXY_ROUND_OVER overData. */
        public overData: Uint8Array;

        /** S2C_WARPROXY_ROUND_OVER countryId. */
        public countryId: number;

        /** S2C_WARPROXY_ROUND_OVER roundNumber. */
        public roundNumber: number;

        /**
         * Encodes the specified S2C_WARPROXY_ROUND_OVER message. Does not implicitly {@link gameProto.S2C_WARPROXY_ROUND_OVER.verify|verify} messages.
         * @param message S2C_WARPROXY_ROUND_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_ROUND_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_ROUND_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_ROUND_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_ROUND_OVER;
    }

    /** Properties of a WarElementPosition. */
    interface IWarElementPosition {

        /** WarElementPosition attack */
        attack: boolean;

        /** WarElementPosition npc */
        npc: boolean;

        /** WarElementPosition teamId */
        teamId: number;

        /** WarElementPosition heroId */
        heroId: number;

        /** WarElementPosition soldierIndex */
        soldierIndex: number;

        /** WarElementPosition countryId */
        countryId: number;

        /** WarElementPosition uid */
        uid?: (number|null);
    }

    /** Represents a WarElementPosition. */
    class WarElementPosition implements IWarElementPosition {

        /**
         * Constructs a new WarElementPosition.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarElementPosition);

        /** WarElementPosition attack. */
        public attack: boolean;

        /** WarElementPosition npc. */
        public npc: boolean;

        /** WarElementPosition teamId. */
        public teamId: number;

        /** WarElementPosition heroId. */
        public heroId: number;

        /** WarElementPosition soldierIndex. */
        public soldierIndex: number;

        /** WarElementPosition countryId. */
        public countryId: number;

        /** WarElementPosition uid. */
        public uid: number;

        /**
         * Encodes the specified WarElementPosition message. Does not implicitly {@link gameProto.WarElementPosition.verify|verify} messages.
         * @param message WarElementPosition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarElementPosition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarElementPosition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarElementPosition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarElementPosition;
    }

    /** Properties of a BloodNoticeUnit. */
    interface IBloodNoticeUnit {

        /** BloodNoticeUnit type */
        type: number;

        /** BloodNoticeUnit attack */
        attack: gameProto.IWarElementPosition;

        /** BloodNoticeUnit defense */
        defense: gameProto.IWarElementPosition;

        /** BloodNoticeUnit blood */
        blood: number;
    }

    /** Represents a BloodNoticeUnit. */
    class BloodNoticeUnit implements IBloodNoticeUnit {

        /**
         * Constructs a new BloodNoticeUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBloodNoticeUnit);

        /** BloodNoticeUnit type. */
        public type: number;

        /** BloodNoticeUnit attack. */
        public attack: gameProto.IWarElementPosition;

        /** BloodNoticeUnit defense. */
        public defense: gameProto.IWarElementPosition;

        /** BloodNoticeUnit blood. */
        public blood: number;

        /**
         * Encodes the specified BloodNoticeUnit message. Does not implicitly {@link gameProto.BloodNoticeUnit.verify|verify} messages.
         * @param message BloodNoticeUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBloodNoticeUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BloodNoticeUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BloodNoticeUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BloodNoticeUnit;
    }

    /** Properties of a S2C_WARPROXY_SOLDIER_BLOOD_NOTICE. */
    interface IS2C_WARPROXY_SOLDIER_BLOOD_NOTICE {

        /** S2C_WARPROXY_SOLDIER_BLOOD_NOTICE battleId */
        battleId: number;

        /** S2C_WARPROXY_SOLDIER_BLOOD_NOTICE bloodNoticeUnit */
        bloodNoticeUnit?: (gameProto.IBloodNoticeUnit[]|null);
    }

    /** Represents a S2C_WARPROXY_SOLDIER_BLOOD_NOTICE. */
    class S2C_WARPROXY_SOLDIER_BLOOD_NOTICE implements IS2C_WARPROXY_SOLDIER_BLOOD_NOTICE {

        /**
         * Constructs a new S2C_WARPROXY_SOLDIER_BLOOD_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_SOLDIER_BLOOD_NOTICE);

        /** S2C_WARPROXY_SOLDIER_BLOOD_NOTICE battleId. */
        public battleId: number;

        /** S2C_WARPROXY_SOLDIER_BLOOD_NOTICE bloodNoticeUnit. */
        public bloodNoticeUnit: gameProto.IBloodNoticeUnit[];

        /**
         * Encodes the specified S2C_WARPROXY_SOLDIER_BLOOD_NOTICE message. Does not implicitly {@link gameProto.S2C_WARPROXY_SOLDIER_BLOOD_NOTICE.verify|verify} messages.
         * @param message S2C_WARPROXY_SOLDIER_BLOOD_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_SOLDIER_BLOOD_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_SOLDIER_BLOOD_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_SOLDIER_BLOOD_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_SOLDIER_BLOOD_NOTICE;
    }

    /** Properties of a DeathNoticeUnit. */
    interface IDeathNoticeUnit {

        /** DeathNoticeUnit defense */
        defense: gameProto.IWarElementPosition;

        /** DeathNoticeUnit killHeroCount */
        killHeroCount: number;

        /** DeathNoticeUnit killSoldiersCount */
        killSoldiersCount: number;

        /** DeathNoticeUnit lossSoldiersCount */
        lossSoldiersCount: number;
    }

    /** Represents a DeathNoticeUnit. */
    class DeathNoticeUnit implements IDeathNoticeUnit {

        /**
         * Constructs a new DeathNoticeUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IDeathNoticeUnit);

        /** DeathNoticeUnit defense. */
        public defense: gameProto.IWarElementPosition;

        /** DeathNoticeUnit killHeroCount. */
        public killHeroCount: number;

        /** DeathNoticeUnit killSoldiersCount. */
        public killSoldiersCount: number;

        /** DeathNoticeUnit lossSoldiersCount. */
        public lossSoldiersCount: number;

        /**
         * Encodes the specified DeathNoticeUnit message. Does not implicitly {@link gameProto.DeathNoticeUnit.verify|verify} messages.
         * @param message DeathNoticeUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IDeathNoticeUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DeathNoticeUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeathNoticeUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.DeathNoticeUnit;
    }

    /** Properties of a S2C_WARPROXY_HERO_DEATH_NOTICE. */
    interface IS2C_WARPROXY_HERO_DEATH_NOTICE {

        /** S2C_WARPROXY_HERO_DEATH_NOTICE battleId */
        battleId: number;

        /** S2C_WARPROXY_HERO_DEATH_NOTICE deathNoticeUnit */
        deathNoticeUnit?: (gameProto.IDeathNoticeUnit[]|null);
    }

    /** Represents a S2C_WARPROXY_HERO_DEATH_NOTICE. */
    class S2C_WARPROXY_HERO_DEATH_NOTICE implements IS2C_WARPROXY_HERO_DEATH_NOTICE {

        /**
         * Constructs a new S2C_WARPROXY_HERO_DEATH_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_HERO_DEATH_NOTICE);

        /** S2C_WARPROXY_HERO_DEATH_NOTICE battleId. */
        public battleId: number;

        /** S2C_WARPROXY_HERO_DEATH_NOTICE deathNoticeUnit. */
        public deathNoticeUnit: gameProto.IDeathNoticeUnit[];

        /**
         * Encodes the specified S2C_WARPROXY_HERO_DEATH_NOTICE message. Does not implicitly {@link gameProto.S2C_WARPROXY_HERO_DEATH_NOTICE.verify|verify} messages.
         * @param message S2C_WARPROXY_HERO_DEATH_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_HERO_DEATH_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_HERO_DEATH_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_HERO_DEATH_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_HERO_DEATH_NOTICE;
    }

    /** Properties of a C2S_WARPROXY_DOWN_NOTICE. */
    interface IC2S_WARPROXY_DOWN_NOTICE {

        /** C2S_WARPROXY_DOWN_NOTICE uid */
        uid: number;

        /** C2S_WARPROXY_DOWN_NOTICE battleId */
        battleId: number;
    }

    /** Represents a C2S_WARPROXY_DOWN_NOTICE. */
    class C2S_WARPROXY_DOWN_NOTICE implements IC2S_WARPROXY_DOWN_NOTICE {

        /**
         * Constructs a new C2S_WARPROXY_DOWN_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_DOWN_NOTICE);

        /** C2S_WARPROXY_DOWN_NOTICE uid. */
        public uid: number;

        /** C2S_WARPROXY_DOWN_NOTICE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WARPROXY_DOWN_NOTICE message. Does not implicitly {@link gameProto.C2S_WARPROXY_DOWN_NOTICE.verify|verify} messages.
         * @param message C2S_WARPROXY_DOWN_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_DOWN_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_DOWN_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_DOWN_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_DOWN_NOTICE;
    }

    /** Properties of a C2S_WARPROXY_PROMPT_QUEUE_PAGE. */
    interface IC2S_WARPROXY_PROMPT_QUEUE_PAGE {

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE battleId */
        battleId: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE attack */
        attack: boolean;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE uid */
        uid: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE userOrder */
        userOrder: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE npcOrder */
        npcOrder: number;
    }

    /** Represents a C2S_WARPROXY_PROMPT_QUEUE_PAGE. */
    class C2S_WARPROXY_PROMPT_QUEUE_PAGE implements IC2S_WARPROXY_PROMPT_QUEUE_PAGE {

        /**
         * Constructs a new C2S_WARPROXY_PROMPT_QUEUE_PAGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_PROMPT_QUEUE_PAGE);

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE attack. */
        public attack: boolean;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE uid. */
        public uid: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE userOrder. */
        public userOrder: number;

        /** C2S_WARPROXY_PROMPT_QUEUE_PAGE npcOrder. */
        public npcOrder: number;

        /**
         * Encodes the specified C2S_WARPROXY_PROMPT_QUEUE_PAGE message. Does not implicitly {@link gameProto.C2S_WARPROXY_PROMPT_QUEUE_PAGE.verify|verify} messages.
         * @param message C2S_WARPROXY_PROMPT_QUEUE_PAGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_PROMPT_QUEUE_PAGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_PROMPT_QUEUE_PAGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_PROMPT_QUEUE_PAGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_PROMPT_QUEUE_PAGE;
    }

    /** Properties of a C2S_WARPROXY_EVACUATE. */
    interface IC2S_WARPROXY_EVACUATE {

        /** C2S_WARPROXY_EVACUATE battleId */
        battleId: number;

        /** C2S_WARPROXY_EVACUATE param */
        param?: (gameProto.C2S_WARPROXY_EVACUATE.IParam[]|null);
    }

    /** Represents a C2S_WARPROXY_EVACUATE. */
    class C2S_WARPROXY_EVACUATE implements IC2S_WARPROXY_EVACUATE {

        /**
         * Constructs a new C2S_WARPROXY_EVACUATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_EVACUATE);

        /** C2S_WARPROXY_EVACUATE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_EVACUATE param. */
        public param: gameProto.C2S_WARPROXY_EVACUATE.IParam[];

        /**
         * Encodes the specified C2S_WARPROXY_EVACUATE message. Does not implicitly {@link gameProto.C2S_WARPROXY_EVACUATE.verify|verify} messages.
         * @param message C2S_WARPROXY_EVACUATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_EVACUATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_EVACUATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_EVACUATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_EVACUATE;
    }

    namespace C2S_WARPROXY_EVACUATE {

        /** Properties of a Param. */
        interface IParam {

            /** Param mode */
            mode: number;

            /** Param multiple */
            multiple: number;

            /** Param teamId */
            teamId: number;

            /** Param uid */
            uid: number;

            /** Param unitType */
            unitType: number;
        }

        /** Represents a Param. */
        class Param implements IParam {

            /**
             * Constructs a new Param.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameProto.C2S_WARPROXY_EVACUATE.IParam);

            /** Param mode. */
            public mode: number;

            /** Param multiple. */
            public multiple: number;

            /** Param teamId. */
            public teamId: number;

            /** Param uid. */
            public uid: number;

            /** Param unitType. */
            public unitType: number;

            /**
             * Encodes the specified Param message. Does not implicitly {@link gameProto.C2S_WARPROXY_EVACUATE.Param.verify|verify} messages.
             * @param message Param message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameProto.C2S_WARPROXY_EVACUATE.IParam, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a Param message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Param
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_EVACUATE.Param;
        }
    }

    /** Properties of a S2C_WARPROXY_EVACUATE. */
    interface IS2C_WARPROXY_EVACUATE {

        /** S2C_WARPROXY_EVACUATE state */
        state: number;

        /** S2C_WARPROXY_EVACUATE teamData */
        teamData?: (gameProto.S2C_WARPROXY_EVACUATE.ITeamData[]|null);
    }

    /** Represents a S2C_WARPROXY_EVACUATE. */
    class S2C_WARPROXY_EVACUATE implements IS2C_WARPROXY_EVACUATE {

        /**
         * Constructs a new S2C_WARPROXY_EVACUATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_EVACUATE);

        /** S2C_WARPROXY_EVACUATE state. */
        public state: number;

        /** S2C_WARPROXY_EVACUATE teamData. */
        public teamData: gameProto.S2C_WARPROXY_EVACUATE.ITeamData[];

        /**
         * Encodes the specified S2C_WARPROXY_EVACUATE message. Does not implicitly {@link gameProto.S2C_WARPROXY_EVACUATE.verify|verify} messages.
         * @param message S2C_WARPROXY_EVACUATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_EVACUATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_EVACUATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_EVACUATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_EVACUATE;
    }

    namespace S2C_WARPROXY_EVACUATE {

        /** Properties of a TeamData. */
        interface ITeamData {

            /** TeamData teamId */
            teamId: number;

            /** TeamData attack */
            attack: boolean;

            /** TeamData isNpc */
            isNpc: boolean;
        }

        /** Represents a TeamData. */
        class TeamData implements ITeamData {

            /**
             * Constructs a new TeamData.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameProto.S2C_WARPROXY_EVACUATE.ITeamData);

            /** TeamData teamId. */
            public teamId: number;

            /** TeamData attack. */
            public attack: boolean;

            /** TeamData isNpc. */
            public isNpc: boolean;

            /**
             * Encodes the specified TeamData message. Does not implicitly {@link gameProto.S2C_WARPROXY_EVACUATE.TeamData.verify|verify} messages.
             * @param message TeamData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameProto.S2C_WARPROXY_EVACUATE.ITeamData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TeamData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TeamData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_EVACUATE.TeamData;
        }
    }

    /** Properties of a C2S_WARPROXY_RETREAT. */
    interface IC2S_WARPROXY_RETREAT {

        /** C2S_WARPROXY_RETREAT battleId */
        battleId: number;

        /** C2S_WARPROXY_RETREAT teamId */
        teamId: number;

        /** C2S_WARPROXY_RETREAT multiple */
        multiple: number;

        /** C2S_WARPROXY_RETREAT attack */
        attack: boolean;
    }

    /** Represents a C2S_WARPROXY_RETREAT. */
    class C2S_WARPROXY_RETREAT implements IC2S_WARPROXY_RETREAT {

        /**
         * Constructs a new C2S_WARPROXY_RETREAT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_RETREAT);

        /** C2S_WARPROXY_RETREAT battleId. */
        public battleId: number;

        /** C2S_WARPROXY_RETREAT teamId. */
        public teamId: number;

        /** C2S_WARPROXY_RETREAT multiple. */
        public multiple: number;

        /** C2S_WARPROXY_RETREAT attack. */
        public attack: boolean;

        /**
         * Encodes the specified C2S_WARPROXY_RETREAT message. Does not implicitly {@link gameProto.C2S_WARPROXY_RETREAT.verify|verify} messages.
         * @param message C2S_WARPROXY_RETREAT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_RETREAT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_RETREAT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_RETREAT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_RETREAT;
    }

    /** Properties of a S2C_WARPROXY_RETREAT. */
    interface IS2C_WARPROXY_RETREAT {

        /** S2C_WARPROXY_RETREAT state */
        state: number;

        /** S2C_WARPROXY_RETREAT retreatData */
        retreatData?: (Uint8Array|null);
    }

    /** Represents a S2C_WARPROXY_RETREAT. */
    class S2C_WARPROXY_RETREAT implements IS2C_WARPROXY_RETREAT {

        /**
         * Constructs a new S2C_WARPROXY_RETREAT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_RETREAT);

        /** S2C_WARPROXY_RETREAT state. */
        public state: number;

        /** S2C_WARPROXY_RETREAT retreatData. */
        public retreatData: Uint8Array;

        /**
         * Encodes the specified S2C_WARPROXY_RETREAT message. Does not implicitly {@link gameProto.S2C_WARPROXY_RETREAT.verify|verify} messages.
         * @param message S2C_WARPROXY_RETREAT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_RETREAT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_RETREAT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_RETREAT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_RETREAT;
    }

    /** Properties of a C2S_WARPROXY_ONE_VS_ONE. */
    interface IC2S_WARPROXY_ONE_VS_ONE {

        /** C2S_WARPROXY_ONE_VS_ONE battleId */
        battleId: number;

        /** C2S_WARPROXY_ONE_VS_ONE uid */
        uid: number;

        /** C2S_WARPROXY_ONE_VS_ONE attack */
        attack: boolean;

        /** C2S_WARPROXY_ONE_VS_ONE mode */
        mode: number;
    }

    /** Represents a C2S_WARPROXY_ONE_VS_ONE. */
    class C2S_WARPROXY_ONE_VS_ONE implements IC2S_WARPROXY_ONE_VS_ONE {

        /**
         * Constructs a new C2S_WARPROXY_ONE_VS_ONE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_ONE_VS_ONE);

        /** C2S_WARPROXY_ONE_VS_ONE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_ONE_VS_ONE uid. */
        public uid: number;

        /** C2S_WARPROXY_ONE_VS_ONE attack. */
        public attack: boolean;

        /** C2S_WARPROXY_ONE_VS_ONE mode. */
        public mode: number;

        /**
         * Encodes the specified C2S_WARPROXY_ONE_VS_ONE message. Does not implicitly {@link gameProto.C2S_WARPROXY_ONE_VS_ONE.verify|verify} messages.
         * @param message C2S_WARPROXY_ONE_VS_ONE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_ONE_VS_ONE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_ONE_VS_ONE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_ONE_VS_ONE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_ONE_VS_ONE;
    }

    /** Properties of a S2C_WARPROXY_ONE_VS_ONE. */
    interface IS2C_WARPROXY_ONE_VS_ONE {

        /** S2C_WARPROXY_ONE_VS_ONE state */
        state: number;

        /** S2C_WARPROXY_ONE_VS_ONE attackData */
        attackData?: (Uint8Array|null);

        /** S2C_WARPROXY_ONE_VS_ONE defenseData */
        defenseData?: (Uint8Array|null);
    }

    /** Represents a S2C_WARPROXY_ONE_VS_ONE. */
    class S2C_WARPROXY_ONE_VS_ONE implements IS2C_WARPROXY_ONE_VS_ONE {

        /**
         * Constructs a new S2C_WARPROXY_ONE_VS_ONE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_ONE_VS_ONE);

        /** S2C_WARPROXY_ONE_VS_ONE state. */
        public state: number;

        /** S2C_WARPROXY_ONE_VS_ONE attackData. */
        public attackData: Uint8Array;

        /** S2C_WARPROXY_ONE_VS_ONE defenseData. */
        public defenseData: Uint8Array;

        /**
         * Encodes the specified S2C_WARPROXY_ONE_VS_ONE message. Does not implicitly {@link gameProto.S2C_WARPROXY_ONE_VS_ONE.verify|verify} messages.
         * @param message S2C_WARPROXY_ONE_VS_ONE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_ONE_VS_ONE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_ONE_VS_ONE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_ONE_VS_ONE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_ONE_VS_ONE;
    }

    /** Properties of a C2S_WARPROXY_START_WAR. */
    interface IC2S_WARPROXY_START_WAR {

        /** C2S_WARPROXY_START_WAR battleId */
        battleId: number;
    }

    /** Represents a C2S_WARPROXY_START_WAR. */
    class C2S_WARPROXY_START_WAR implements IC2S_WARPROXY_START_WAR {

        /**
         * Constructs a new C2S_WARPROXY_START_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_START_WAR);

        /** C2S_WARPROXY_START_WAR battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WARPROXY_START_WAR message. Does not implicitly {@link gameProto.C2S_WARPROXY_START_WAR.verify|verify} messages.
         * @param message C2S_WARPROXY_START_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_START_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_START_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_START_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_START_WAR;
    }

    /** Properties of a S2C_WARPROXY_START_WAR. */
    interface IS2C_WARPROXY_START_WAR {

        /** S2C_WARPROXY_START_WAR state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_START_WAR. */
    class S2C_WARPROXY_START_WAR implements IS2C_WARPROXY_START_WAR {

        /**
         * Constructs a new S2C_WARPROXY_START_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_START_WAR);

        /** S2C_WARPROXY_START_WAR state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_START_WAR message. Does not implicitly {@link gameProto.S2C_WARPROXY_START_WAR.verify|verify} messages.
         * @param message S2C_WARPROXY_START_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_START_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_START_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_START_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_START_WAR;
    }

    /** Properties of a S2C_WAR_MAKE_WAR_NOTICE. */
    interface IS2C_WAR_MAKE_WAR_NOTICE {

        /** S2C_WAR_MAKE_WAR_NOTICE battleId */
        battleId: number;

        /** S2C_WAR_MAKE_WAR_NOTICE teamId */
        teamId: number;
    }

    /** Represents a S2C_WAR_MAKE_WAR_NOTICE. */
    class S2C_WAR_MAKE_WAR_NOTICE implements IS2C_WAR_MAKE_WAR_NOTICE {

        /**
         * Constructs a new S2C_WAR_MAKE_WAR_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_MAKE_WAR_NOTICE);

        /** S2C_WAR_MAKE_WAR_NOTICE battleId. */
        public battleId: number;

        /** S2C_WAR_MAKE_WAR_NOTICE teamId. */
        public teamId: number;

        /**
         * Encodes the specified S2C_WAR_MAKE_WAR_NOTICE message. Does not implicitly {@link gameProto.S2C_WAR_MAKE_WAR_NOTICE.verify|verify} messages.
         * @param message S2C_WAR_MAKE_WAR_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_MAKE_WAR_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_MAKE_WAR_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_MAKE_WAR_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_MAKE_WAR_NOTICE;
    }

    /** Properties of a S2C_WARPROXY_FEAT_NOTICE. */
    interface IS2C_WARPROXY_FEAT_NOTICE {

        /** S2C_WARPROXY_FEAT_NOTICE battleId */
        battleId: number;

        /** S2C_WARPROXY_FEAT_NOTICE uid */
        uid: number;

        /** S2C_WARPROXY_FEAT_NOTICE featData */
        featData?: (gameProto.S2C_WARPROXY_FEAT_NOTICE.IFeatData[]|null);
    }

    /** Represents a S2C_WARPROXY_FEAT_NOTICE. */
    class S2C_WARPROXY_FEAT_NOTICE implements IS2C_WARPROXY_FEAT_NOTICE {

        /**
         * Constructs a new S2C_WARPROXY_FEAT_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_FEAT_NOTICE);

        /** S2C_WARPROXY_FEAT_NOTICE battleId. */
        public battleId: number;

        /** S2C_WARPROXY_FEAT_NOTICE uid. */
        public uid: number;

        /** S2C_WARPROXY_FEAT_NOTICE featData. */
        public featData: gameProto.S2C_WARPROXY_FEAT_NOTICE.IFeatData[];

        /**
         * Encodes the specified S2C_WARPROXY_FEAT_NOTICE message. Does not implicitly {@link gameProto.S2C_WARPROXY_FEAT_NOTICE.verify|verify} messages.
         * @param message S2C_WARPROXY_FEAT_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_FEAT_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_FEAT_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_FEAT_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_FEAT_NOTICE;
    }

    namespace S2C_WARPROXY_FEAT_NOTICE {

        /** Properties of a FeatData. */
        interface IFeatData {

            /** FeatData tid */
            tid: number;

            /** FeatData feat */
            feat: number;
        }

        /** Represents a FeatData. */
        class FeatData implements IFeatData {

            /**
             * Constructs a new FeatData.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameProto.S2C_WARPROXY_FEAT_NOTICE.IFeatData);

            /** FeatData tid. */
            public tid: number;

            /** FeatData feat. */
            public feat: number;

            /**
             * Encodes the specified FeatData message. Does not implicitly {@link gameProto.S2C_WARPROXY_FEAT_NOTICE.FeatData.verify|verify} messages.
             * @param message FeatData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameProto.S2C_WARPROXY_FEAT_NOTICE.IFeatData, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FeatData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FeatData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_FEAT_NOTICE.FeatData;
        }
    }

    /** Properties of a C2S_WARPROXY_QUICK_BATTLE. */
    interface IC2S_WARPROXY_QUICK_BATTLE {

        /** C2S_WARPROXY_QUICK_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_WARPROXY_QUICK_BATTLE. */
    class C2S_WARPROXY_QUICK_BATTLE implements IC2S_WARPROXY_QUICK_BATTLE {

        /**
         * Constructs a new C2S_WARPROXY_QUICK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_QUICK_BATTLE);

        /** C2S_WARPROXY_QUICK_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WARPROXY_QUICK_BATTLE message. Does not implicitly {@link gameProto.C2S_WARPROXY_QUICK_BATTLE.verify|verify} messages.
         * @param message C2S_WARPROXY_QUICK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_QUICK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_QUICK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_QUICK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_QUICK_BATTLE;
    }

    /** Properties of a S2C_WARPROXY_QUICK_BATTLE. */
    interface IS2C_WARPROXY_QUICK_BATTLE {

        /** S2C_WARPROXY_QUICK_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_QUICK_BATTLE. */
    class S2C_WARPROXY_QUICK_BATTLE implements IS2C_WARPROXY_QUICK_BATTLE {

        /**
         * Constructs a new S2C_WARPROXY_QUICK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_QUICK_BATTLE);

        /** S2C_WARPROXY_QUICK_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_QUICK_BATTLE message. Does not implicitly {@link gameProto.S2C_WARPROXY_QUICK_BATTLE.verify|verify} messages.
         * @param message S2C_WARPROXY_QUICK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_QUICK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_QUICK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_QUICK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_QUICK_BATTLE;
    }

    /** Properties of a C2S_WARPROXY_STOP_BATTLE. */
    interface IC2S_WARPROXY_STOP_BATTLE {

        /** C2S_WARPROXY_STOP_BATTLE battleId */
        battleId: number;

        /** C2S_WARPROXY_STOP_BATTLE uid */
        uid: number;
    }

    /** Represents a C2S_WARPROXY_STOP_BATTLE. */
    class C2S_WARPROXY_STOP_BATTLE implements IC2S_WARPROXY_STOP_BATTLE {

        /**
         * Constructs a new C2S_WARPROXY_STOP_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_STOP_BATTLE);

        /** C2S_WARPROXY_STOP_BATTLE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_STOP_BATTLE uid. */
        public uid: number;

        /**
         * Encodes the specified C2S_WARPROXY_STOP_BATTLE message. Does not implicitly {@link gameProto.C2S_WARPROXY_STOP_BATTLE.verify|verify} messages.
         * @param message C2S_WARPROXY_STOP_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_STOP_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_STOP_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_STOP_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_STOP_BATTLE;
    }

    /** Properties of a S2C_WARPROXY_STOP_BATTLE. */
    interface IS2C_WARPROXY_STOP_BATTLE {

        /** S2C_WARPROXY_STOP_BATTLE state */
        state: number;

        /** S2C_WARPROXY_STOP_BATTLE ret */
        ret: Uint8Array;
    }

    /** Represents a S2C_WARPROXY_STOP_BATTLE. */
    class S2C_WARPROXY_STOP_BATTLE implements IS2C_WARPROXY_STOP_BATTLE {

        /**
         * Constructs a new S2C_WARPROXY_STOP_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_STOP_BATTLE);

        /** S2C_WARPROXY_STOP_BATTLE state. */
        public state: number;

        /** S2C_WARPROXY_STOP_BATTLE ret. */
        public ret: Uint8Array;

        /**
         * Encodes the specified S2C_WARPROXY_STOP_BATTLE message. Does not implicitly {@link gameProto.S2C_WARPROXY_STOP_BATTLE.verify|verify} messages.
         * @param message S2C_WARPROXY_STOP_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_STOP_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_STOP_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_STOP_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_STOP_BATTLE;
    }

    /** Properties of a C2S_WARPROXY_AUTO. */
    interface IC2S_WARPROXY_AUTO {

        /** C2S_WARPROXY_AUTO battleId */
        battleId: number;

        /** C2S_WARPROXY_AUTO uid */
        uid: number;

        /** C2S_WARPROXY_AUTO autoAnger */
        autoAnger: boolean;
    }

    /** Represents a C2S_WARPROXY_AUTO. */
    class C2S_WARPROXY_AUTO implements IC2S_WARPROXY_AUTO {

        /**
         * Constructs a new C2S_WARPROXY_AUTO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_AUTO);

        /** C2S_WARPROXY_AUTO battleId. */
        public battleId: number;

        /** C2S_WARPROXY_AUTO uid. */
        public uid: number;

        /** C2S_WARPROXY_AUTO autoAnger. */
        public autoAnger: boolean;

        /**
         * Encodes the specified C2S_WARPROXY_AUTO message. Does not implicitly {@link gameProto.C2S_WARPROXY_AUTO.verify|verify} messages.
         * @param message C2S_WARPROXY_AUTO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_AUTO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_AUTO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_AUTO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_AUTO;
    }

    /** Properties of a S2C_WARPROXY_AUTO. */
    interface IS2C_WARPROXY_AUTO {

        /** S2C_WARPROXY_AUTO state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_AUTO. */
    class S2C_WARPROXY_AUTO implements IS2C_WARPROXY_AUTO {

        /**
         * Constructs a new S2C_WARPROXY_AUTO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_AUTO);

        /** S2C_WARPROXY_AUTO state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_AUTO message. Does not implicitly {@link gameProto.S2C_WARPROXY_AUTO.verify|verify} messages.
         * @param message S2C_WARPROXY_AUTO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_AUTO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_AUTO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_AUTO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_AUTO;
    }

    /** Properties of an EncircleCityHeroData. */
    interface IEncircleCityHeroData {

        /** EncircleCityHeroData teamId */
        teamId: number;

        /** EncircleCityHeroData heroId */
        heroId: number;

        /** EncircleCityHeroData isNpc */
        isNpc: boolean;
    }

    /** Represents an EncircleCityHeroData. */
    class EncircleCityHeroData implements IEncircleCityHeroData {

        /**
         * Constructs a new EncircleCityHeroData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEncircleCityHeroData);

        /** EncircleCityHeroData teamId. */
        public teamId: number;

        /** EncircleCityHeroData heroId. */
        public heroId: number;

        /** EncircleCityHeroData isNpc. */
        public isNpc: boolean;

        /**
         * Encodes the specified EncircleCityHeroData message. Does not implicitly {@link gameProto.EncircleCityHeroData.verify|verify} messages.
         * @param message EncircleCityHeroData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEncircleCityHeroData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EncircleCityHeroData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EncircleCityHeroData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.EncircleCityHeroData;
    }

    /** Properties of a S2C_WARPROXY_ENCIRCLE_CITY. */
    interface IS2C_WARPROXY_ENCIRCLE_CITY {

        /** S2C_WARPROXY_ENCIRCLE_CITY heroData */
        heroData?: (gameProto.IEncircleCityHeroData[]|null);
    }

    /** Represents a S2C_WARPROXY_ENCIRCLE_CITY. */
    class S2C_WARPROXY_ENCIRCLE_CITY implements IS2C_WARPROXY_ENCIRCLE_CITY {

        /**
         * Constructs a new S2C_WARPROXY_ENCIRCLE_CITY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_ENCIRCLE_CITY);

        /** S2C_WARPROXY_ENCIRCLE_CITY heroData. */
        public heroData: gameProto.IEncircleCityHeroData[];

        /**
         * Encodes the specified S2C_WARPROXY_ENCIRCLE_CITY message. Does not implicitly {@link gameProto.S2C_WARPROXY_ENCIRCLE_CITY.verify|verify} messages.
         * @param message S2C_WARPROXY_ENCIRCLE_CITY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_ENCIRCLE_CITY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_ENCIRCLE_CITY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_ENCIRCLE_CITY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_ENCIRCLE_CITY;
    }

    /** Properties of a C2S_WARPROXY_CHECK_BATTLE. */
    interface IC2S_WARPROXY_CHECK_BATTLE {

        /** C2S_WARPROXY_CHECK_BATTLE battleId */
        battleId: number;
    }

    /** Represents a C2S_WARPROXY_CHECK_BATTLE. */
    class C2S_WARPROXY_CHECK_BATTLE implements IC2S_WARPROXY_CHECK_BATTLE {

        /**
         * Constructs a new C2S_WARPROXY_CHECK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CHECK_BATTLE);

        /** C2S_WARPROXY_CHECK_BATTLE battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WARPROXY_CHECK_BATTLE message. Does not implicitly {@link gameProto.C2S_WARPROXY_CHECK_BATTLE.verify|verify} messages.
         * @param message C2S_WARPROXY_CHECK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CHECK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CHECK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CHECK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CHECK_BATTLE;
    }

    /** Properties of a S2C_WARPROXY_CHECK_BATTLE. */
    interface IS2C_WARPROXY_CHECK_BATTLE {

        /** S2C_WARPROXY_CHECK_BATTLE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_CHECK_BATTLE. */
    class S2C_WARPROXY_CHECK_BATTLE implements IS2C_WARPROXY_CHECK_BATTLE {

        /**
         * Constructs a new S2C_WARPROXY_CHECK_BATTLE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CHECK_BATTLE);

        /** S2C_WARPROXY_CHECK_BATTLE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_CHECK_BATTLE message. Does not implicitly {@link gameProto.S2C_WARPROXY_CHECK_BATTLE.verify|verify} messages.
         * @param message S2C_WARPROXY_CHECK_BATTLE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CHECK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CHECK_BATTLE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CHECK_BATTLE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CHECK_BATTLE;
    }

    /** Properties of a C2S_WARPROXY_CHECK_BATTLE_SERVER. */
    interface IC2S_WARPROXY_CHECK_BATTLE_SERVER {
    }

    /** Represents a C2S_WARPROXY_CHECK_BATTLE_SERVER. */
    class C2S_WARPROXY_CHECK_BATTLE_SERVER implements IC2S_WARPROXY_CHECK_BATTLE_SERVER {

        /**
         * Constructs a new C2S_WARPROXY_CHECK_BATTLE_SERVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CHECK_BATTLE_SERVER);

        /**
         * Encodes the specified C2S_WARPROXY_CHECK_BATTLE_SERVER message. Does not implicitly {@link gameProto.C2S_WARPROXY_CHECK_BATTLE_SERVER.verify|verify} messages.
         * @param message C2S_WARPROXY_CHECK_BATTLE_SERVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CHECK_BATTLE_SERVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CHECK_BATTLE_SERVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CHECK_BATTLE_SERVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CHECK_BATTLE_SERVER;
    }

    /** Properties of a S2C_WARPROXY_CHECK_BATTLE_SERVER. */
    interface IS2C_WARPROXY_CHECK_BATTLE_SERVER {

        /** S2C_WARPROXY_CHECK_BATTLE_SERVER state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_CHECK_BATTLE_SERVER. */
    class S2C_WARPROXY_CHECK_BATTLE_SERVER implements IS2C_WARPROXY_CHECK_BATTLE_SERVER {

        /**
         * Constructs a new S2C_WARPROXY_CHECK_BATTLE_SERVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CHECK_BATTLE_SERVER);

        /** S2C_WARPROXY_CHECK_BATTLE_SERVER state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_CHECK_BATTLE_SERVER message. Does not implicitly {@link gameProto.S2C_WARPROXY_CHECK_BATTLE_SERVER.verify|verify} messages.
         * @param message S2C_WARPROXY_CHECK_BATTLE_SERVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CHECK_BATTLE_SERVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CHECK_BATTLE_SERVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CHECK_BATTLE_SERVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CHECK_BATTLE_SERVER;
    }

    /** Properties of a C2S_WARPROXY_ISCOUNTRY_PARTICIPATE. */
    interface IC2S_WARPROXY_ISCOUNTRY_PARTICIPATE {

        /** C2S_WARPROXY_ISCOUNTRY_PARTICIPATE battleId */
        battleId: number;

        /** C2S_WARPROXY_ISCOUNTRY_PARTICIPATE countryId */
        countryId: number;
    }

    /** Represents a C2S_WARPROXY_ISCOUNTRY_PARTICIPATE. */
    class C2S_WARPROXY_ISCOUNTRY_PARTICIPATE implements IC2S_WARPROXY_ISCOUNTRY_PARTICIPATE {

        /**
         * Constructs a new C2S_WARPROXY_ISCOUNTRY_PARTICIPATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_ISCOUNTRY_PARTICIPATE);

        /** C2S_WARPROXY_ISCOUNTRY_PARTICIPATE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_ISCOUNTRY_PARTICIPATE countryId. */
        public countryId: number;

        /**
         * Encodes the specified C2S_WARPROXY_ISCOUNTRY_PARTICIPATE message. Does not implicitly {@link gameProto.C2S_WARPROXY_ISCOUNTRY_PARTICIPATE.verify|verify} messages.
         * @param message C2S_WARPROXY_ISCOUNTRY_PARTICIPATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_ISCOUNTRY_PARTICIPATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_ISCOUNTRY_PARTICIPATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_ISCOUNTRY_PARTICIPATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_ISCOUNTRY_PARTICIPATE;
    }

    /** Properties of a S2C_WARPROXY_ISCOUNTRY_PARTICIPATE. */
    interface IS2C_WARPROXY_ISCOUNTRY_PARTICIPATE {

        /** S2C_WARPROXY_ISCOUNTRY_PARTICIPATE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_ISCOUNTRY_PARTICIPATE. */
    class S2C_WARPROXY_ISCOUNTRY_PARTICIPATE implements IS2C_WARPROXY_ISCOUNTRY_PARTICIPATE {

        /**
         * Constructs a new S2C_WARPROXY_ISCOUNTRY_PARTICIPATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_ISCOUNTRY_PARTICIPATE);

        /** S2C_WARPROXY_ISCOUNTRY_PARTICIPATE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_ISCOUNTRY_PARTICIPATE message. Does not implicitly {@link gameProto.S2C_WARPROXY_ISCOUNTRY_PARTICIPATE.verify|verify} messages.
         * @param message S2C_WARPROXY_ISCOUNTRY_PARTICIPATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_ISCOUNTRY_PARTICIPATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_ISCOUNTRY_PARTICIPATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_ISCOUNTRY_PARTICIPATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_ISCOUNTRY_PARTICIPATE;
    }

    /** Properties of a C2S_WARPROXY_OFFICIAL_NOTICE. */
    interface IC2S_WARPROXY_OFFICIAL_NOTICE {

        /** C2S_WARPROXY_OFFICIAL_NOTICE battleId */
        battleId: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE country */
        country: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE officialId */
        officialId: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE state */
        state: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE isAtt */
        isAtt: boolean;
    }

    /** Represents a C2S_WARPROXY_OFFICIAL_NOTICE. */
    class C2S_WARPROXY_OFFICIAL_NOTICE implements IC2S_WARPROXY_OFFICIAL_NOTICE {

        /**
         * Constructs a new C2S_WARPROXY_OFFICIAL_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_OFFICIAL_NOTICE);

        /** C2S_WARPROXY_OFFICIAL_NOTICE battleId. */
        public battleId: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE country. */
        public country: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE officialId. */
        public officialId: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE state. */
        public state: number;

        /** C2S_WARPROXY_OFFICIAL_NOTICE isAtt. */
        public isAtt: boolean;

        /**
         * Encodes the specified C2S_WARPROXY_OFFICIAL_NOTICE message. Does not implicitly {@link gameProto.C2S_WARPROXY_OFFICIAL_NOTICE.verify|verify} messages.
         * @param message C2S_WARPROXY_OFFICIAL_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_OFFICIAL_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_OFFICIAL_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_OFFICIAL_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_OFFICIAL_NOTICE;
    }

    /** Properties of a S2C_WARPROXY_OFFICIAL_NOTICE. */
    interface IS2C_WARPROXY_OFFICIAL_NOTICE {

        /** S2C_WARPROXY_OFFICIAL_NOTICE state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_OFFICIAL_NOTICE. */
    class S2C_WARPROXY_OFFICIAL_NOTICE implements IS2C_WARPROXY_OFFICIAL_NOTICE {

        /**
         * Constructs a new S2C_WARPROXY_OFFICIAL_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_OFFICIAL_NOTICE);

        /** S2C_WARPROXY_OFFICIAL_NOTICE state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_OFFICIAL_NOTICE message. Does not implicitly {@link gameProto.S2C_WARPROXY_OFFICIAL_NOTICE.verify|verify} messages.
         * @param message S2C_WARPROXY_OFFICIAL_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_OFFICIAL_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_OFFICIAL_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_OFFICIAL_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_OFFICIAL_NOTICE;
    }

    /** Properties of a C2S_WARPROXY_QUERY_HERO_DATA. */
    interface IC2S_WARPROXY_QUERY_HERO_DATA {

        /** C2S_WARPROXY_QUERY_HERO_DATA battleId */
        battleId: number;

        /** C2S_WARPROXY_QUERY_HERO_DATA elementId */
        elementId?: (number[]|null);

        /** C2S_WARPROXY_QUERY_HERO_DATA uid */
        uid: number;
    }

    /** Represents a C2S_WARPROXY_QUERY_HERO_DATA. */
    class C2S_WARPROXY_QUERY_HERO_DATA implements IC2S_WARPROXY_QUERY_HERO_DATA {

        /**
         * Constructs a new C2S_WARPROXY_QUERY_HERO_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_QUERY_HERO_DATA);

        /** C2S_WARPROXY_QUERY_HERO_DATA battleId. */
        public battleId: number;

        /** C2S_WARPROXY_QUERY_HERO_DATA elementId. */
        public elementId: number[];

        /** C2S_WARPROXY_QUERY_HERO_DATA uid. */
        public uid: number;

        /**
         * Encodes the specified C2S_WARPROXY_QUERY_HERO_DATA message. Does not implicitly {@link gameProto.C2S_WARPROXY_QUERY_HERO_DATA.verify|verify} messages.
         * @param message C2S_WARPROXY_QUERY_HERO_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_QUERY_HERO_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_QUERY_HERO_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_QUERY_HERO_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_QUERY_HERO_DATA;
    }

    /** Properties of a C2S_WARPROXY_GUIDE_UNFROZEN. */
    interface IC2S_WARPROXY_GUIDE_UNFROZEN {

        /** C2S_WARPROXY_GUIDE_UNFROZEN battleId */
        battleId: number;
    }

    /** Represents a C2S_WARPROXY_GUIDE_UNFROZEN. */
    class C2S_WARPROXY_GUIDE_UNFROZEN implements IC2S_WARPROXY_GUIDE_UNFROZEN {

        /**
         * Constructs a new C2S_WARPROXY_GUIDE_UNFROZEN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_GUIDE_UNFROZEN);

        /** C2S_WARPROXY_GUIDE_UNFROZEN battleId. */
        public battleId: number;

        /**
         * Encodes the specified C2S_WARPROXY_GUIDE_UNFROZEN message. Does not implicitly {@link gameProto.C2S_WARPROXY_GUIDE_UNFROZEN.verify|verify} messages.
         * @param message C2S_WARPROXY_GUIDE_UNFROZEN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_GUIDE_UNFROZEN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_GUIDE_UNFROZEN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_GUIDE_UNFROZEN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_GUIDE_UNFROZEN;
    }

    /** Properties of a WarTeamInfo. */
    interface IWarTeamInfo {

        /** WarTeamInfo playerId */
        playerId: number;

        /** WarTeamInfo teamId */
        teamId: number;

        /** WarTeamInfo npc */
        npc: boolean;
    }

    /** 国战//////////////////////////////////////// */
    class WarTeamInfo implements IWarTeamInfo {

        /**
         * Constructs a new WarTeamInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarTeamInfo);

        /** WarTeamInfo playerId. */
        public playerId: number;

        /** WarTeamInfo teamId. */
        public teamId: number;

        /** WarTeamInfo npc. */
        public npc: boolean;

        /**
         * Encodes the specified WarTeamInfo message. Does not implicitly {@link gameProto.WarTeamInfo.verify|verify} messages.
         * @param message WarTeamInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarTeamInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarTeamInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarTeamInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarTeamInfo;
    }

    /** Properties of a C2S_WARPROXY_CREATE_CITY_BATTLEFIELD. */
    interface IC2S_WARPROXY_CREATE_CITY_BATTLEFIELD {

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD terrainId */
        terrainId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD cityId */
        cityId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD cityCountryId */
        cityCountryId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD atkCountryId */
        atkCountryId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD sceneElementData */
        sceneElementData?: (Uint8Array[]|null);

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD globalAttribute */
        globalAttribute?: (Uint8Array|null);
    }

    /** Represents a C2S_WARPROXY_CREATE_CITY_BATTLEFIELD. */
    class C2S_WARPROXY_CREATE_CITY_BATTLEFIELD implements IC2S_WARPROXY_CREATE_CITY_BATTLEFIELD {

        /**
         * Constructs a new C2S_WARPROXY_CREATE_CITY_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CREATE_CITY_BATTLEFIELD);

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD terrainId. */
        public terrainId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD cityCountryId. */
        public cityCountryId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD atkCountryId. */
        public atkCountryId: number;

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD sceneElementData. */
        public sceneElementData: Uint8Array[];

        /** C2S_WARPROXY_CREATE_CITY_BATTLEFIELD globalAttribute. */
        public globalAttribute: Uint8Array;

        /**
         * Encodes the specified C2S_WARPROXY_CREATE_CITY_BATTLEFIELD message. Does not implicitly {@link gameProto.C2S_WARPROXY_CREATE_CITY_BATTLEFIELD.verify|verify} messages.
         * @param message C2S_WARPROXY_CREATE_CITY_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CREATE_CITY_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CREATE_CITY_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CREATE_CITY_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CREATE_CITY_BATTLEFIELD;
    }

    /** Properties of a S2C_WARPROXY_CREATE_CITY_BATTLEFIELD. */
    interface IS2C_WARPROXY_CREATE_CITY_BATTLEFIELD {

        /** S2C_WARPROXY_CREATE_CITY_BATTLEFIELD state */
        state: number;
    }

    /** Represents a S2C_WARPROXY_CREATE_CITY_BATTLEFIELD. */
    class S2C_WARPROXY_CREATE_CITY_BATTLEFIELD implements IS2C_WARPROXY_CREATE_CITY_BATTLEFIELD {

        /**
         * Constructs a new S2C_WARPROXY_CREATE_CITY_BATTLEFIELD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CREATE_CITY_BATTLEFIELD);

        /** S2C_WARPROXY_CREATE_CITY_BATTLEFIELD state. */
        public state: number;

        /**
         * Encodes the specified S2C_WARPROXY_CREATE_CITY_BATTLEFIELD message. Does not implicitly {@link gameProto.S2C_WARPROXY_CREATE_CITY_BATTLEFIELD.verify|verify} messages.
         * @param message S2C_WARPROXY_CREATE_CITY_BATTLEFIELD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CREATE_CITY_BATTLEFIELD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CREATE_CITY_BATTLEFIELD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CREATE_CITY_BATTLEFIELD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CREATE_CITY_BATTLEFIELD;
    }

    /** Properties of a C2S_WARPROXY_CITY_ADD_CORPS. */
    interface IC2S_WARPROXY_CITY_ADD_CORPS {

        /** C2S_WARPROXY_CITY_ADD_CORPS cityId */
        cityId: number;

        /** C2S_WARPROXY_CITY_ADD_CORPS teamData */
        teamData: Uint8Array;
    }

    /** Represents a C2S_WARPROXY_CITY_ADD_CORPS. */
    class C2S_WARPROXY_CITY_ADD_CORPS implements IC2S_WARPROXY_CITY_ADD_CORPS {

        /**
         * Constructs a new C2S_WARPROXY_CITY_ADD_CORPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CITY_ADD_CORPS);

        /** C2S_WARPROXY_CITY_ADD_CORPS cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CITY_ADD_CORPS teamData. */
        public teamData: Uint8Array;

        /**
         * Encodes the specified C2S_WARPROXY_CITY_ADD_CORPS message. Does not implicitly {@link gameProto.C2S_WARPROXY_CITY_ADD_CORPS.verify|verify} messages.
         * @param message C2S_WARPROXY_CITY_ADD_CORPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CITY_ADD_CORPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CITY_ADD_CORPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CITY_ADD_CORPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CITY_ADD_CORPS;
    }

    /** Properties of a S2C_WARPROXY_CITY_ADD_CORPS. */
    interface IS2C_WARPROXY_CITY_ADD_CORPS {

        /** S2C_WARPROXY_CITY_ADD_CORPS ret */
        ret: number;
    }

    /** Represents a S2C_WARPROXY_CITY_ADD_CORPS. */
    class S2C_WARPROXY_CITY_ADD_CORPS implements IS2C_WARPROXY_CITY_ADD_CORPS {

        /**
         * Constructs a new S2C_WARPROXY_CITY_ADD_CORPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CITY_ADD_CORPS);

        /** S2C_WARPROXY_CITY_ADD_CORPS ret. */
        public ret: number;

        /**
         * Encodes the specified S2C_WARPROXY_CITY_ADD_CORPS message. Does not implicitly {@link gameProto.S2C_WARPROXY_CITY_ADD_CORPS.verify|verify} messages.
         * @param message S2C_WARPROXY_CITY_ADD_CORPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CITY_ADD_CORPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CITY_ADD_CORPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CITY_ADD_CORPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CITY_ADD_CORPS;
    }

    /** Properties of a S2C_WARPROXY_CITY_BATTLE_SYNC. */
    interface IS2C_WARPROXY_CITY_BATTLE_SYNC {

        /** S2C_WARPROXY_CITY_BATTLE_SYNC warType */
        warType: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC battleId */
        battleId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC terrainId */
        terrainId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC cityId */
        cityId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC attCountryId */
        attCountryId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC countryId */
        countryId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC atkTeam */
        atkTeam: gameProto.IWarTeamInfo;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC defTeam */
        defTeam: gameProto.IWarTeamInfo;
    }

    /** Represents a S2C_WARPROXY_CITY_BATTLE_SYNC. */
    class S2C_WARPROXY_CITY_BATTLE_SYNC implements IS2C_WARPROXY_CITY_BATTLE_SYNC {

        /**
         * Constructs a new S2C_WARPROXY_CITY_BATTLE_SYNC.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CITY_BATTLE_SYNC);

        /** S2C_WARPROXY_CITY_BATTLE_SYNC warType. */
        public warType: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC battleId. */
        public battleId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC terrainId. */
        public terrainId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC cityId. */
        public cityId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC attCountryId. */
        public attCountryId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC countryId. */
        public countryId: number;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC atkTeam. */
        public atkTeam: gameProto.IWarTeamInfo;

        /** S2C_WARPROXY_CITY_BATTLE_SYNC defTeam. */
        public defTeam: gameProto.IWarTeamInfo;

        /**
         * Encodes the specified S2C_WARPROXY_CITY_BATTLE_SYNC message. Does not implicitly {@link gameProto.S2C_WARPROXY_CITY_BATTLE_SYNC.verify|verify} messages.
         * @param message S2C_WARPROXY_CITY_BATTLE_SYNC message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CITY_BATTLE_SYNC, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CITY_BATTLE_SYNC message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CITY_BATTLE_SYNC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CITY_BATTLE_SYNC;
    }

    /** Properties of a S2C_WARPROXY_CITY_OVER. */
    interface IS2C_WARPROXY_CITY_OVER {

        /** S2C_WARPROXY_CITY_OVER warType */
        warType: number;

        /** S2C_WARPROXY_CITY_OVER countryId */
        countryId: number;

        /** S2C_WARPROXY_CITY_OVER cityId */
        cityId: number;

        /** S2C_WARPROXY_CITY_OVER victory */
        victory: boolean;

        /** S2C_WARPROXY_CITY_OVER victoryData */
        victoryData: gameProto.ICountryOverData;

        /** S2C_WARPROXY_CITY_OVER failData */
        failData: gameProto.ICountryOverData;
    }

    /** Represents a S2C_WARPROXY_CITY_OVER. */
    class S2C_WARPROXY_CITY_OVER implements IS2C_WARPROXY_CITY_OVER {

        /**
         * Constructs a new S2C_WARPROXY_CITY_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WARPROXY_CITY_OVER);

        /** S2C_WARPROXY_CITY_OVER warType. */
        public warType: number;

        /** S2C_WARPROXY_CITY_OVER countryId. */
        public countryId: number;

        /** S2C_WARPROXY_CITY_OVER cityId. */
        public cityId: number;

        /** S2C_WARPROXY_CITY_OVER victory. */
        public victory: boolean;

        /** S2C_WARPROXY_CITY_OVER victoryData. */
        public victoryData: gameProto.ICountryOverData;

        /** S2C_WARPROXY_CITY_OVER failData. */
        public failData: gameProto.ICountryOverData;

        /**
         * Encodes the specified S2C_WARPROXY_CITY_OVER message. Does not implicitly {@link gameProto.S2C_WARPROXY_CITY_OVER.verify|verify} messages.
         * @param message S2C_WARPROXY_CITY_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WARPROXY_CITY_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WARPROXY_CITY_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WARPROXY_CITY_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WARPROXY_CITY_OVER;
    }

    /** Properties of a C2S_WARPROXY_CITY_WAR_GO. */
    interface IC2S_WARPROXY_CITY_WAR_GO {

        /** C2S_WARPROXY_CITY_WAR_GO cityId */
        cityId: number;

        /** C2S_WARPROXY_CITY_WAR_GO nickName */
        nickName: string;

        /** C2S_WARPROXY_CITY_WAR_GO countryId */
        countryId: number;
    }

    /** Represents a C2S_WARPROXY_CITY_WAR_GO. */
    class C2S_WARPROXY_CITY_WAR_GO implements IC2S_WARPROXY_CITY_WAR_GO {

        /**
         * Constructs a new C2S_WARPROXY_CITY_WAR_GO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CITY_WAR_GO);

        /** C2S_WARPROXY_CITY_WAR_GO cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CITY_WAR_GO nickName. */
        public nickName: string;

        /** C2S_WARPROXY_CITY_WAR_GO countryId. */
        public countryId: number;

        /**
         * Encodes the specified C2S_WARPROXY_CITY_WAR_GO message. Does not implicitly {@link gameProto.C2S_WARPROXY_CITY_WAR_GO.verify|verify} messages.
         * @param message C2S_WARPROXY_CITY_WAR_GO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CITY_WAR_GO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CITY_WAR_GO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CITY_WAR_GO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CITY_WAR_GO;
    }

    /** Properties of a C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST. */
    interface IC2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST {

        /** C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST cityId */
        cityId: number;

        /** C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST page */
        page: number;
    }

    /** Represents a C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST. */
    class C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST implements IC2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST {

        /**
         * Constructs a new C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST);

        /** C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST page. */
        public page: number;

        /**
         * Encodes the specified C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST message. Does not implicitly {@link gameProto.C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST.verify|verify} messages.
         * @param message C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CITY_WAR_CONFRONTATION_LIST;
    }

    /** Properties of a C2S_WARPROXY_CITY_WATCH_WAR_TEAM. */
    interface IC2S_WARPROXY_CITY_WATCH_WAR_TEAM {

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM cityId */
        cityId: number;

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM playerId */
        playerId: number;

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM teamId */
        teamId: number;
    }

    /** Represents a C2S_WARPROXY_CITY_WATCH_WAR_TEAM. */
    class C2S_WARPROXY_CITY_WATCH_WAR_TEAM implements IC2S_WARPROXY_CITY_WATCH_WAR_TEAM {

        /**
         * Constructs a new C2S_WARPROXY_CITY_WATCH_WAR_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CITY_WATCH_WAR_TEAM);

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM playerId. */
        public playerId: number;

        /** C2S_WARPROXY_CITY_WATCH_WAR_TEAM teamId. */
        public teamId: number;

        /**
         * Encodes the specified C2S_WARPROXY_CITY_WATCH_WAR_TEAM message. Does not implicitly {@link gameProto.C2S_WARPROXY_CITY_WATCH_WAR_TEAM.verify|verify} messages.
         * @param message C2S_WARPROXY_CITY_WATCH_WAR_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CITY_WATCH_WAR_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CITY_WATCH_WAR_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CITY_WATCH_WAR_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CITY_WATCH_WAR_TEAM;
    }

    /** Properties of a C2S_WARPROXY_CITY_WAR_MYTEAM. */
    interface IC2S_WARPROXY_CITY_WAR_MYTEAM {

        /** C2S_WARPROXY_CITY_WAR_MYTEAM cityId */
        cityId: number;

        /** C2S_WARPROXY_CITY_WAR_MYTEAM playerId */
        playerId: number;
    }

    /** Represents a C2S_WARPROXY_CITY_WAR_MYTEAM. */
    class C2S_WARPROXY_CITY_WAR_MYTEAM implements IC2S_WARPROXY_CITY_WAR_MYTEAM {

        /**
         * Constructs a new C2S_WARPROXY_CITY_WAR_MYTEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WARPROXY_CITY_WAR_MYTEAM);

        /** C2S_WARPROXY_CITY_WAR_MYTEAM cityId. */
        public cityId: number;

        /** C2S_WARPROXY_CITY_WAR_MYTEAM playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_WARPROXY_CITY_WAR_MYTEAM message. Does not implicitly {@link gameProto.C2S_WARPROXY_CITY_WAR_MYTEAM.verify|verify} messages.
         * @param message C2S_WARPROXY_CITY_WAR_MYTEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WARPROXY_CITY_WAR_MYTEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WARPROXY_CITY_WAR_MYTEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WARPROXY_CITY_WAR_MYTEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WARPROXY_CITY_WAR_MYTEAM;
    }

    /** Properties of an InitBuff. */
    interface IInitBuff {

        /** InitBuff buffId */
        buffId: number;

        /** InitBuff buffSysId */
        buffSysId: number;
    }

    /** Represents an InitBuff. */
    class InitBuff implements IInitBuff {

        /**
         * Constructs a new InitBuff.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IInitBuff);

        /** InitBuff buffId. */
        public buffId: number;

        /** InitBuff buffSysId. */
        public buffSysId: number;

        /**
         * Encodes the specified InitBuff message. Does not implicitly {@link gameProto.InitBuff.verify|verify} messages.
         * @param message InitBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IInitBuff, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an InitBuff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.InitBuff;
    }

    /** Properties of a CombatUnit. */
    interface ICombatUnit {

        /** CombatUnit elementId */
        elementId: number;

        /** CombatUnit sysId */
        sysId: number;

        /** CombatUnit type */
        type: number;

        /** CombatUnit troops */
        troops: number;

        /** CombatUnit maxTroops */
        maxTroops: number;

        /** CombatUnit anager */
        anager: number;

        /** CombatUnit xy */
        xy: number;

        /** CombatUnit initBuffList */
        initBuffList?: (gameProto.IInitBuff[]|null);

        /** CombatUnit moveSpeed */
        moveSpeed: number;

        /** CombatUnit terrainHurtAffix */
        terrainHurtAffix?: (number|null);

        /** CombatUnit terrainHurtRemit */
        terrainHurtRemit?: (number|null);

        /** CombatUnit generalName */
        generalName?: (string|null);

        /** CombatUnit generalId */
        generalId?: (number|null);
    }

    /** Represents a CombatUnit. */
    class CombatUnit implements ICombatUnit {

        /**
         * Constructs a new CombatUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICombatUnit);

        /** CombatUnit elementId. */
        public elementId: number;

        /** CombatUnit sysId. */
        public sysId: number;

        /** CombatUnit type. */
        public type: number;

        /** CombatUnit troops. */
        public troops: number;

        /** CombatUnit maxTroops. */
        public maxTroops: number;

        /** CombatUnit anager. */
        public anager: number;

        /** CombatUnit xy. */
        public xy: number;

        /** CombatUnit initBuffList. */
        public initBuffList: gameProto.IInitBuff[];

        /** CombatUnit moveSpeed. */
        public moveSpeed: number;

        /** CombatUnit terrainHurtAffix. */
        public terrainHurtAffix: number;

        /** CombatUnit terrainHurtRemit. */
        public terrainHurtRemit: number;

        /** CombatUnit generalName. */
        public generalName: string;

        /** CombatUnit generalId. */
        public generalId: number;

        /**
         * Encodes the specified CombatUnit message. Does not implicitly {@link gameProto.CombatUnit.verify|verify} messages.
         * @param message CombatUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICombatUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CombatUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CombatUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CombatUnit;
    }

    /** Properties of a HeroWarData. */
    interface IHeroWarData {

        /** HeroWarData order */
        order: number;

        /** HeroWarData country */
        country: number;

        /** HeroWarData name */
        name: string;

        /** HeroWarData soldierType */
        soldierType: number;

        /** HeroWarData soldierLv */
        soldierLv: number;

        /** HeroWarData npc */
        npc: boolean;

        /** HeroWarData horseId */
        horseId?: (number|null);

        /** HeroWarData attOrDef */
        attOrDef: number;

        /** HeroWarData combatUnit */
        combatUnit?: (gameProto.ICombatUnit[]|null);

        /** HeroWarData heroPosition */
        heroPosition?: (number|null);
    }

    /** Represents a HeroWarData. */
    class HeroWarData implements IHeroWarData {

        /**
         * Constructs a new HeroWarData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHeroWarData);

        /** HeroWarData order. */
        public order: number;

        /** HeroWarData country. */
        public country: number;

        /** HeroWarData name. */
        public name: string;

        /** HeroWarData soldierType. */
        public soldierType: number;

        /** HeroWarData soldierLv. */
        public soldierLv: number;

        /** HeroWarData npc. */
        public npc: boolean;

        /** HeroWarData horseId. */
        public horseId: number;

        /** HeroWarData attOrDef. */
        public attOrDef: number;

        /** HeroWarData combatUnit. */
        public combatUnit: gameProto.ICombatUnit[];

        /** HeroWarData heroPosition. */
        public heroPosition: number;

        /**
         * Encodes the specified HeroWarData message. Does not implicitly {@link gameProto.HeroWarData.verify|verify} messages.
         * @param message HeroWarData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHeroWarData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HeroWarData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroWarData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HeroWarData;
    }

    /** Properties of a SceneCombatUnit. */
    interface ISceneCombatUnit {

        /** SceneCombatUnit elementId */
        elementId: number;

        /** SceneCombatUnit soldierType */
        soldierType: number;

        /** SceneCombatUnit troops */
        troops: number;

        /** SceneCombatUnit maxTroops */
        maxTroops: number;

        /** SceneCombatUnit xy */
        xy: number;

        /** SceneCombatUnit sysId */
        sysId?: (number|null);
    }

    /** Represents a SceneCombatUnit. */
    class SceneCombatUnit implements ISceneCombatUnit {

        /**
         * Constructs a new SceneCombatUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISceneCombatUnit);

        /** SceneCombatUnit elementId. */
        public elementId: number;

        /** SceneCombatUnit soldierType. */
        public soldierType: number;

        /** SceneCombatUnit troops. */
        public troops: number;

        /** SceneCombatUnit maxTroops. */
        public maxTroops: number;

        /** SceneCombatUnit xy. */
        public xy: number;

        /** SceneCombatUnit sysId. */
        public sysId: number;

        /**
         * Encodes the specified SceneCombatUnit message. Does not implicitly {@link gameProto.SceneCombatUnit.verify|verify} messages.
         * @param message SceneCombatUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISceneCombatUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SceneCombatUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SceneCombatUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SceneCombatUnit;
    }

    /** Properties of an ArroganceData. */
    interface IArroganceData {

        /** ArroganceData playerId */
        playerId: number;

        /** ArroganceData teamId */
        teamId: number;

        /** ArroganceData arrogance */
        arrogance: number;
    }

    /** Represents an ArroganceData. */
    class ArroganceData implements IArroganceData {

        /**
         * Constructs a new ArroganceData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArroganceData);

        /** ArroganceData playerId. */
        public playerId: number;

        /** ArroganceData teamId. */
        public teamId: number;

        /** ArroganceData arrogance. */
        public arrogance: number;

        /**
         * Encodes the specified ArroganceData message. Does not implicitly {@link gameProto.ArroganceData.verify|verify} messages.
         * @param message ArroganceData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArroganceData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArroganceData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArroganceData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArroganceData;
    }

    /** Properties of a S2C_WAR_BATTLE_INIT. */
    interface IS2C_WAR_BATTLE_INIT {

        /** S2C_WAR_BATTLE_INIT battleId */
        battleId: number;

        /** S2C_WAR_BATTLE_INIT warType */
        warType: number;

        /** S2C_WAR_BATTLE_INIT continueTime */
        continueTime: number;

        /** S2C_WAR_BATTLE_INIT warContinueTime */
        warContinueTime: number;

        /** S2C_WAR_BATTLE_INIT terrainId */
        terrainId: number;

        /** S2C_WAR_BATTLE_INIT cityId */
        cityId?: (number|null);

        /** S2C_WAR_BATTLE_INIT roundNumber */
        roundNumber?: (number|null);

        /** S2C_WAR_BATTLE_INIT attack */
        attack?: (gameProto.IHeroWarData[]|null);

        /** S2C_WAR_BATTLE_INIT defense */
        defense?: (gameProto.IHeroWarData[]|null);

        /** S2C_WAR_BATTLE_INIT sceneCombatUnit */
        sceneCombatUnit?: (gameProto.ISceneCombatUnit[]|null);

        /** S2C_WAR_BATTLE_INIT guideId */
        guideId?: (number|null);

        /** S2C_WAR_BATTLE_INIT atkArrogance */
        atkArrogance?: (gameProto.IArroganceData|null);

        /** S2C_WAR_BATTLE_INIT defArrogance */
        defArrogance?: (gameProto.IArroganceData|null);

        /** S2C_WAR_BATTLE_INIT atkMaxTroops */
        atkMaxTroops?: (number|null);

        /** S2C_WAR_BATTLE_INIT defMaxTroops */
        defMaxTroops?: (number|null);
    }

    /** Represents a S2C_WAR_BATTLE_INIT. */
    class S2C_WAR_BATTLE_INIT implements IS2C_WAR_BATTLE_INIT {

        /**
         * Constructs a new S2C_WAR_BATTLE_INIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BATTLE_INIT);

        /** S2C_WAR_BATTLE_INIT battleId. */
        public battleId: number;

        /** S2C_WAR_BATTLE_INIT warType. */
        public warType: number;

        /** S2C_WAR_BATTLE_INIT continueTime. */
        public continueTime: number;

        /** S2C_WAR_BATTLE_INIT warContinueTime. */
        public warContinueTime: number;

        /** S2C_WAR_BATTLE_INIT terrainId. */
        public terrainId: number;

        /** S2C_WAR_BATTLE_INIT cityId. */
        public cityId: number;

        /** S2C_WAR_BATTLE_INIT roundNumber. */
        public roundNumber: number;

        /** S2C_WAR_BATTLE_INIT attack. */
        public attack: gameProto.IHeroWarData[];

        /** S2C_WAR_BATTLE_INIT defense. */
        public defense: gameProto.IHeroWarData[];

        /** S2C_WAR_BATTLE_INIT sceneCombatUnit. */
        public sceneCombatUnit: gameProto.ISceneCombatUnit[];

        /** S2C_WAR_BATTLE_INIT guideId. */
        public guideId: number;

        /** S2C_WAR_BATTLE_INIT atkArrogance. */
        public atkArrogance?: (gameProto.IArroganceData|null);

        /** S2C_WAR_BATTLE_INIT defArrogance. */
        public defArrogance?: (gameProto.IArroganceData|null);

        /** S2C_WAR_BATTLE_INIT atkMaxTroops. */
        public atkMaxTroops: number;

        /** S2C_WAR_BATTLE_INIT defMaxTroops. */
        public defMaxTroops: number;

        /**
         * Encodes the specified S2C_WAR_BATTLE_INIT message. Does not implicitly {@link gameProto.S2C_WAR_BATTLE_INIT.verify|verify} messages.
         * @param message S2C_WAR_BATTLE_INIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BATTLE_INIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BATTLE_INIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BATTLE_INIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BATTLE_INIT;
    }

    /** Properties of a WarTargetExt. */
    interface IWarTargetExt {

        /** WarTargetExt reboundHurt */
        reboundHurt?: (number|null);

        /** WarTargetExt absorbHurt */
        absorbHurt?: (number|null);

        /** WarTargetExt restrain */
        restrain?: (number|null);
    }

    /** 一下是战场实时指令////////////////////////////////////////////////////// */
    class WarTargetExt implements IWarTargetExt {

        /**
         * Constructs a new WarTargetExt.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarTargetExt);

        /** WarTargetExt reboundHurt. */
        public reboundHurt: number;

        /** WarTargetExt absorbHurt. */
        public absorbHurt: number;

        /** WarTargetExt restrain. */
        public restrain: number;

        /**
         * Encodes the specified WarTargetExt message. Does not implicitly {@link gameProto.WarTargetExt.verify|verify} messages.
         * @param message WarTargetExt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarTargetExt, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarTargetExt message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarTargetExt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarTargetExt;
    }

    /** Properties of a WarTarget. */
    interface IWarTarget {

        /** WarTarget value */
        value: number;

        /** WarTarget troops */
        troops: number;

        /** WarTarget hurt */
        hurt: number;

        /** WarTarget xy */
        xy?: (number|null);

        /** WarTarget ext */
        ext?: (gameProto.IWarTargetExt|null);
    }

    /** Represents a WarTarget. */
    class WarTarget implements IWarTarget {

        /**
         * Constructs a new WarTarget.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarTarget);

        /** WarTarget value. */
        public value: number;

        /** WarTarget troops. */
        public troops: number;

        /** WarTarget hurt. */
        public hurt: number;

        /** WarTarget xy. */
        public xy: number;

        /** WarTarget ext. */
        public ext?: (gameProto.IWarTargetExt|null);

        /**
         * Encodes the specified WarTarget message. Does not implicitly {@link gameProto.WarTarget.verify|verify} messages.
         * @param message WarTarget message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarTarget, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarTarget message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarTarget
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarTarget;
    }

    /** Properties of a FrozenScenesElement. */
    interface IFrozenScenesElement {

        /** FrozenScenesElement elementIdList */
        elementIdList?: (number[]|null);

        /** FrozenScenesElement time */
        time: number;
    }

    /** Represents a FrozenScenesElement. */
    class FrozenScenesElement implements IFrozenScenesElement {

        /**
         * Constructs a new FrozenScenesElement.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IFrozenScenesElement);

        /** FrozenScenesElement elementIdList. */
        public elementIdList: number[];

        /** FrozenScenesElement time. */
        public time: number;

        /**
         * Encodes the specified FrozenScenesElement message. Does not implicitly {@link gameProto.FrozenScenesElement.verify|verify} messages.
         * @param message FrozenScenesElement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IFrozenScenesElement, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FrozenScenesElement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FrozenScenesElement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.FrozenScenesElement;
    }

    /** Properties of a RealTimeWarAttacker. */
    interface IRealTimeWarAttacker {

        /** RealTimeWarAttacker elementId */
        elementId: number;

        /** RealTimeWarAttacker anger */
        anger: number;

        /** RealTimeWarAttacker isOffset */
        isOffset: number;

        /** RealTimeWarAttacker offsetX */
        offsetX: number;

        /** RealTimeWarAttacker offsetZ */
        offsetZ: number;

        /** RealTimeWarAttacker direction */
        direction: number;
    }

    /** Represents a RealTimeWarAttacker. */
    class RealTimeWarAttacker implements IRealTimeWarAttacker {

        /**
         * Constructs a new RealTimeWarAttacker.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRealTimeWarAttacker);

        /** RealTimeWarAttacker elementId. */
        public elementId: number;

        /** RealTimeWarAttacker anger. */
        public anger: number;

        /** RealTimeWarAttacker isOffset. */
        public isOffset: number;

        /** RealTimeWarAttacker offsetX. */
        public offsetX: number;

        /** RealTimeWarAttacker offsetZ. */
        public offsetZ: number;

        /** RealTimeWarAttacker direction. */
        public direction: number;

        /**
         * Encodes the specified RealTimeWarAttacker message. Does not implicitly {@link gameProto.RealTimeWarAttacker.verify|verify} messages.
         * @param message RealTimeWarAttacker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRealTimeWarAttacker, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RealTimeWarAttacker message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RealTimeWarAttacker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RealTimeWarAttacker;
    }

    /** Properties of a RealTimeWarBuff. */
    interface IRealTimeWarBuff {

        /** RealTimeWarBuff elementId */
        elementId: number;

        /** RealTimeWarBuff buffId */
        buffId: number;

        /** RealTimeWarBuff buffSysId */
        buffSysId: number;

        /** RealTimeWarBuff isAttackAfter */
        isAttackAfter: number;

        /** RealTimeWarBuff unBuff */
        unBuff: number;
    }

    /** Represents a RealTimeWarBuff. */
    class RealTimeWarBuff implements IRealTimeWarBuff {

        /**
         * Constructs a new RealTimeWarBuff.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRealTimeWarBuff);

        /** RealTimeWarBuff elementId. */
        public elementId: number;

        /** RealTimeWarBuff buffId. */
        public buffId: number;

        /** RealTimeWarBuff buffSysId. */
        public buffSysId: number;

        /** RealTimeWarBuff isAttackAfter. */
        public isAttackAfter: number;

        /** RealTimeWarBuff unBuff. */
        public unBuff: number;

        /**
         * Encodes the specified RealTimeWarBuff message. Does not implicitly {@link gameProto.RealTimeWarBuff.verify|verify} messages.
         * @param message RealTimeWarBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRealTimeWarBuff, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RealTimeWarBuff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RealTimeWarBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RealTimeWarBuff;
    }

    /** Properties of a RealTimeWarScenesBuff. */
    interface IRealTimeWarScenesBuff {

        /** RealTimeWarScenesBuff buffId */
        buffId: number;

        /** RealTimeWarScenesBuff buffSysId */
        buffSysId: number;

        /** RealTimeWarScenesBuff isAttackAfter */
        isAttackAfter: number;

        /** RealTimeWarScenesBuff x */
        x: number;

        /** RealTimeWarScenesBuff y */
        y: number;
    }

    /** Represents a RealTimeWarScenesBuff. */
    class RealTimeWarScenesBuff implements IRealTimeWarScenesBuff {

        /**
         * Constructs a new RealTimeWarScenesBuff.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRealTimeWarScenesBuff);

        /** RealTimeWarScenesBuff buffId. */
        public buffId: number;

        /** RealTimeWarScenesBuff buffSysId. */
        public buffSysId: number;

        /** RealTimeWarScenesBuff isAttackAfter. */
        public isAttackAfter: number;

        /** RealTimeWarScenesBuff x. */
        public x: number;

        /** RealTimeWarScenesBuff y. */
        public y: number;

        /**
         * Encodes the specified RealTimeWarScenesBuff message. Does not implicitly {@link gameProto.RealTimeWarScenesBuff.verify|verify} messages.
         * @param message RealTimeWarScenesBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRealTimeWarScenesBuff, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RealTimeWarScenesBuff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RealTimeWarScenesBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RealTimeWarScenesBuff;
    }

    /** Properties of a RealTimeWar. */
    interface IRealTimeWar {

        /** RealTimeWar attacker */
        attacker: gameProto.IRealTimeWarAttacker;

        /** RealTimeWar attackerTroops */
        attackerTroops: number;

        /** RealTimeWar warTarget */
        warTarget?: (gameProto.IWarTarget[]|null);

        /** RealTimeWar skillData */
        skillData: number;

        /** RealTimeWar centerPoint */
        centerPoint?: (number[]|null);

        /** RealTimeWar buff */
        buff?: (gameProto.IRealTimeWarBuff[]|null);

        /** RealTimeWar scenesBuff */
        scenesBuff?: (gameProto.IRealTimeWarScenesBuff[]|null);

        /** RealTimeWar frozenScenesElement */
        frozenScenesElement?: (gameProto.IFrozenScenesElement|null);

        /** RealTimeWar callCombatUnit */
        callCombatUnit?: (gameProto.ISceneCombatUnit[]|null);
    }

    /** Represents a RealTimeWar. */
    class RealTimeWar implements IRealTimeWar {

        /**
         * Constructs a new RealTimeWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRealTimeWar);

        /** RealTimeWar attacker. */
        public attacker: gameProto.IRealTimeWarAttacker;

        /** RealTimeWar attackerTroops. */
        public attackerTroops: number;

        /** RealTimeWar warTarget. */
        public warTarget: gameProto.IWarTarget[];

        /** RealTimeWar skillData. */
        public skillData: number;

        /** RealTimeWar centerPoint. */
        public centerPoint: number[];

        /** RealTimeWar buff. */
        public buff: gameProto.IRealTimeWarBuff[];

        /** RealTimeWar scenesBuff. */
        public scenesBuff: gameProto.IRealTimeWarScenesBuff[];

        /** RealTimeWar frozenScenesElement. */
        public frozenScenesElement?: (gameProto.IFrozenScenesElement|null);

        /** RealTimeWar callCombatUnit. */
        public callCombatUnit: gameProto.ISceneCombatUnit[];

        /**
         * Encodes the specified RealTimeWar message. Does not implicitly {@link gameProto.RealTimeWar.verify|verify} messages.
         * @param message RealTimeWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRealTimeWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RealTimeWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RealTimeWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RealTimeWar;
    }

    /** Properties of a S2C_WAR_COMBAT_UNIT. */
    interface IS2C_WAR_COMBAT_UNIT {

        /** S2C_WAR_COMBAT_UNIT battleId */
        battleId: number;

        /** S2C_WAR_COMBAT_UNIT flowTime */
        flowTime: number;

        /** S2C_WAR_COMBAT_UNIT realTimeWar */
        realTimeWar?: (gameProto.IRealTimeWar[]|null);
    }

    /** Represents a S2C_WAR_COMBAT_UNIT. */
    class S2C_WAR_COMBAT_UNIT implements IS2C_WAR_COMBAT_UNIT {

        /**
         * Constructs a new S2C_WAR_COMBAT_UNIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_COMBAT_UNIT);

        /** S2C_WAR_COMBAT_UNIT battleId. */
        public battleId: number;

        /** S2C_WAR_COMBAT_UNIT flowTime. */
        public flowTime: number;

        /** S2C_WAR_COMBAT_UNIT realTimeWar. */
        public realTimeWar: gameProto.IRealTimeWar[];

        /**
         * Encodes the specified S2C_WAR_COMBAT_UNIT message. Does not implicitly {@link gameProto.S2C_WAR_COMBAT_UNIT.verify|verify} messages.
         * @param message S2C_WAR_COMBAT_UNIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_COMBAT_UNIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_COMBAT_UNIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_COMBAT_UNIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_COMBAT_UNIT;
    }

    /** Properties of a WarDeathData. */
    interface IWarDeathData {

        /** WarDeathData elementId */
        elementId: number;

        /** WarDeathData isDeath */
        isDeath: boolean;

        /** WarDeathData buff */
        buff?: (gameProto.IBuffData[]|null);

        /** WarDeathData soldierElementId */
        soldierElementId?: (number[]|null);
    }

    /** Represents a WarDeathData. */
    class WarDeathData implements IWarDeathData {

        /**
         * Constructs a new WarDeathData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarDeathData);

        /** WarDeathData elementId. */
        public elementId: number;

        /** WarDeathData isDeath. */
        public isDeath: boolean;

        /** WarDeathData buff. */
        public buff: gameProto.IBuffData[];

        /** WarDeathData soldierElementId. */
        public soldierElementId: number[];

        /**
         * Encodes the specified WarDeathData message. Does not implicitly {@link gameProto.WarDeathData.verify|verify} messages.
         * @param message WarDeathData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarDeathData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarDeathData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarDeathData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarDeathData;
    }

    /** Properties of a S2C_WAR_DEATH. */
    interface IS2C_WAR_DEATH {

        /** S2C_WAR_DEATH battleId */
        battleId: number;

        /** S2C_WAR_DEATH flowTime */
        flowTime: number;

        /** S2C_WAR_DEATH warDeathData */
        warDeathData?: (gameProto.IWarDeathData[]|null);
    }

    /** Represents a S2C_WAR_DEATH. */
    class S2C_WAR_DEATH implements IS2C_WAR_DEATH {

        /**
         * Constructs a new S2C_WAR_DEATH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_DEATH);

        /** S2C_WAR_DEATH battleId. */
        public battleId: number;

        /** S2C_WAR_DEATH flowTime. */
        public flowTime: number;

        /** S2C_WAR_DEATH warDeathData. */
        public warDeathData: gameProto.IWarDeathData[];

        /**
         * Encodes the specified S2C_WAR_DEATH message. Does not implicitly {@link gameProto.S2C_WAR_DEATH.verify|verify} messages.
         * @param message S2C_WAR_DEATH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_DEATH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_DEATH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_DEATH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_DEATH;
    }

    /** Properties of a S2C_WAR_FOLLOW_UP. */
    interface IS2C_WAR_FOLLOW_UP {

        /** S2C_WAR_FOLLOW_UP battleId */
        battleId: number;

        /** S2C_WAR_FOLLOW_UP flowTime */
        flowTime: number;

        /** S2C_WAR_FOLLOW_UP heroWarData */
        heroWarData?: (gameProto.IHeroWarData[]|null);
    }

    /** Represents a S2C_WAR_FOLLOW_UP. */
    class S2C_WAR_FOLLOW_UP implements IS2C_WAR_FOLLOW_UP {

        /**
         * Constructs a new S2C_WAR_FOLLOW_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_FOLLOW_UP);

        /** S2C_WAR_FOLLOW_UP battleId. */
        public battleId: number;

        /** S2C_WAR_FOLLOW_UP flowTime. */
        public flowTime: number;

        /** S2C_WAR_FOLLOW_UP heroWarData. */
        public heroWarData: gameProto.IHeroWarData[];

        /**
         * Encodes the specified S2C_WAR_FOLLOW_UP message. Does not implicitly {@link gameProto.S2C_WAR_FOLLOW_UP.verify|verify} messages.
         * @param message S2C_WAR_FOLLOW_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_FOLLOW_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_FOLLOW_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_FOLLOW_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_FOLLOW_UP;
    }

    /** Properties of a S2C_WAR_MOVE_SYNC. */
    interface IS2C_WAR_MOVE_SYNC {

        /** S2C_WAR_MOVE_SYNC battleId */
        battleId: number;

        /** S2C_WAR_MOVE_SYNC flowTime */
        flowTime: number;

        /** S2C_WAR_MOVE_SYNC xz */
        xz?: (number[]|null);
    }

    /** Represents a S2C_WAR_MOVE_SYNC. */
    class S2C_WAR_MOVE_SYNC implements IS2C_WAR_MOVE_SYNC {

        /**
         * Constructs a new S2C_WAR_MOVE_SYNC.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_MOVE_SYNC);

        /** S2C_WAR_MOVE_SYNC battleId. */
        public battleId: number;

        /** S2C_WAR_MOVE_SYNC flowTime. */
        public flowTime: number;

        /** S2C_WAR_MOVE_SYNC xz. */
        public xz: number[];

        /**
         * Encodes the specified S2C_WAR_MOVE_SYNC message. Does not implicitly {@link gameProto.S2C_WAR_MOVE_SYNC.verify|verify} messages.
         * @param message S2C_WAR_MOVE_SYNC message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_MOVE_SYNC, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_MOVE_SYNC message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_MOVE_SYNC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_MOVE_SYNC;
    }

    /** Properties of a S2C_WAR_SYNC_MOVE_SPEED. */
    interface IS2C_WAR_SYNC_MOVE_SPEED {

        /** S2C_WAR_SYNC_MOVE_SPEED battleId */
        battleId: number;

        /** S2C_WAR_SYNC_MOVE_SPEED flowTime */
        flowTime: number;

        /** S2C_WAR_SYNC_MOVE_SPEED moveSpeedData */
        moveSpeedData?: (number[]|null);
    }

    /** Represents a S2C_WAR_SYNC_MOVE_SPEED. */
    class S2C_WAR_SYNC_MOVE_SPEED implements IS2C_WAR_SYNC_MOVE_SPEED {

        /**
         * Constructs a new S2C_WAR_SYNC_MOVE_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_SYNC_MOVE_SPEED);

        /** S2C_WAR_SYNC_MOVE_SPEED battleId. */
        public battleId: number;

        /** S2C_WAR_SYNC_MOVE_SPEED flowTime. */
        public flowTime: number;

        /** S2C_WAR_SYNC_MOVE_SPEED moveSpeedData. */
        public moveSpeedData: number[];

        /**
         * Encodes the specified S2C_WAR_SYNC_MOVE_SPEED message. Does not implicitly {@link gameProto.S2C_WAR_SYNC_MOVE_SPEED.verify|verify} messages.
         * @param message S2C_WAR_SYNC_MOVE_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_SYNC_MOVE_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_SYNC_MOVE_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_SYNC_MOVE_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_SYNC_MOVE_SPEED;
    }

    /** Properties of a BuffData. */
    interface IBuffData {

        /** BuffData elementId */
        elementId: number;

        /** BuffData buffId */
        buffId: number;

        /** BuffData buffSysId */
        buffSysId: number;
    }

    /** Represents a BuffData. */
    class BuffData implements IBuffData {

        /**
         * Constructs a new BuffData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuffData);

        /** BuffData elementId. */
        public elementId: number;

        /** BuffData buffId. */
        public buffId: number;

        /** BuffData buffSysId. */
        public buffSysId: number;

        /**
         * Encodes the specified BuffData message. Does not implicitly {@link gameProto.BuffData.verify|verify} messages.
         * @param message BuffData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuffData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuffData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuffData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuffData;
    }

    /** Properties of a S2C_WAR_BUFF_ADD. */
    interface IS2C_WAR_BUFF_ADD {

        /** S2C_WAR_BUFF_ADD battleId */
        battleId: number;

        /** S2C_WAR_BUFF_ADD flowTime */
        flowTime: number;

        /** S2C_WAR_BUFF_ADD buffData */
        buffData?: (gameProto.IBuffData[]|null);
    }

    /** Represents a S2C_WAR_BUFF_ADD. */
    class S2C_WAR_BUFF_ADD implements IS2C_WAR_BUFF_ADD {

        /**
         * Constructs a new S2C_WAR_BUFF_ADD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BUFF_ADD);

        /** S2C_WAR_BUFF_ADD battleId. */
        public battleId: number;

        /** S2C_WAR_BUFF_ADD flowTime. */
        public flowTime: number;

        /** S2C_WAR_BUFF_ADD buffData. */
        public buffData: gameProto.IBuffData[];

        /**
         * Encodes the specified S2C_WAR_BUFF_ADD message. Does not implicitly {@link gameProto.S2C_WAR_BUFF_ADD.verify|verify} messages.
         * @param message S2C_WAR_BUFF_ADD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BUFF_ADD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BUFF_ADD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BUFF_ADD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BUFF_ADD;
    }

    /** Properties of a S2C_WAR_BUFF_UN. */
    interface IS2C_WAR_BUFF_UN {

        /** S2C_WAR_BUFF_UN battleId */
        battleId: number;

        /** S2C_WAR_BUFF_UN flowTime */
        flowTime: number;

        /** S2C_WAR_BUFF_UN buffData */
        buffData?: (number[]|null);
    }

    /** Represents a S2C_WAR_BUFF_UN. */
    class S2C_WAR_BUFF_UN implements IS2C_WAR_BUFF_UN {

        /**
         * Constructs a new S2C_WAR_BUFF_UN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BUFF_UN);

        /** S2C_WAR_BUFF_UN battleId. */
        public battleId: number;

        /** S2C_WAR_BUFF_UN flowTime. */
        public flowTime: number;

        /** S2C_WAR_BUFF_UN buffData. */
        public buffData: number[];

        /**
         * Encodes the specified S2C_WAR_BUFF_UN message. Does not implicitly {@link gameProto.S2C_WAR_BUFF_UN.verify|verify} messages.
         * @param message S2C_WAR_BUFF_UN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BUFF_UN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BUFF_UN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BUFF_UN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BUFF_UN;
    }

    /** Properties of a BuffOffsetXy. */
    interface IBuffOffsetXy {

        /** BuffOffsetXy buffId */
        buffId: number;

        /** BuffOffsetXy elementId */
        elementId: number;

        /** BuffOffsetXy offsetType */
        offsetType: number;

        /** BuffOffsetXy x */
        x: number;

        /** BuffOffsetXy y */
        y: number;
    }

    /** Represents a BuffOffsetXy. */
    class BuffOffsetXy implements IBuffOffsetXy {

        /**
         * Constructs a new BuffOffsetXy.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuffOffsetXy);

        /** BuffOffsetXy buffId. */
        public buffId: number;

        /** BuffOffsetXy elementId. */
        public elementId: number;

        /** BuffOffsetXy offsetType. */
        public offsetType: number;

        /** BuffOffsetXy x. */
        public x: number;

        /** BuffOffsetXy y. */
        public y: number;

        /**
         * Encodes the specified BuffOffsetXy message. Does not implicitly {@link gameProto.BuffOffsetXy.verify|verify} messages.
         * @param message BuffOffsetXy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuffOffsetXy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuffOffsetXy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuffOffsetXy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuffOffsetXy;
    }

    /** Properties of a S2C_WAR_BUFF_OFFSET. */
    interface IS2C_WAR_BUFF_OFFSET {

        /** S2C_WAR_BUFF_OFFSET battleId */
        battleId: number;

        /** S2C_WAR_BUFF_OFFSET flowTime */
        flowTime: number;

        /** S2C_WAR_BUFF_OFFSET offsetXy */
        offsetXy?: (gameProto.IBuffOffsetXy[]|null);
    }

    /** Represents a S2C_WAR_BUFF_OFFSET. */
    class S2C_WAR_BUFF_OFFSET implements IS2C_WAR_BUFF_OFFSET {

        /**
         * Constructs a new S2C_WAR_BUFF_OFFSET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BUFF_OFFSET);

        /** S2C_WAR_BUFF_OFFSET battleId. */
        public battleId: number;

        /** S2C_WAR_BUFF_OFFSET flowTime. */
        public flowTime: number;

        /** S2C_WAR_BUFF_OFFSET offsetXy. */
        public offsetXy: gameProto.IBuffOffsetXy[];

        /**
         * Encodes the specified S2C_WAR_BUFF_OFFSET message. Does not implicitly {@link gameProto.S2C_WAR_BUFF_OFFSET.verify|verify} messages.
         * @param message S2C_WAR_BUFF_OFFSET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BUFF_OFFSET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BUFF_OFFSET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BUFF_OFFSET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BUFF_OFFSET;
    }

    /** Properties of a BuffBloodData. */
    interface IBuffBloodData {

        /** BuffBloodData buffId */
        buffId: number;

        /** BuffBloodData elementId */
        elementId: number;

        /** BuffBloodData troops */
        troops: number;

        /** BuffBloodData anager */
        anager: number;
    }

    /** Represents a BuffBloodData. */
    class BuffBloodData implements IBuffBloodData {

        /**
         * Constructs a new BuffBloodData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuffBloodData);

        /** BuffBloodData buffId. */
        public buffId: number;

        /** BuffBloodData elementId. */
        public elementId: number;

        /** BuffBloodData troops. */
        public troops: number;

        /** BuffBloodData anager. */
        public anager: number;

        /**
         * Encodes the specified BuffBloodData message. Does not implicitly {@link gameProto.BuffBloodData.verify|verify} messages.
         * @param message BuffBloodData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuffBloodData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuffBloodData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuffBloodData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuffBloodData;
    }

    /** Properties of a S2C_WAR_BUFF_BLOOD. */
    interface IS2C_WAR_BUFF_BLOOD {

        /** S2C_WAR_BUFF_BLOOD battleId */
        battleId: number;

        /** S2C_WAR_BUFF_BLOOD flowTime */
        flowTime: number;

        /** S2C_WAR_BUFF_BLOOD bloodData */
        bloodData?: (gameProto.IBuffBloodData[]|null);
    }

    /** Represents a S2C_WAR_BUFF_BLOOD. */
    class S2C_WAR_BUFF_BLOOD implements IS2C_WAR_BUFF_BLOOD {

        /**
         * Constructs a new S2C_WAR_BUFF_BLOOD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BUFF_BLOOD);

        /** S2C_WAR_BUFF_BLOOD battleId. */
        public battleId: number;

        /** S2C_WAR_BUFF_BLOOD flowTime. */
        public flowTime: number;

        /** S2C_WAR_BUFF_BLOOD bloodData. */
        public bloodData: gameProto.IBuffBloodData[];

        /**
         * Encodes the specified S2C_WAR_BUFF_BLOOD message. Does not implicitly {@link gameProto.S2C_WAR_BUFF_BLOOD.verify|verify} messages.
         * @param message S2C_WAR_BUFF_BLOOD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BUFF_BLOOD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BUFF_BLOOD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BUFF_BLOOD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BUFF_BLOOD;
    }

    /** Properties of a S2C_WAR_ELEMENT_BLOOD. */
    interface IS2C_WAR_ELEMENT_BLOOD {

        /** S2C_WAR_ELEMENT_BLOOD battleId */
        battleId: number;

        /** S2C_WAR_ELEMENT_BLOOD flowTime */
        flowTime: number;

        /** S2C_WAR_ELEMENT_BLOOD anger */
        anger?: (number[]|null);
    }

    /** Represents a S2C_WAR_ELEMENT_BLOOD. */
    class S2C_WAR_ELEMENT_BLOOD implements IS2C_WAR_ELEMENT_BLOOD {

        /**
         * Constructs a new S2C_WAR_ELEMENT_BLOOD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_ELEMENT_BLOOD);

        /** S2C_WAR_ELEMENT_BLOOD battleId. */
        public battleId: number;

        /** S2C_WAR_ELEMENT_BLOOD flowTime. */
        public flowTime: number;

        /** S2C_WAR_ELEMENT_BLOOD anger. */
        public anger: number[];

        /**
         * Encodes the specified S2C_WAR_ELEMENT_BLOOD message. Does not implicitly {@link gameProto.S2C_WAR_ELEMENT_BLOOD.verify|verify} messages.
         * @param message S2C_WAR_ELEMENT_BLOOD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_ELEMENT_BLOOD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_ELEMENT_BLOOD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_ELEMENT_BLOOD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_ELEMENT_BLOOD;
    }

    /** Properties of a S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD. */
    interface IS2C_WAR_BUFF_BLOOD_THUNDER_HALBERD {

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD battleId */
        battleId: number;

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD flowTime */
        flowTime: number;

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD bloodData */
        bloodData?: (gameProto.IBuffBloodData[]|null);

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD xz */
        xz?: (number[]|null);
    }

    /** Represents a S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD. */
    class S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD implements IS2C_WAR_BUFF_BLOOD_THUNDER_HALBERD {

        /**
         * Constructs a new S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_BUFF_BLOOD_THUNDER_HALBERD);

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD battleId. */
        public battleId: number;

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD flowTime. */
        public flowTime: number;

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD bloodData. */
        public bloodData: gameProto.IBuffBloodData[];

        /** S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD xz. */
        public xz: number[];

        /**
         * Encodes the specified S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD message. Does not implicitly {@link gameProto.S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD.verify|verify} messages.
         * @param message S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_BUFF_BLOOD_THUNDER_HALBERD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_BUFF_BLOOD_THUNDER_HALBERD;
    }

    /** Properties of a S2C_WAR_GUIDE. */
    interface IS2C_WAR_GUIDE {

        /** S2C_WAR_GUIDE battleId */
        battleId: number;

        /** S2C_WAR_GUIDE flowTime */
        flowTime: number;

        /** S2C_WAR_GUIDE guideId */
        guideId?: (number[]|null);
    }

    /** Represents a S2C_WAR_GUIDE. */
    class S2C_WAR_GUIDE implements IS2C_WAR_GUIDE {

        /**
         * Constructs a new S2C_WAR_GUIDE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_GUIDE);

        /** S2C_WAR_GUIDE battleId. */
        public battleId: number;

        /** S2C_WAR_GUIDE flowTime. */
        public flowTime: number;

        /** S2C_WAR_GUIDE guideId. */
        public guideId: number[];

        /**
         * Encodes the specified S2C_WAR_GUIDE message. Does not implicitly {@link gameProto.S2C_WAR_GUIDE.verify|verify} messages.
         * @param message S2C_WAR_GUIDE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_GUIDE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_GUIDE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_GUIDE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_GUIDE;
    }

    /** Properties of a S2C_WAR_MOVE_PATH. */
    interface IS2C_WAR_MOVE_PATH {

        /** S2C_WAR_MOVE_PATH battleId */
        battleId: number;

        /** S2C_WAR_MOVE_PATH elementId */
        elementId: number;

        /** S2C_WAR_MOVE_PATH pathNode */
        pathNode?: (number[]|null);
    }

    /** Represents a S2C_WAR_MOVE_PATH. */
    class S2C_WAR_MOVE_PATH implements IS2C_WAR_MOVE_PATH {

        /**
         * Constructs a new S2C_WAR_MOVE_PATH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_MOVE_PATH);

        /** S2C_WAR_MOVE_PATH battleId. */
        public battleId: number;

        /** S2C_WAR_MOVE_PATH elementId. */
        public elementId: number;

        /** S2C_WAR_MOVE_PATH pathNode. */
        public pathNode: number[];

        /**
         * Encodes the specified S2C_WAR_MOVE_PATH message. Does not implicitly {@link gameProto.S2C_WAR_MOVE_PATH.verify|verify} messages.
         * @param message S2C_WAR_MOVE_PATH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_MOVE_PATH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_MOVE_PATH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_MOVE_PATH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_MOVE_PATH;
    }

    /** Properties of a S2C_WAR_MOVE_STOP. */
    interface IS2C_WAR_MOVE_STOP {

        /** S2C_WAR_MOVE_STOP battleId */
        battleId: number;

        /** S2C_WAR_MOVE_STOP elementId */
        elementId: number;

        /** S2C_WAR_MOVE_STOP xz */
        xz: number;
    }

    /** Represents a S2C_WAR_MOVE_STOP. */
    class S2C_WAR_MOVE_STOP implements IS2C_WAR_MOVE_STOP {

        /**
         * Constructs a new S2C_WAR_MOVE_STOP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_MOVE_STOP);

        /** S2C_WAR_MOVE_STOP battleId. */
        public battleId: number;

        /** S2C_WAR_MOVE_STOP elementId. */
        public elementId: number;

        /** S2C_WAR_MOVE_STOP xz. */
        public xz: number;

        /**
         * Encodes the specified S2C_WAR_MOVE_STOP message. Does not implicitly {@link gameProto.S2C_WAR_MOVE_STOP.verify|verify} messages.
         * @param message S2C_WAR_MOVE_STOP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_MOVE_STOP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_MOVE_STOP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_MOVE_STOP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_MOVE_STOP;
    }

    /** Properties of a QueryHeroBuffData. */
    interface IQueryHeroBuffData {

        /** QueryHeroBuffData buffId */
        buffId: number;

        /** QueryHeroBuffData buffSysId */
        buffSysId: number;

        /** QueryHeroBuffData attributeId */
        attributeId: number;

        /** QueryHeroBuffData attributeValue */
        attributeValue: number;
    }

    /** Represents a QueryHeroBuffData. */
    class QueryHeroBuffData implements IQueryHeroBuffData {

        /**
         * Constructs a new QueryHeroBuffData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IQueryHeroBuffData);

        /** QueryHeroBuffData buffId. */
        public buffId: number;

        /** QueryHeroBuffData buffSysId. */
        public buffSysId: number;

        /** QueryHeroBuffData attributeId. */
        public attributeId: number;

        /** QueryHeroBuffData attributeValue. */
        public attributeValue: number;

        /**
         * Encodes the specified QueryHeroBuffData message. Does not implicitly {@link gameProto.QueryHeroBuffData.verify|verify} messages.
         * @param message QueryHeroBuffData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IQueryHeroBuffData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a QueryHeroBuffData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryHeroBuffData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.QueryHeroBuffData;
    }

    /** Properties of a QueryHeroData. */
    interface IQueryHeroData {

        /** QueryHeroData elementId */
        elementId: number;

        /** QueryHeroData heroId */
        heroId: number;

        /** QueryHeroData heroSysId */
        heroSysId: number;

        /** QueryHeroData keyValue */
        keyValue?: (gameProto.ISysKeyValue[]|null);

        /** QueryHeroData buffData */
        buffData?: (gameProto.IQueryHeroBuffData[]|null);
    }

    /** Represents a QueryHeroData. */
    class QueryHeroData implements IQueryHeroData {

        /**
         * Constructs a new QueryHeroData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IQueryHeroData);

        /** QueryHeroData elementId. */
        public elementId: number;

        /** QueryHeroData heroId. */
        public heroId: number;

        /** QueryHeroData heroSysId. */
        public heroSysId: number;

        /** QueryHeroData keyValue. */
        public keyValue: gameProto.ISysKeyValue[];

        /** QueryHeroData buffData. */
        public buffData: gameProto.IQueryHeroBuffData[];

        /**
         * Encodes the specified QueryHeroData message. Does not implicitly {@link gameProto.QueryHeroData.verify|verify} messages.
         * @param message QueryHeroData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IQueryHeroData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a QueryHeroData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryHeroData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.QueryHeroData;
    }

    /** Properties of a S2C_WAR_QUERY_HERO_DATA. */
    interface IS2C_WAR_QUERY_HERO_DATA {

        /** S2C_WAR_QUERY_HERO_DATA battleId */
        battleId: number;

        /** S2C_WAR_QUERY_HERO_DATA heroData */
        heroData?: (gameProto.IQueryHeroData[]|null);
    }

    /** Represents a S2C_WAR_QUERY_HERO_DATA. */
    class S2C_WAR_QUERY_HERO_DATA implements IS2C_WAR_QUERY_HERO_DATA {

        /**
         * Constructs a new S2C_WAR_QUERY_HERO_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_QUERY_HERO_DATA);

        /** S2C_WAR_QUERY_HERO_DATA battleId. */
        public battleId: number;

        /** S2C_WAR_QUERY_HERO_DATA heroData. */
        public heroData: gameProto.IQueryHeroData[];

        /**
         * Encodes the specified S2C_WAR_QUERY_HERO_DATA message. Does not implicitly {@link gameProto.S2C_WAR_QUERY_HERO_DATA.verify|verify} messages.
         * @param message S2C_WAR_QUERY_HERO_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_QUERY_HERO_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_QUERY_HERO_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_QUERY_HERO_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_QUERY_HERO_DATA;
    }

    /** Properties of a S2C_WAR_ANAGER_SKILL. */
    interface IS2C_WAR_ANAGER_SKILL {

        /** S2C_WAR_ANAGER_SKILL battleId */
        battleId: number;

        /** S2C_WAR_ANAGER_SKILL state */
        state: number;
    }

    /** Represents a S2C_WAR_ANAGER_SKILL. */
    class S2C_WAR_ANAGER_SKILL implements IS2C_WAR_ANAGER_SKILL {

        /**
         * Constructs a new S2C_WAR_ANAGER_SKILL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_ANAGER_SKILL);

        /** S2C_WAR_ANAGER_SKILL battleId. */
        public battleId: number;

        /** S2C_WAR_ANAGER_SKILL state. */
        public state: number;

        /**
         * Encodes the specified S2C_WAR_ANAGER_SKILL message. Does not implicitly {@link gameProto.S2C_WAR_ANAGER_SKILL.verify|verify} messages.
         * @param message S2C_WAR_ANAGER_SKILL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_ANAGER_SKILL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_ANAGER_SKILL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_ANAGER_SKILL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_ANAGER_SKILL;
    }

    /** Properties of a S2C_WAR_SKILL_FAIL. */
    interface IS2C_WAR_SKILL_FAIL {

        /** S2C_WAR_SKILL_FAIL battleId */
        battleId: number;

        /** S2C_WAR_SKILL_FAIL elementId */
        elementId: number;

        /** S2C_WAR_SKILL_FAIL errId */
        errId: number;
    }

    /** Represents a S2C_WAR_SKILL_FAIL. */
    class S2C_WAR_SKILL_FAIL implements IS2C_WAR_SKILL_FAIL {

        /**
         * Constructs a new S2C_WAR_SKILL_FAIL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_SKILL_FAIL);

        /** S2C_WAR_SKILL_FAIL battleId. */
        public battleId: number;

        /** S2C_WAR_SKILL_FAIL elementId. */
        public elementId: number;

        /** S2C_WAR_SKILL_FAIL errId. */
        public errId: number;

        /**
         * Encodes the specified S2C_WAR_SKILL_FAIL message. Does not implicitly {@link gameProto.S2C_WAR_SKILL_FAIL.verify|verify} messages.
         * @param message S2C_WAR_SKILL_FAIL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_SKILL_FAIL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_SKILL_FAIL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_SKILL_FAIL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_SKILL_FAIL;
    }

    /** Properties of an OrderBattlePromptData. */
    interface IOrderBattlePromptData {

        /** OrderBattlePromptData country */
        country: number;

        /** OrderBattlePromptData sysId */
        sysId: number;

        /** OrderBattlePromptData name */
        name: string;

        /** OrderBattlePromptData order */
        order: number;

        /** OrderBattlePromptData heroTroops */
        heroTroops: number;

        /** OrderBattlePromptData heroMaxTroops */
        heroMaxTroops: number;

        /** OrderBattlePromptData soldierTroops */
        soldierTroops: number;

        /** OrderBattlePromptData soldierMaxTroops */
        soldierMaxTroops: number;

        /** OrderBattlePromptData anager */
        anager?: (number|null);

        /** OrderBattlePromptData npc */
        npc: boolean;
    }

    /** Represents an OrderBattlePromptData. */
    class OrderBattlePromptData implements IOrderBattlePromptData {

        /**
         * Constructs a new OrderBattlePromptData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IOrderBattlePromptData);

        /** OrderBattlePromptData country. */
        public country: number;

        /** OrderBattlePromptData sysId. */
        public sysId: number;

        /** OrderBattlePromptData name. */
        public name: string;

        /** OrderBattlePromptData order. */
        public order: number;

        /** OrderBattlePromptData heroTroops. */
        public heroTroops: number;

        /** OrderBattlePromptData heroMaxTroops. */
        public heroMaxTroops: number;

        /** OrderBattlePromptData soldierTroops. */
        public soldierTroops: number;

        /** OrderBattlePromptData soldierMaxTroops. */
        public soldierMaxTroops: number;

        /** OrderBattlePromptData anager. */
        public anager: number;

        /** OrderBattlePromptData npc. */
        public npc: boolean;

        /**
         * Encodes the specified OrderBattlePromptData message. Does not implicitly {@link gameProto.OrderBattlePromptData.verify|verify} messages.
         * @param message OrderBattlePromptData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IOrderBattlePromptData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OrderBattlePromptData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderBattlePromptData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.OrderBattlePromptData;
    }

    /** Properties of an OrderBattlePromptLowerData. */
    interface IOrderBattlePromptLowerData {

        /** OrderBattlePromptLowerData sysId */
        sysId: number;

        /** OrderBattlePromptLowerData order */
        order: number;

        /** OrderBattlePromptLowerData heroTroops */
        heroTroops: number;

        /** OrderBattlePromptLowerData heroMaxTroops */
        heroMaxTroops: number;

        /** OrderBattlePromptLowerData anager */
        anager: number;

        /** OrderBattlePromptLowerData attack */
        attack: boolean;
    }

    /** Represents an OrderBattlePromptLowerData. */
    class OrderBattlePromptLowerData implements IOrderBattlePromptLowerData {

        /**
         * Constructs a new OrderBattlePromptLowerData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IOrderBattlePromptLowerData);

        /** OrderBattlePromptLowerData sysId. */
        public sysId: number;

        /** OrderBattlePromptLowerData order. */
        public order: number;

        /** OrderBattlePromptLowerData heroTroops. */
        public heroTroops: number;

        /** OrderBattlePromptLowerData heroMaxTroops. */
        public heroMaxTroops: number;

        /** OrderBattlePromptLowerData anager. */
        public anager: number;

        /** OrderBattlePromptLowerData attack. */
        public attack: boolean;

        /**
         * Encodes the specified OrderBattlePromptLowerData message. Does not implicitly {@link gameProto.OrderBattlePromptLowerData.verify|verify} messages.
         * @param message OrderBattlePromptLowerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IOrderBattlePromptLowerData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OrderBattlePromptLowerData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderBattlePromptLowerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.OrderBattlePromptLowerData;
    }

    /** Properties of a S2C_WAR_PROMPT_QUEUE_INIT. */
    interface IS2C_WAR_PROMPT_QUEUE_INIT {

        /** S2C_WAR_PROMPT_QUEUE_INIT battleId */
        battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_INIT attack */
        attack?: (gameProto.IOrderBattlePromptData[]|null);

        /** S2C_WAR_PROMPT_QUEUE_INIT defense */
        defense?: (gameProto.IOrderBattlePromptData[]|null);

        /** S2C_WAR_PROMPT_QUEUE_INIT attackOrderList */
        attackOrderList?: (number[]|null);

        /** S2C_WAR_PROMPT_QUEUE_INIT defenseOrderList */
        defenseOrderList?: (number[]|null);

        /** S2C_WAR_PROMPT_QUEUE_INIT ownOrderList */
        ownOrderList?: (gameProto.IOrderBattlePromptLowerData[]|null);
    }

    /** Represents a S2C_WAR_PROMPT_QUEUE_INIT. */
    class S2C_WAR_PROMPT_QUEUE_INIT implements IS2C_WAR_PROMPT_QUEUE_INIT {

        /**
         * Constructs a new S2C_WAR_PROMPT_QUEUE_INIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_PROMPT_QUEUE_INIT);

        /** S2C_WAR_PROMPT_QUEUE_INIT battleId. */
        public battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_INIT attack. */
        public attack: gameProto.IOrderBattlePromptData[];

        /** S2C_WAR_PROMPT_QUEUE_INIT defense. */
        public defense: gameProto.IOrderBattlePromptData[];

        /** S2C_WAR_PROMPT_QUEUE_INIT attackOrderList. */
        public attackOrderList: number[];

        /** S2C_WAR_PROMPT_QUEUE_INIT defenseOrderList. */
        public defenseOrderList: number[];

        /** S2C_WAR_PROMPT_QUEUE_INIT ownOrderList. */
        public ownOrderList: gameProto.IOrderBattlePromptLowerData[];

        /**
         * Encodes the specified S2C_WAR_PROMPT_QUEUE_INIT message. Does not implicitly {@link gameProto.S2C_WAR_PROMPT_QUEUE_INIT.verify|verify} messages.
         * @param message S2C_WAR_PROMPT_QUEUE_INIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_PROMPT_QUEUE_INIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_PROMPT_QUEUE_INIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_PROMPT_QUEUE_INIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_PROMPT_QUEUE_INIT;
    }

    /** Properties of a S2C_WAR_PROMPT_QUEUE_PAGE. */
    interface IS2C_WAR_PROMPT_QUEUE_PAGE {

        /** S2C_WAR_PROMPT_QUEUE_PAGE battleId */
        battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_PAGE attack */
        attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_PAGE data */
        data?: (gameProto.IOrderBattlePromptData[]|null);
    }

    /** Represents a S2C_WAR_PROMPT_QUEUE_PAGE. */
    class S2C_WAR_PROMPT_QUEUE_PAGE implements IS2C_WAR_PROMPT_QUEUE_PAGE {

        /**
         * Constructs a new S2C_WAR_PROMPT_QUEUE_PAGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_PROMPT_QUEUE_PAGE);

        /** S2C_WAR_PROMPT_QUEUE_PAGE battleId. */
        public battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_PAGE attack. */
        public attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_PAGE data. */
        public data: gameProto.IOrderBattlePromptData[];

        /**
         * Encodes the specified S2C_WAR_PROMPT_QUEUE_PAGE message. Does not implicitly {@link gameProto.S2C_WAR_PROMPT_QUEUE_PAGE.verify|verify} messages.
         * @param message S2C_WAR_PROMPT_QUEUE_PAGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_PROMPT_QUEUE_PAGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_PROMPT_QUEUE_PAGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_PROMPT_QUEUE_PAGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_PROMPT_QUEUE_PAGE;
    }

    /** Properties of a S2C_WAR_PROMPT_QUEUE_ADD. */
    interface IS2C_WAR_PROMPT_QUEUE_ADD {

        /** S2C_WAR_PROMPT_QUEUE_ADD battleId */
        battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_ADD attack */
        attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_ADD order */
        order?: (number[]|null);
    }

    /** Represents a S2C_WAR_PROMPT_QUEUE_ADD. */
    class S2C_WAR_PROMPT_QUEUE_ADD implements IS2C_WAR_PROMPT_QUEUE_ADD {

        /**
         * Constructs a new S2C_WAR_PROMPT_QUEUE_ADD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_PROMPT_QUEUE_ADD);

        /** S2C_WAR_PROMPT_QUEUE_ADD battleId. */
        public battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_ADD attack. */
        public attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_ADD order. */
        public order: number[];

        /**
         * Encodes the specified S2C_WAR_PROMPT_QUEUE_ADD message. Does not implicitly {@link gameProto.S2C_WAR_PROMPT_QUEUE_ADD.verify|verify} messages.
         * @param message S2C_WAR_PROMPT_QUEUE_ADD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_PROMPT_QUEUE_ADD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_PROMPT_QUEUE_ADD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_PROMPT_QUEUE_ADD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_PROMPT_QUEUE_ADD;
    }

    /** Properties of a S2C_WAR_PROMPT_QUEUE_DEL. */
    interface IS2C_WAR_PROMPT_QUEUE_DEL {

        /** S2C_WAR_PROMPT_QUEUE_DEL battleId */
        battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_DEL attack */
        attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_DEL order */
        order: number;
    }

    /** Represents a S2C_WAR_PROMPT_QUEUE_DEL. */
    class S2C_WAR_PROMPT_QUEUE_DEL implements IS2C_WAR_PROMPT_QUEUE_DEL {

        /**
         * Constructs a new S2C_WAR_PROMPT_QUEUE_DEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_PROMPT_QUEUE_DEL);

        /** S2C_WAR_PROMPT_QUEUE_DEL battleId. */
        public battleId: number;

        /** S2C_WAR_PROMPT_QUEUE_DEL attack. */
        public attack: boolean;

        /** S2C_WAR_PROMPT_QUEUE_DEL order. */
        public order: number;

        /**
         * Encodes the specified S2C_WAR_PROMPT_QUEUE_DEL message. Does not implicitly {@link gameProto.S2C_WAR_PROMPT_QUEUE_DEL.verify|verify} messages.
         * @param message S2C_WAR_PROMPT_QUEUE_DEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_PROMPT_QUEUE_DEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_PROMPT_QUEUE_DEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_PROMPT_QUEUE_DEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_PROMPT_QUEUE_DEL;
    }

    /** Properties of a S2C_WAR_PROMPT_LOWER_QUEUE_ADD. */
    interface IS2C_WAR_PROMPT_LOWER_QUEUE_ADD {

        /** S2C_WAR_PROMPT_LOWER_QUEUE_ADD battleId */
        battleId: number;

        /** S2C_WAR_PROMPT_LOWER_QUEUE_ADD ownOrderList */
        ownOrderList?: (gameProto.IOrderBattlePromptLowerData[]|null);
    }

    /** Represents a S2C_WAR_PROMPT_LOWER_QUEUE_ADD. */
    class S2C_WAR_PROMPT_LOWER_QUEUE_ADD implements IS2C_WAR_PROMPT_LOWER_QUEUE_ADD {

        /**
         * Constructs a new S2C_WAR_PROMPT_LOWER_QUEUE_ADD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_PROMPT_LOWER_QUEUE_ADD);

        /** S2C_WAR_PROMPT_LOWER_QUEUE_ADD battleId. */
        public battleId: number;

        /** S2C_WAR_PROMPT_LOWER_QUEUE_ADD ownOrderList. */
        public ownOrderList: gameProto.IOrderBattlePromptLowerData[];

        /**
         * Encodes the specified S2C_WAR_PROMPT_LOWER_QUEUE_ADD message. Does not implicitly {@link gameProto.S2C_WAR_PROMPT_LOWER_QUEUE_ADD.verify|verify} messages.
         * @param message S2C_WAR_PROMPT_LOWER_QUEUE_ADD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_PROMPT_LOWER_QUEUE_ADD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_PROMPT_LOWER_QUEUE_ADD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_PROMPT_LOWER_QUEUE_ADD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_PROMPT_LOWER_QUEUE_ADD;
    }

    /** Properties of a S2C_WAR_COUNTRY_OVER. */
    interface IS2C_WAR_COUNTRY_OVER {

        /** S2C_WAR_COUNTRY_OVER battleId */
        battleId: number;

        /** S2C_WAR_COUNTRY_OVER victory */
        victory: boolean;

        /** S2C_WAR_COUNTRY_OVER victoryData */
        victoryData: gameProto.ICountryOverData;

        /** S2C_WAR_COUNTRY_OVER failData */
        failData: gameProto.ICountryOverData;
    }

    /** Represents a S2C_WAR_COUNTRY_OVER. */
    class S2C_WAR_COUNTRY_OVER implements IS2C_WAR_COUNTRY_OVER {

        /**
         * Constructs a new S2C_WAR_COUNTRY_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_COUNTRY_OVER);

        /** S2C_WAR_COUNTRY_OVER battleId. */
        public battleId: number;

        /** S2C_WAR_COUNTRY_OVER victory. */
        public victory: boolean;

        /** S2C_WAR_COUNTRY_OVER victoryData. */
        public victoryData: gameProto.ICountryOverData;

        /** S2C_WAR_COUNTRY_OVER failData. */
        public failData: gameProto.ICountryOverData;

        /**
         * Encodes the specified S2C_WAR_COUNTRY_OVER message. Does not implicitly {@link gameProto.S2C_WAR_COUNTRY_OVER.verify|verify} messages.
         * @param message S2C_WAR_COUNTRY_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_COUNTRY_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_COUNTRY_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_COUNTRY_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_COUNTRY_OVER;
    }

    /** Properties of a S2C_WAR_OVER. */
    interface IS2C_WAR_OVER {

        /** S2C_WAR_OVER battleId */
        battleId: number;

        /** S2C_WAR_OVER flowTime */
        flowTime: number;

        /** S2C_WAR_OVER victory */
        victory: boolean;

        /** S2C_WAR_OVER attCountHp */
        attCountHp: number;

        /** S2C_WAR_OVER defCountHp */
        defCountHp: number;
    }

    /** Represents a S2C_WAR_OVER. */
    class S2C_WAR_OVER implements IS2C_WAR_OVER {

        /**
         * Constructs a new S2C_WAR_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_OVER);

        /** S2C_WAR_OVER battleId. */
        public battleId: number;

        /** S2C_WAR_OVER flowTime. */
        public flowTime: number;

        /** S2C_WAR_OVER victory. */
        public victory: boolean;

        /** S2C_WAR_OVER attCountHp. */
        public attCountHp: number;

        /** S2C_WAR_OVER defCountHp. */
        public defCountHp: number;

        /**
         * Encodes the specified S2C_WAR_OVER message. Does not implicitly {@link gameProto.S2C_WAR_OVER.verify|verify} messages.
         * @param message S2C_WAR_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_OVER;
    }

    /** Properties of a S2C_WAR_KILL_SOLDIERS_COUNT. */
    interface IS2C_WAR_KILL_SOLDIERS_COUNT {

        /** S2C_WAR_KILL_SOLDIERS_COUNT battleId */
        battleId: number;

        /** S2C_WAR_KILL_SOLDIERS_COUNT killSoldiersCount */
        killSoldiersCount: number;
    }

    /** Represents a S2C_WAR_KILL_SOLDIERS_COUNT. */
    class S2C_WAR_KILL_SOLDIERS_COUNT implements IS2C_WAR_KILL_SOLDIERS_COUNT {

        /**
         * Constructs a new S2C_WAR_KILL_SOLDIERS_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_KILL_SOLDIERS_COUNT);

        /** S2C_WAR_KILL_SOLDIERS_COUNT battleId. */
        public battleId: number;

        /** S2C_WAR_KILL_SOLDIERS_COUNT killSoldiersCount. */
        public killSoldiersCount: number;

        /**
         * Encodes the specified S2C_WAR_KILL_SOLDIERS_COUNT message. Does not implicitly {@link gameProto.S2C_WAR_KILL_SOLDIERS_COUNT.verify|verify} messages.
         * @param message S2C_WAR_KILL_SOLDIERS_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_KILL_SOLDIERS_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_KILL_SOLDIERS_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_KILL_SOLDIERS_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_KILL_SOLDIERS_COUNT;
    }

    /** Properties of a S2C_WAR_OVER_HP. */
    interface IS2C_WAR_OVER_HP {

        /** S2C_WAR_OVER_HP battleId */
        battleId: number;

        /** S2C_WAR_OVER_HP attCountHp */
        attCountHp: number;

        /** S2C_WAR_OVER_HP defCountHp */
        defCountHp: number;
    }

    /** Represents a S2C_WAR_OVER_HP. */
    class S2C_WAR_OVER_HP implements IS2C_WAR_OVER_HP {

        /**
         * Constructs a new S2C_WAR_OVER_HP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WAR_OVER_HP);

        /** S2C_WAR_OVER_HP battleId. */
        public battleId: number;

        /** S2C_WAR_OVER_HP attCountHp. */
        public attCountHp: number;

        /** S2C_WAR_OVER_HP defCountHp. */
        public defCountHp: number;

        /**
         * Encodes the specified S2C_WAR_OVER_HP message. Does not implicitly {@link gameProto.S2C_WAR_OVER_HP.verify|verify} messages.
         * @param message S2C_WAR_OVER_HP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WAR_OVER_HP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WAR_OVER_HP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WAR_OVER_HP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WAR_OVER_HP;
    }

    /** Properties of an AttDefOutline. */
    interface IAttDefOutline {

        /** AttDefOutline surplusSoldiersCount */
        surplusSoldiersCount: number;

        /** AttDefOutline lossSoldiersCount */
        lossSoldiersCount: number;

        /** AttDefOutline countryId */
        countryId: number;
    }

    /** Represents an AttDefOutline. */
    class AttDefOutline implements IAttDefOutline {

        /**
         * Constructs a new AttDefOutline.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAttDefOutline);

        /** AttDefOutline surplusSoldiersCount. */
        public surplusSoldiersCount: number;

        /** AttDefOutline lossSoldiersCount. */
        public lossSoldiersCount: number;

        /** AttDefOutline countryId. */
        public countryId: number;

        /**
         * Encodes the specified AttDefOutline message. Does not implicitly {@link gameProto.AttDefOutline.verify|verify} messages.
         * @param message AttDefOutline message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAttDefOutline, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AttDefOutline message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AttDefOutline
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AttDefOutline;
    }

    /** Properties of a MyTeamWar. */
    interface IMyTeamWar {

        /** MyTeamWar battleId */
        battleId: number;

        /** MyTeamWar teamId */
        teamId: number;
    }

    /** Represents a MyTeamWar. */
    class MyTeamWar implements IMyTeamWar {

        /**
         * Constructs a new MyTeamWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMyTeamWar);

        /** MyTeamWar battleId. */
        public battleId: number;

        /** MyTeamWar teamId. */
        public teamId: number;

        /**
         * Encodes the specified MyTeamWar message. Does not implicitly {@link gameProto.MyTeamWar.verify|verify} messages.
         * @param message MyTeamWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMyTeamWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MyTeamWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MyTeamWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MyTeamWar;
    }

    /** Properties of a S2C_CITY_WAR_GO. */
    interface IS2C_CITY_WAR_GO {

        /** S2C_CITY_WAR_GO state */
        state: number;

        /** S2C_CITY_WAR_GO countDownTime */
        countDownTime: number;

        /** S2C_CITY_WAR_GO attName */
        attName: string;

        /** S2C_CITY_WAR_GO attDef */
        attDef: number;

        /** S2C_CITY_WAR_GO cityId */
        cityId: number;

        /** S2C_CITY_WAR_GO atkTeamCount */
        atkTeamCount: number;

        /** S2C_CITY_WAR_GO defTeamCount */
        defTeamCount: number;
    }

    /** Represents a S2C_CITY_WAR_GO. */
    class S2C_CITY_WAR_GO implements IS2C_CITY_WAR_GO {

        /**
         * Constructs a new S2C_CITY_WAR_GO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_GO);

        /** S2C_CITY_WAR_GO state. */
        public state: number;

        /** S2C_CITY_WAR_GO countDownTime. */
        public countDownTime: number;

        /** S2C_CITY_WAR_GO attName. */
        public attName: string;

        /** S2C_CITY_WAR_GO attDef. */
        public attDef: number;

        /** S2C_CITY_WAR_GO cityId. */
        public cityId: number;

        /** S2C_CITY_WAR_GO atkTeamCount. */
        public atkTeamCount: number;

        /** S2C_CITY_WAR_GO defTeamCount. */
        public defTeamCount: number;

        /**
         * Encodes the specified S2C_CITY_WAR_GO message. Does not implicitly {@link gameProto.S2C_CITY_WAR_GO.verify|verify} messages.
         * @param message S2C_CITY_WAR_GO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_GO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_GO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_GO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_GO;
    }

    /** Properties of a S2C_CITY_WAR_CONFRONTATION_LIST. */
    interface IS2C_CITY_WAR_CONFRONTATION_LIST {

        /** S2C_CITY_WAR_CONFRONTATION_LIST cityId */
        cityId: number;

        /** S2C_CITY_WAR_CONFRONTATION_LIST page */
        page: number;

        /** S2C_CITY_WAR_CONFRONTATION_LIST attData */
        attData: gameProto.IAttDefOutline;

        /** S2C_CITY_WAR_CONFRONTATION_LIST defData */
        defData: gameProto.IAttDefOutline;

        /** S2C_CITY_WAR_CONFRONTATION_LIST attPlayerWarData */
        attPlayerWarData?: (gameProto.IPlayerWarData[]|null);

        /** S2C_CITY_WAR_CONFRONTATION_LIST defPlayerWarData */
        defPlayerWarData?: (gameProto.IPlayerWarData[]|null);

        /** S2C_CITY_WAR_CONFRONTATION_LIST order */
        order?: (number|null);
    }

    /** Represents a S2C_CITY_WAR_CONFRONTATION_LIST. */
    class S2C_CITY_WAR_CONFRONTATION_LIST implements IS2C_CITY_WAR_CONFRONTATION_LIST {

        /**
         * Constructs a new S2C_CITY_WAR_CONFRONTATION_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_CONFRONTATION_LIST);

        /** S2C_CITY_WAR_CONFRONTATION_LIST cityId. */
        public cityId: number;

        /** S2C_CITY_WAR_CONFRONTATION_LIST page. */
        public page: number;

        /** S2C_CITY_WAR_CONFRONTATION_LIST attData. */
        public attData: gameProto.IAttDefOutline;

        /** S2C_CITY_WAR_CONFRONTATION_LIST defData. */
        public defData: gameProto.IAttDefOutline;

        /** S2C_CITY_WAR_CONFRONTATION_LIST attPlayerWarData. */
        public attPlayerWarData: gameProto.IPlayerWarData[];

        /** S2C_CITY_WAR_CONFRONTATION_LIST defPlayerWarData. */
        public defPlayerWarData: gameProto.IPlayerWarData[];

        /** S2C_CITY_WAR_CONFRONTATION_LIST order. */
        public order: number;

        /**
         * Encodes the specified S2C_CITY_WAR_CONFRONTATION_LIST message. Does not implicitly {@link gameProto.S2C_CITY_WAR_CONFRONTATION_LIST.verify|verify} messages.
         * @param message S2C_CITY_WAR_CONFRONTATION_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_CONFRONTATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_CONFRONTATION_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_CONFRONTATION_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_CONFRONTATION_LIST;
    }

    /** Properties of a S2C_CITY_WATCH_WAR_TEAM. */
    interface IS2C_CITY_WATCH_WAR_TEAM {

        /** S2C_CITY_WATCH_WAR_TEAM cityId */
        cityId: number;

        /** S2C_CITY_WATCH_WAR_TEAM playerId */
        playerId: number;

        /** S2C_CITY_WATCH_WAR_TEAM teamId */
        teamId: number;

        /** S2C_CITY_WATCH_WAR_TEAM battleId */
        battleId: number;

        /** S2C_CITY_WATCH_WAR_TEAM state */
        state: number;
    }

    /** Represents a S2C_CITY_WATCH_WAR_TEAM. */
    class S2C_CITY_WATCH_WAR_TEAM implements IS2C_CITY_WATCH_WAR_TEAM {

        /**
         * Constructs a new S2C_CITY_WATCH_WAR_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WATCH_WAR_TEAM);

        /** S2C_CITY_WATCH_WAR_TEAM cityId. */
        public cityId: number;

        /** S2C_CITY_WATCH_WAR_TEAM playerId. */
        public playerId: number;

        /** S2C_CITY_WATCH_WAR_TEAM teamId. */
        public teamId: number;

        /** S2C_CITY_WATCH_WAR_TEAM battleId. */
        public battleId: number;

        /** S2C_CITY_WATCH_WAR_TEAM state. */
        public state: number;

        /**
         * Encodes the specified S2C_CITY_WATCH_WAR_TEAM message. Does not implicitly {@link gameProto.S2C_CITY_WATCH_WAR_TEAM.verify|verify} messages.
         * @param message S2C_CITY_WATCH_WAR_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WATCH_WAR_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WATCH_WAR_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WATCH_WAR_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WATCH_WAR_TEAM;
    }

    /** Properties of a S2C_CITY_WAR_MYTEAM. */
    interface IS2C_CITY_WAR_MYTEAM {

        /** S2C_CITY_WAR_MYTEAM cityId */
        cityId: number;

        /** S2C_CITY_WAR_MYTEAM playerId */
        playerId: number;

        /** S2C_CITY_WAR_MYTEAM myTeamWar */
        myTeamWar?: (gameProto.IMyTeamWar[]|null);
    }

    /** Represents a S2C_CITY_WAR_MYTEAM. */
    class S2C_CITY_WAR_MYTEAM implements IS2C_CITY_WAR_MYTEAM {

        /**
         * Constructs a new S2C_CITY_WAR_MYTEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_MYTEAM);

        /** S2C_CITY_WAR_MYTEAM cityId. */
        public cityId: number;

        /** S2C_CITY_WAR_MYTEAM playerId. */
        public playerId: number;

        /** S2C_CITY_WAR_MYTEAM myTeamWar. */
        public myTeamWar: gameProto.IMyTeamWar[];

        /**
         * Encodes the specified S2C_CITY_WAR_MYTEAM message. Does not implicitly {@link gameProto.S2C_CITY_WAR_MYTEAM.verify|verify} messages.
         * @param message S2C_CITY_WAR_MYTEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_MYTEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_MYTEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_MYTEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_MYTEAM;
    }

    /** Properties of a S2C_CITY_ITEM_COUNT. */
    interface IS2C_CITY_ITEM_COUNT {

        /** S2C_CITY_ITEM_COUNT cityId */
        cityId: number;

        /** S2C_CITY_ITEM_COUNT atkTeamCount */
        atkTeamCount: number;

        /** S2C_CITY_ITEM_COUNT defTeamCount */
        defTeamCount: number;
    }

    /** Represents a S2C_CITY_ITEM_COUNT. */
    class S2C_CITY_ITEM_COUNT implements IS2C_CITY_ITEM_COUNT {

        /**
         * Constructs a new S2C_CITY_ITEM_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_ITEM_COUNT);

        /** S2C_CITY_ITEM_COUNT cityId. */
        public cityId: number;

        /** S2C_CITY_ITEM_COUNT atkTeamCount. */
        public atkTeamCount: number;

        /** S2C_CITY_ITEM_COUNT defTeamCount. */
        public defTeamCount: number;

        /**
         * Encodes the specified S2C_CITY_ITEM_COUNT message. Does not implicitly {@link gameProto.S2C_CITY_ITEM_COUNT.verify|verify} messages.
         * @param message S2C_CITY_ITEM_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_ITEM_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_ITEM_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_ITEM_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_ITEM_COUNT;
    }

    /** Properties of a PersonalBossInfo. */
    interface IPersonalBossInfo {

        /** PersonalBossInfo bossId */
        bossId: number;

        /** PersonalBossInfo freeCount */
        freeCount: number;

        /** PersonalBossInfo buyCount */
        buyCount: number;
    }

    /** Represents a PersonalBossInfo. */
    class PersonalBossInfo implements IPersonalBossInfo {

        /**
         * Constructs a new PersonalBossInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPersonalBossInfo);

        /** PersonalBossInfo bossId. */
        public bossId: number;

        /** PersonalBossInfo freeCount. */
        public freeCount: number;

        /** PersonalBossInfo buyCount. */
        public buyCount: number;

        /**
         * Encodes the specified PersonalBossInfo message. Does not implicitly {@link gameProto.PersonalBossInfo.verify|verify} messages.
         * @param message PersonalBossInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPersonalBossInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PersonalBossInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PersonalBossInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PersonalBossInfo;
    }

    /** Properties of a RankBossInfo. */
    interface IRankBossInfo {

        /** RankBossInfo bossId */
        bossId: number;

        /** RankBossInfo bossHp */
        bossHp: number;

        /** RankBossInfo bossRankingListInfo */
        bossRankingListInfo?: (gameProto.IBossRankingListInfo[]|null);

        /** RankBossInfo bossReviveTime */
        bossReviveTime: number;

        /** RankBossInfo hurt */
        hurt: number;
    }

    /** Represents a RankBossInfo. */
    class RankBossInfo implements IRankBossInfo {

        /**
         * Constructs a new RankBossInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRankBossInfo);

        /** RankBossInfo bossId. */
        public bossId: number;

        /** RankBossInfo bossHp. */
        public bossHp: number;

        /** RankBossInfo bossRankingListInfo. */
        public bossRankingListInfo: gameProto.IBossRankingListInfo[];

        /** RankBossInfo bossReviveTime. */
        public bossReviveTime: number;

        /** RankBossInfo hurt. */
        public hurt: number;

        /**
         * Encodes the specified RankBossInfo message. Does not implicitly {@link gameProto.RankBossInfo.verify|verify} messages.
         * @param message RankBossInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRankBossInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankBossInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankBossInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RankBossInfo;
    }

    /** Properties of a WorldBossInfo. */
    interface IWorldBossInfo {

        /** WorldBossInfo bossId */
        bossId: number;

        /** WorldBossInfo bossHp */
        bossHp: number;

        /** WorldBossInfo bossRankingListInfo */
        bossRankingListInfo?: (gameProto.IBossRankingListInfo[]|null);

        /** WorldBossInfo hurt */
        hurt: number;
    }

    /** Represents a WorldBossInfo. */
    class WorldBossInfo implements IWorldBossInfo {

        /**
         * Constructs a new WorldBossInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWorldBossInfo);

        /** WorldBossInfo bossId. */
        public bossId: number;

        /** WorldBossInfo bossHp. */
        public bossHp: number;

        /** WorldBossInfo bossRankingListInfo. */
        public bossRankingListInfo: gameProto.IBossRankingListInfo[];

        /** WorldBossInfo hurt. */
        public hurt: number;

        /**
         * Encodes the specified WorldBossInfo message. Does not implicitly {@link gameProto.WorldBossInfo.verify|verify} messages.
         * @param message WorldBossInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWorldBossInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WorldBossInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WorldBossInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WorldBossInfo;
    }

    /** Properties of a BossRankingListInfo. */
    interface IBossRankingListInfo {

        /** BossRankingListInfo ranking */
        ranking: number;

        /** BossRankingListInfo name */
        name: string;

        /** BossRankingListInfo fight */
        fight: number;

        /** BossRankingListInfo hurt */
        hurt: number;

        /** BossRankingListInfo playerId */
        playerId: number;

        /** BossRankingListInfo countryId */
        countryId: number;
    }

    /** Represents a BossRankingListInfo. */
    class BossRankingListInfo implements IBossRankingListInfo {

        /**
         * Constructs a new BossRankingListInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBossRankingListInfo);

        /** BossRankingListInfo ranking. */
        public ranking: number;

        /** BossRankingListInfo name. */
        public name: string;

        /** BossRankingListInfo fight. */
        public fight: number;

        /** BossRankingListInfo hurt. */
        public hurt: number;

        /** BossRankingListInfo playerId. */
        public playerId: number;

        /** BossRankingListInfo countryId. */
        public countryId: number;

        /**
         * Encodes the specified BossRankingListInfo message. Does not implicitly {@link gameProto.BossRankingListInfo.verify|verify} messages.
         * @param message BossRankingListInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBossRankingListInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BossRankingListInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BossRankingListInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BossRankingListInfo;
    }

    /** Properties of a C2S_GET_BOSS. */
    interface IC2S_GET_BOSS {
    }

    /** Represents a C2S_GET_BOSS. */
    class C2S_GET_BOSS implements IC2S_GET_BOSS {

        /**
         * Constructs a new C2S_GET_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_BOSS);

        /**
         * Encodes the specified C2S_GET_BOSS message. Does not implicitly {@link gameProto.C2S_GET_BOSS.verify|verify} messages.
         * @param message C2S_GET_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_BOSS;
    }

    /** Properties of a S2C_GET_BOSS. */
    interface IS2C_GET_BOSS {

        /** S2C_GET_BOSS personalBossInfo */
        personalBossInfo?: (gameProto.IPersonalBossInfo[]|null);

        /** S2C_GET_BOSS rankBossInfo */
        rankBossInfo?: (gameProto.IRankBossInfo[]|null);

        /** S2C_GET_BOSS rankBossPlayerStartReviveTime */
        rankBossPlayerStartReviveTime: number;

        /** S2C_GET_BOSS rankBossPlayerEndReviveTime */
        rankBossPlayerEndReviveTime: number;

        /** S2C_GET_BOSS worldBossInfo */
        worldBossInfo?: (gameProto.IWorldBossInfo[]|null);

        /** S2C_GET_BOSS boxIds */
        boxIds?: (number[]|null);

        /** S2C_GET_BOSS worldSumHurt */
        worldSumHurt: number;
    }

    /** Represents a S2C_GET_BOSS. */
    class S2C_GET_BOSS implements IS2C_GET_BOSS {

        /**
         * Constructs a new S2C_GET_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_BOSS);

        /** S2C_GET_BOSS personalBossInfo. */
        public personalBossInfo: gameProto.IPersonalBossInfo[];

        /** S2C_GET_BOSS rankBossInfo. */
        public rankBossInfo: gameProto.IRankBossInfo[];

        /** S2C_GET_BOSS rankBossPlayerStartReviveTime. */
        public rankBossPlayerStartReviveTime: number;

        /** S2C_GET_BOSS rankBossPlayerEndReviveTime. */
        public rankBossPlayerEndReviveTime: number;

        /** S2C_GET_BOSS worldBossInfo. */
        public worldBossInfo: gameProto.IWorldBossInfo[];

        /** S2C_GET_BOSS boxIds. */
        public boxIds: number[];

        /** S2C_GET_BOSS worldSumHurt. */
        public worldSumHurt: number;

        /**
         * Encodes the specified S2C_GET_BOSS message. Does not implicitly {@link gameProto.S2C_GET_BOSS.verify|verify} messages.
         * @param message S2C_GET_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_BOSS;
    }

    /** Properties of a C2S_CHALLENGE_BOSS. */
    interface IC2S_CHALLENGE_BOSS {

        /** C2S_CHALLENGE_BOSS bossId */
        bossId: number;
    }

    /** Represents a C2S_CHALLENGE_BOSS. */
    class C2S_CHALLENGE_BOSS implements IC2S_CHALLENGE_BOSS {

        /**
         * Constructs a new C2S_CHALLENGE_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHALLENGE_BOSS);

        /** C2S_CHALLENGE_BOSS bossId. */
        public bossId: number;

        /**
         * Encodes the specified C2S_CHALLENGE_BOSS message. Does not implicitly {@link gameProto.C2S_CHALLENGE_BOSS.verify|verify} messages.
         * @param message C2S_CHALLENGE_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHALLENGE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHALLENGE_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHALLENGE_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHALLENGE_BOSS;
    }

    /** Properties of a S2C_CHALLENGE_BOSS. */
    interface IS2C_CHALLENGE_BOSS {

        /** S2C_CHALLENGE_BOSS success */
        success: boolean;

        /** S2C_CHALLENGE_BOSS valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** S2C_CHALLENGE_BOSS battleId */
        battleId: number;

        /** S2C_CHALLENGE_BOSS bossType */
        bossType: number;

        /** S2C_CHALLENGE_BOSS lastHit */
        lastHit?: (boolean|null);

        /** S2C_CHALLENGE_BOSS rank */
        rank?: (number|null);

        /** S2C_CHALLENGE_BOSS damage */
        damage?: (number|null);
    }

    /** Represents a S2C_CHALLENGE_BOSS. */
    class S2C_CHALLENGE_BOSS implements IS2C_CHALLENGE_BOSS {

        /**
         * Constructs a new S2C_CHALLENGE_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHALLENGE_BOSS);

        /** S2C_CHALLENGE_BOSS success. */
        public success: boolean;

        /** S2C_CHALLENGE_BOSS valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** S2C_CHALLENGE_BOSS battleId. */
        public battleId: number;

        /** S2C_CHALLENGE_BOSS bossType. */
        public bossType: number;

        /** S2C_CHALLENGE_BOSS lastHit. */
        public lastHit: boolean;

        /** S2C_CHALLENGE_BOSS rank. */
        public rank: number;

        /** S2C_CHALLENGE_BOSS damage. */
        public damage: number;

        /**
         * Encodes the specified S2C_CHALLENGE_BOSS message. Does not implicitly {@link gameProto.S2C_CHALLENGE_BOSS.verify|verify} messages.
         * @param message S2C_CHALLENGE_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHALLENGE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHALLENGE_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHALLENGE_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHALLENGE_BOSS;
    }

    /** Properties of a C2S_CLEAR_BOSS. */
    interface IC2S_CLEAR_BOSS {

        /** C2S_CLEAR_BOSS bossId */
        bossId: number;

        /** C2S_CLEAR_BOSS type */
        type: number;
    }

    /** Represents a C2S_CLEAR_BOSS. */
    class C2S_CLEAR_BOSS implements IC2S_CLEAR_BOSS {

        /**
         * Constructs a new C2S_CLEAR_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CLEAR_BOSS);

        /** C2S_CLEAR_BOSS bossId. */
        public bossId: number;

        /** C2S_CLEAR_BOSS type. */
        public type: number;

        /**
         * Encodes the specified C2S_CLEAR_BOSS message. Does not implicitly {@link gameProto.C2S_CLEAR_BOSS.verify|verify} messages.
         * @param message C2S_CLEAR_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CLEAR_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CLEAR_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CLEAR_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CLEAR_BOSS;
    }

    /** Properties of a S2C_CLEAR_BOSS. */
    interface IS2C_CLEAR_BOSS {

        /** S2C_CLEAR_BOSS personalBossInfo */
        personalBossInfo: gameProto.IPersonalBossInfo;

        /** S2C_CLEAR_BOSS valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_CLEAR_BOSS. */
    class S2C_CLEAR_BOSS implements IS2C_CLEAR_BOSS {

        /**
         * Constructs a new S2C_CLEAR_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CLEAR_BOSS);

        /** S2C_CLEAR_BOSS personalBossInfo. */
        public personalBossInfo: gameProto.IPersonalBossInfo;

        /** S2C_CLEAR_BOSS valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_CLEAR_BOSS message. Does not implicitly {@link gameProto.S2C_CLEAR_BOSS.verify|verify} messages.
         * @param message S2C_CLEAR_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CLEAR_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CLEAR_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CLEAR_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CLEAR_BOSS;
    }

    /** Properties of a C2S_BUY_BOSS_CHALLENGE_COUNT. */
    interface IC2S_BUY_BOSS_CHALLENGE_COUNT {

        /** C2S_BUY_BOSS_CHALLENGE_COUNT type */
        type: number;
    }

    /** Represents a C2S_BUY_BOSS_CHALLENGE_COUNT. */
    class C2S_BUY_BOSS_CHALLENGE_COUNT implements IC2S_BUY_BOSS_CHALLENGE_COUNT {

        /**
         * Constructs a new C2S_BUY_BOSS_CHALLENGE_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUY_BOSS_CHALLENGE_COUNT);

        /** C2S_BUY_BOSS_CHALLENGE_COUNT type. */
        public type: number;

        /**
         * Encodes the specified C2S_BUY_BOSS_CHALLENGE_COUNT message. Does not implicitly {@link gameProto.C2S_BUY_BOSS_CHALLENGE_COUNT.verify|verify} messages.
         * @param message C2S_BUY_BOSS_CHALLENGE_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUY_BOSS_CHALLENGE_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUY_BOSS_CHALLENGE_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUY_BOSS_CHALLENGE_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUY_BOSS_CHALLENGE_COUNT;
    }

    /** Properties of a S2C_BUY_BOSS_CHALLENGE_COUNT. */
    interface IS2C_BUY_BOSS_CHALLENGE_COUNT {

        /** S2C_BUY_BOSS_CHALLENGE_COUNT buyCount */
        buyCount: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT challengeCount */
        challengeCount: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT type */
        type: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankBossPlayerStartReviveTime */
        rankBossPlayerStartReviveTime: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankBossPlayerEndReviveTime */
        rankBossPlayerEndReviveTime: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankingBossFreeBuyCount */
        rankingBossFreeBuyCount: number;
    }

    /** Represents a S2C_BUY_BOSS_CHALLENGE_COUNT. */
    class S2C_BUY_BOSS_CHALLENGE_COUNT implements IS2C_BUY_BOSS_CHALLENGE_COUNT {

        /**
         * Constructs a new S2C_BUY_BOSS_CHALLENGE_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUY_BOSS_CHALLENGE_COUNT);

        /** S2C_BUY_BOSS_CHALLENGE_COUNT buyCount. */
        public buyCount: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT challengeCount. */
        public challengeCount: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT type. */
        public type: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankBossPlayerStartReviveTime. */
        public rankBossPlayerStartReviveTime: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankBossPlayerEndReviveTime. */
        public rankBossPlayerEndReviveTime: number;

        /** S2C_BUY_BOSS_CHALLENGE_COUNT rankingBossFreeBuyCount. */
        public rankingBossFreeBuyCount: number;

        /**
         * Encodes the specified S2C_BUY_BOSS_CHALLENGE_COUNT message. Does not implicitly {@link gameProto.S2C_BUY_BOSS_CHALLENGE_COUNT.verify|verify} messages.
         * @param message S2C_BUY_BOSS_CHALLENGE_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUY_BOSS_CHALLENGE_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUY_BOSS_CHALLENGE_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUY_BOSS_CHALLENGE_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUY_BOSS_CHALLENGE_COUNT;
    }

    /** Properties of a S2C_BOSS_IS_DIED. */
    interface IS2C_BOSS_IS_DIED {

        /** S2C_BOSS_IS_DIED bossId */
        bossId: number;
    }

    /** Represents a S2C_BOSS_IS_DIED. */
    class S2C_BOSS_IS_DIED implements IS2C_BOSS_IS_DIED {

        /**
         * Constructs a new S2C_BOSS_IS_DIED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BOSS_IS_DIED);

        /** S2C_BOSS_IS_DIED bossId. */
        public bossId: number;

        /**
         * Encodes the specified S2C_BOSS_IS_DIED message. Does not implicitly {@link gameProto.S2C_BOSS_IS_DIED.verify|verify} messages.
         * @param message S2C_BOSS_IS_DIED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BOSS_IS_DIED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BOSS_IS_DIED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BOSS_IS_DIED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BOSS_IS_DIED;
    }

    /** Properties of a C2S_RECEIVE_BOSS_BOX. */
    interface IC2S_RECEIVE_BOSS_BOX {

        /** C2S_RECEIVE_BOSS_BOX boxId */
        boxId: number;
    }

    /** Represents a C2S_RECEIVE_BOSS_BOX. */
    class C2S_RECEIVE_BOSS_BOX implements IC2S_RECEIVE_BOSS_BOX {

        /**
         * Constructs a new C2S_RECEIVE_BOSS_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RECEIVE_BOSS_BOX);

        /** C2S_RECEIVE_BOSS_BOX boxId. */
        public boxId: number;

        /**
         * Encodes the specified C2S_RECEIVE_BOSS_BOX message. Does not implicitly {@link gameProto.C2S_RECEIVE_BOSS_BOX.verify|verify} messages.
         * @param message C2S_RECEIVE_BOSS_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RECEIVE_BOSS_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RECEIVE_BOSS_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RECEIVE_BOSS_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RECEIVE_BOSS_BOX;
    }

    /** Properties of a S2C_RECEIVE_BOSS_BOX. */
    interface IS2C_RECEIVE_BOSS_BOX {

        /** S2C_RECEIVE_BOSS_BOX valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** S2C_RECEIVE_BOSS_BOX boxIds */
        boxIds?: (number[]|null);
    }

    /** Represents a S2C_RECEIVE_BOSS_BOX. */
    class S2C_RECEIVE_BOSS_BOX implements IS2C_RECEIVE_BOSS_BOX {

        /**
         * Constructs a new S2C_RECEIVE_BOSS_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RECEIVE_BOSS_BOX);

        /** S2C_RECEIVE_BOSS_BOX valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** S2C_RECEIVE_BOSS_BOX boxIds. */
        public boxIds: number[];

        /**
         * Encodes the specified S2C_RECEIVE_BOSS_BOX message. Does not implicitly {@link gameProto.S2C_RECEIVE_BOSS_BOX.verify|verify} messages.
         * @param message S2C_RECEIVE_BOSS_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RECEIVE_BOSS_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RECEIVE_BOSS_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RECEIVE_BOSS_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RECEIVE_BOSS_BOX;
    }

    /** Properties of a CDkeyList. */
    interface ICDkeyList {

        /** CDkeyList cdkeyinfos */
        cdkeyinfos?: (gameProto.ICDkeyInfo[]|null);
    }

    /** Represents a CDkeyList. */
    class CDkeyList implements ICDkeyList {

        /**
         * Constructs a new CDkeyList.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICDkeyList);

        /** CDkeyList cdkeyinfos. */
        public cdkeyinfos: gameProto.ICDkeyInfo[];

        /**
         * Encodes the specified CDkeyList message. Does not implicitly {@link gameProto.CDkeyList.verify|verify} messages.
         * @param message CDkeyList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICDkeyList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CDkeyList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CDkeyList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CDkeyList;
    }

    /** Properties of a CDkeyInfo. */
    interface ICDkeyInfo {

        /** CDkeyInfo activityId */
        activityId: number;

        /** CDkeyInfo cdKey */
        cdKey: string;

        /** CDkeyInfo createDate */
        createDate: number;

        /** CDkeyInfo drawDate */
        drawDate: number;

        /** CDkeyInfo exChange */
        exChange: boolean;
    }

    /** Represents a CDkeyInfo. */
    class CDkeyInfo implements ICDkeyInfo {

        /**
         * Constructs a new CDkeyInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICDkeyInfo);

        /** CDkeyInfo activityId. */
        public activityId: number;

        /** CDkeyInfo cdKey. */
        public cdKey: string;

        /** CDkeyInfo createDate. */
        public createDate: number;

        /** CDkeyInfo drawDate. */
        public drawDate: number;

        /** CDkeyInfo exChange. */
        public exChange: boolean;

        /**
         * Encodes the specified CDkeyInfo message. Does not implicitly {@link gameProto.CDkeyInfo.verify|verify} messages.
         * @param message CDkeyInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICDkeyInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CDkeyInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CDkeyInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CDkeyInfo;
    }

    /** Properties of a C2S_GET_ACTIVITY_CDKEY. */
    interface IC2S_GET_ACTIVITY_CDKEY {

        /** C2S_GET_ACTIVITY_CDKEY id */
        id: number;
    }

    /** Represents a C2S_GET_ACTIVITY_CDKEY. */
    class C2S_GET_ACTIVITY_CDKEY implements IC2S_GET_ACTIVITY_CDKEY {

        /**
         * Constructs a new C2S_GET_ACTIVITY_CDKEY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_ACTIVITY_CDKEY);

        /** C2S_GET_ACTIVITY_CDKEY id. */
        public id: number;

        /**
         * Encodes the specified C2S_GET_ACTIVITY_CDKEY message. Does not implicitly {@link gameProto.C2S_GET_ACTIVITY_CDKEY.verify|verify} messages.
         * @param message C2S_GET_ACTIVITY_CDKEY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_ACTIVITY_CDKEY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_ACTIVITY_CDKEY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_ACTIVITY_CDKEY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_ACTIVITY_CDKEY;
    }

    /** Properties of a S2C_GET_ACTIVITY_CDKEY. */
    interface IS2C_GET_ACTIVITY_CDKEY {

        /** S2C_GET_ACTIVITY_CDKEY code */
        code: number;

        /** S2C_GET_ACTIVITY_CDKEY id */
        id: number;

        /** S2C_GET_ACTIVITY_CDKEY cdKey */
        cdKey: string;
    }

    /** Represents a S2C_GET_ACTIVITY_CDKEY. */
    class S2C_GET_ACTIVITY_CDKEY implements IS2C_GET_ACTIVITY_CDKEY {

        /**
         * Constructs a new S2C_GET_ACTIVITY_CDKEY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_ACTIVITY_CDKEY);

        /** S2C_GET_ACTIVITY_CDKEY code. */
        public code: number;

        /** S2C_GET_ACTIVITY_CDKEY id. */
        public id: number;

        /** S2C_GET_ACTIVITY_CDKEY cdKey. */
        public cdKey: string;

        /**
         * Encodes the specified S2C_GET_ACTIVITY_CDKEY message. Does not implicitly {@link gameProto.S2C_GET_ACTIVITY_CDKEY.verify|verify} messages.
         * @param message S2C_GET_ACTIVITY_CDKEY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_ACTIVITY_CDKEY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_ACTIVITY_CDKEY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_ACTIVITY_CDKEY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_ACTIVITY_CDKEY;
    }

    /** Properties of a C2S_GET_ACTIVITY_CDKEY_REWARD. */
    interface IC2S_GET_ACTIVITY_CDKEY_REWARD {

        /** C2S_GET_ACTIVITY_CDKEY_REWARD cdKey */
        cdKey: string;
    }

    /** Represents a C2S_GET_ACTIVITY_CDKEY_REWARD. */
    class C2S_GET_ACTIVITY_CDKEY_REWARD implements IC2S_GET_ACTIVITY_CDKEY_REWARD {

        /**
         * Constructs a new C2S_GET_ACTIVITY_CDKEY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_ACTIVITY_CDKEY_REWARD);

        /** C2S_GET_ACTIVITY_CDKEY_REWARD cdKey. */
        public cdKey: string;

        /**
         * Encodes the specified C2S_GET_ACTIVITY_CDKEY_REWARD message. Does not implicitly {@link gameProto.C2S_GET_ACTIVITY_CDKEY_REWARD.verify|verify} messages.
         * @param message C2S_GET_ACTIVITY_CDKEY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_ACTIVITY_CDKEY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_ACTIVITY_CDKEY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_ACTIVITY_CDKEY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_ACTIVITY_CDKEY_REWARD;
    }

    /** Properties of a S2C_GET_ACTIVITY_CDKEY_REWARD. */
    interface IS2C_GET_ACTIVITY_CDKEY_REWARD {

        /** S2C_GET_ACTIVITY_CDKEY_REWARD code */
        code: number;

        /** S2C_GET_ACTIVITY_CDKEY_REWARD reward */
        reward?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_GET_ACTIVITY_CDKEY_REWARD. */
    class S2C_GET_ACTIVITY_CDKEY_REWARD implements IS2C_GET_ACTIVITY_CDKEY_REWARD {

        /**
         * Constructs a new S2C_GET_ACTIVITY_CDKEY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_ACTIVITY_CDKEY_REWARD);

        /** S2C_GET_ACTIVITY_CDKEY_REWARD code. */
        public code: number;

        /** S2C_GET_ACTIVITY_CDKEY_REWARD reward. */
        public reward: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_GET_ACTIVITY_CDKEY_REWARD message. Does not implicitly {@link gameProto.S2C_GET_ACTIVITY_CDKEY_REWARD.verify|verify} messages.
         * @param message S2C_GET_ACTIVITY_CDKEY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_ACTIVITY_CDKEY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_ACTIVITY_CDKEY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_ACTIVITY_CDKEY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_ACTIVITY_CDKEY_REWARD;
    }

    /** Properties of a C2S_GET_ACTIVITY_CDKEY_LIST. */
    interface IC2S_GET_ACTIVITY_CDKEY_LIST {
    }

    /** Represents a C2S_GET_ACTIVITY_CDKEY_LIST. */
    class C2S_GET_ACTIVITY_CDKEY_LIST implements IC2S_GET_ACTIVITY_CDKEY_LIST {

        /**
         * Constructs a new C2S_GET_ACTIVITY_CDKEY_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_ACTIVITY_CDKEY_LIST);

        /**
         * Encodes the specified C2S_GET_ACTIVITY_CDKEY_LIST message. Does not implicitly {@link gameProto.C2S_GET_ACTIVITY_CDKEY_LIST.verify|verify} messages.
         * @param message C2S_GET_ACTIVITY_CDKEY_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_ACTIVITY_CDKEY_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_ACTIVITY_CDKEY_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_ACTIVITY_CDKEY_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_ACTIVITY_CDKEY_LIST;
    }

    /** Properties of a S2C_GET_ACTIVITY_CDKEY_LIST. */
    interface IS2C_GET_ACTIVITY_CDKEY_LIST {

        /** S2C_GET_ACTIVITY_CDKEY_LIST code */
        code: number;

        /** S2C_GET_ACTIVITY_CDKEY_LIST cdkeyList */
        cdkeyList?: (gameProto.ICDkeyList[]|null);
    }

    /** Represents a S2C_GET_ACTIVITY_CDKEY_LIST. */
    class S2C_GET_ACTIVITY_CDKEY_LIST implements IS2C_GET_ACTIVITY_CDKEY_LIST {

        /**
         * Constructs a new S2C_GET_ACTIVITY_CDKEY_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_ACTIVITY_CDKEY_LIST);

        /** S2C_GET_ACTIVITY_CDKEY_LIST code. */
        public code: number;

        /** S2C_GET_ACTIVITY_CDKEY_LIST cdkeyList. */
        public cdkeyList: gameProto.ICDkeyList[];

        /**
         * Encodes the specified S2C_GET_ACTIVITY_CDKEY_LIST message. Does not implicitly {@link gameProto.S2C_GET_ACTIVITY_CDKEY_LIST.verify|verify} messages.
         * @param message S2C_GET_ACTIVITY_CDKEY_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_ACTIVITY_CDKEY_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_ACTIVITY_CDKEY_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_ACTIVITY_CDKEY_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_ACTIVITY_CDKEY_LIST;
    }

    /** Properties of a C2S_CHAT_LOG_PUSH. */
    interface IC2S_CHAT_LOG_PUSH {

        /** C2S_CHAT_LOG_PUSH platformId */
        platformId?: (number|null);

        /** C2S_CHAT_LOG_PUSH serverId */
        serverId?: (number|null);

        /** C2S_CHAT_LOG_PUSH player_id */
        player_id?: (number|null);

        /** C2S_CHAT_LOG_PUSH nick_name */
        nick_name?: (string|null);

        /** C2S_CHAT_LOG_PUSH vip_lv */
        vip_lv?: (number|null);

        /** C2S_CHAT_LOG_PUSH country_id */
        country_id?: (number|null);

        /** C2S_CHAT_LOG_PUSH country */
        country?: (string|null);

        /** C2S_CHAT_LOG_PUSH to_player_id */
        to_player_id?: (number|null);

        /** C2S_CHAT_LOG_PUSH to_nick_name */
        to_nick_name?: (string|null);

        /** C2S_CHAT_LOG_PUSH chat_type */
        chat_type?: (number|null);

        /** C2S_CHAT_LOG_PUSH chat_type_name */
        chat_type_name?: (string|null);

        /** C2S_CHAT_LOG_PUSH content */
        content?: (string|null);

        /** C2S_CHAT_LOG_PUSH time */
        time?: (number|null);

        /** C2S_CHAT_LOG_PUSH level */
        level?: (number|null);

        /** C2S_CHAT_LOG_PUSH fight */
        fight?: (number|null);

        /** C2S_CHAT_LOG_PUSH to_level */
        to_level?: (number|null);

        /** C2S_CHAT_LOG_PUSH to_vip_lv */
        to_vip_lv?: (number|null);

        /** C2S_CHAT_LOG_PUSH to_fight */
        to_fight?: (number|null);

        /** C2S_CHAT_LOG_PUSH eye_is_open */
        eye_is_open?: (number|null);
    }

    /** Represents a C2S_CHAT_LOG_PUSH. */
    class C2S_CHAT_LOG_PUSH implements IC2S_CHAT_LOG_PUSH {

        /**
         * Constructs a new C2S_CHAT_LOG_PUSH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_LOG_PUSH);

        /** C2S_CHAT_LOG_PUSH platformId. */
        public platformId: number;

        /** C2S_CHAT_LOG_PUSH serverId. */
        public serverId: number;

        /** C2S_CHAT_LOG_PUSH player_id. */
        public player_id: number;

        /** C2S_CHAT_LOG_PUSH nick_name. */
        public nick_name: string;

        /** C2S_CHAT_LOG_PUSH vip_lv. */
        public vip_lv: number;

        /** C2S_CHAT_LOG_PUSH country_id. */
        public country_id: number;

        /** C2S_CHAT_LOG_PUSH country. */
        public country: string;

        /** C2S_CHAT_LOG_PUSH to_player_id. */
        public to_player_id: number;

        /** C2S_CHAT_LOG_PUSH to_nick_name. */
        public to_nick_name: string;

        /** C2S_CHAT_LOG_PUSH chat_type. */
        public chat_type: number;

        /** C2S_CHAT_LOG_PUSH chat_type_name. */
        public chat_type_name: string;

        /** C2S_CHAT_LOG_PUSH content. */
        public content: string;

        /** C2S_CHAT_LOG_PUSH time. */
        public time: number;

        /** C2S_CHAT_LOG_PUSH level. */
        public level: number;

        /** C2S_CHAT_LOG_PUSH fight. */
        public fight: number;

        /** C2S_CHAT_LOG_PUSH to_level. */
        public to_level: number;

        /** C2S_CHAT_LOG_PUSH to_vip_lv. */
        public to_vip_lv: number;

        /** C2S_CHAT_LOG_PUSH to_fight. */
        public to_fight: number;

        /** C2S_CHAT_LOG_PUSH eye_is_open. */
        public eye_is_open: number;

        /**
         * Encodes the specified C2S_CHAT_LOG_PUSH message. Does not implicitly {@link gameProto.C2S_CHAT_LOG_PUSH.verify|verify} messages.
         * @param message C2S_CHAT_LOG_PUSH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_LOG_PUSH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_LOG_PUSH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_LOG_PUSH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_LOG_PUSH;
    }

    /** Properties of a MsgData. */
    interface IMsgData {

        /** MsgData headPortrait */
        headPortrait: gameProto.IHeadPortrait;

        /** MsgData msg */
        msg: string;

        /** MsgData time */
        time: number;

        /** MsgData msgType */
        msgType?: (number|null);
    }

    /** Represents a MsgData. */
    class MsgData implements IMsgData {

        /**
         * Constructs a new MsgData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMsgData);

        /** MsgData headPortrait. */
        public headPortrait: gameProto.IHeadPortrait;

        /** MsgData msg. */
        public msg: string;

        /** MsgData time. */
        public time: number;

        /** MsgData msgType. */
        public msgType: number;

        /**
         * Encodes the specified MsgData message. Does not implicitly {@link gameProto.MsgData.verify|verify} messages.
         * @param message MsgData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMsgData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MsgData;
    }

    /** Properties of a PlayerHeadPortrait. */
    interface IPlayerHeadPortrait {

        /** PlayerHeadPortrait headPortrait */
        headPortrait: gameProto.IHeadPortrait;

        /** PlayerHeadPortrait lastTime */
        lastTime: number;
    }

    /** Represents a PlayerHeadPortrait. */
    class PlayerHeadPortrait implements IPlayerHeadPortrait {

        /**
         * Constructs a new PlayerHeadPortrait.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerHeadPortrait);

        /** PlayerHeadPortrait headPortrait. */
        public headPortrait: gameProto.IHeadPortrait;

        /** PlayerHeadPortrait lastTime. */
        public lastTime: number;

        /**
         * Encodes the specified PlayerHeadPortrait message. Does not implicitly {@link gameProto.PlayerHeadPortrait.verify|verify} messages.
         * @param message PlayerHeadPortrait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerHeadPortrait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerHeadPortrait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerHeadPortrait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerHeadPortrait;
    }

    /** Properties of a C2S_CHAT_RECORD_LIST. */
    interface IC2S_CHAT_RECORD_LIST {
    }

    /** Represents a C2S_CHAT_RECORD_LIST. */
    class C2S_CHAT_RECORD_LIST implements IC2S_CHAT_RECORD_LIST {

        /**
         * Constructs a new C2S_CHAT_RECORD_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_RECORD_LIST);

        /**
         * Encodes the specified C2S_CHAT_RECORD_LIST message. Does not implicitly {@link gameProto.C2S_CHAT_RECORD_LIST.verify|verify} messages.
         * @param message C2S_CHAT_RECORD_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_RECORD_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_RECORD_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_RECORD_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_RECORD_LIST;
    }

    /** Properties of a S2C_CHAT_RECORD_LIST. */
    interface IS2C_CHAT_RECORD_LIST {

        /** S2C_CHAT_RECORD_LIST countryData */
        countryData?: (gameProto.IMsgData[]|null);

        /** S2C_CHAT_RECORD_LIST labourUnionData */
        labourUnionData?: (gameProto.IMsgData[]|null);
    }

    /** Represents a S2C_CHAT_RECORD_LIST. */
    class S2C_CHAT_RECORD_LIST implements IS2C_CHAT_RECORD_LIST {

        /**
         * Constructs a new S2C_CHAT_RECORD_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_RECORD_LIST);

        /** S2C_CHAT_RECORD_LIST countryData. */
        public countryData: gameProto.IMsgData[];

        /** S2C_CHAT_RECORD_LIST labourUnionData. */
        public labourUnionData: gameProto.IMsgData[];

        /**
         * Encodes the specified S2C_CHAT_RECORD_LIST message. Does not implicitly {@link gameProto.S2C_CHAT_RECORD_LIST.verify|verify} messages.
         * @param message S2C_CHAT_RECORD_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_RECORD_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_RECORD_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_RECORD_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_RECORD_LIST;
    }

    /** Properties of a C2S_CHAT_PUSH. */
    interface IC2S_CHAT_PUSH {

        /** C2S_CHAT_PUSH type */
        type: number;

        /** C2S_CHAT_PUSH msg */
        msg: string;

        /** C2S_CHAT_PUSH targetPlayerId */
        targetPlayerId?: (number|null);

        /** C2S_CHAT_PUSH msgType */
        msgType?: (number|null);
    }

    /** Represents a C2S_CHAT_PUSH. */
    class C2S_CHAT_PUSH implements IC2S_CHAT_PUSH {

        /**
         * Constructs a new C2S_CHAT_PUSH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_PUSH);

        /** C2S_CHAT_PUSH type. */
        public type: number;

        /** C2S_CHAT_PUSH msg. */
        public msg: string;

        /** C2S_CHAT_PUSH targetPlayerId. */
        public targetPlayerId: number;

        /** C2S_CHAT_PUSH msgType. */
        public msgType: number;

        /**
         * Encodes the specified C2S_CHAT_PUSH message. Does not implicitly {@link gameProto.C2S_CHAT_PUSH.verify|verify} messages.
         * @param message C2S_CHAT_PUSH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_PUSH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_PUSH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_PUSH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_PUSH;
    }

    /** Properties of a S2C_CHAT_PUSH. */
    interface IS2C_CHAT_PUSH {

        /** S2C_CHAT_PUSH type */
        type: number;

        /** S2C_CHAT_PUSH data */
        data: gameProto.IMsgData;

        /** S2C_CHAT_PUSH targetPlayerId */
        targetPlayerId?: (number|null);
    }

    /** Represents a S2C_CHAT_PUSH. */
    class S2C_CHAT_PUSH implements IS2C_CHAT_PUSH {

        /**
         * Constructs a new S2C_CHAT_PUSH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_PUSH);

        /** S2C_CHAT_PUSH type. */
        public type: number;

        /** S2C_CHAT_PUSH data. */
        public data: gameProto.IMsgData;

        /** S2C_CHAT_PUSH targetPlayerId. */
        public targetPlayerId: number;

        /**
         * Encodes the specified S2C_CHAT_PUSH message. Does not implicitly {@link gameProto.S2C_CHAT_PUSH.verify|verify} messages.
         * @param message S2C_CHAT_PUSH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_PUSH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_PUSH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_PUSH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_PUSH;
    }

    /** Properties of a C2S_CHAT_PRIVATE_LIST. */
    interface IC2S_CHAT_PRIVATE_LIST {
    }

    /** Represents a C2S_CHAT_PRIVATE_LIST. */
    class C2S_CHAT_PRIVATE_LIST implements IC2S_CHAT_PRIVATE_LIST {

        /**
         * Constructs a new C2S_CHAT_PRIVATE_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_PRIVATE_LIST);

        /**
         * Encodes the specified C2S_CHAT_PRIVATE_LIST message. Does not implicitly {@link gameProto.C2S_CHAT_PRIVATE_LIST.verify|verify} messages.
         * @param message C2S_CHAT_PRIVATE_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_PRIVATE_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_PRIVATE_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_PRIVATE_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_PRIVATE_LIST;
    }

    /** Properties of a S2C_CHAT_PRIVATE_LIST. */
    interface IS2C_CHAT_PRIVATE_LIST {

        /** S2C_CHAT_PRIVATE_LIST playerHeadPortrait */
        playerHeadPortrait?: (gameProto.IPlayerHeadPortrait[]|null);
    }

    /** Represents a S2C_CHAT_PRIVATE_LIST. */
    class S2C_CHAT_PRIVATE_LIST implements IS2C_CHAT_PRIVATE_LIST {

        /**
         * Constructs a new S2C_CHAT_PRIVATE_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_PRIVATE_LIST);

        /** S2C_CHAT_PRIVATE_LIST playerHeadPortrait. */
        public playerHeadPortrait: gameProto.IPlayerHeadPortrait[];

        /**
         * Encodes the specified S2C_CHAT_PRIVATE_LIST message. Does not implicitly {@link gameProto.S2C_CHAT_PRIVATE_LIST.verify|verify} messages.
         * @param message S2C_CHAT_PRIVATE_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_PRIVATE_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_PRIVATE_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_PRIVATE_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_PRIVATE_LIST;
    }

    /** Properties of a S2C_CHAT_PRIVATE_HEAD. */
    interface IS2C_CHAT_PRIVATE_HEAD {

        /** S2C_CHAT_PRIVATE_HEAD playerHeadPortraitAdd */
        playerHeadPortraitAdd: gameProto.IPlayerHeadPortrait;
    }

    /** Represents a S2C_CHAT_PRIVATE_HEAD. */
    class S2C_CHAT_PRIVATE_HEAD implements IS2C_CHAT_PRIVATE_HEAD {

        /**
         * Constructs a new S2C_CHAT_PRIVATE_HEAD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_PRIVATE_HEAD);

        /** S2C_CHAT_PRIVATE_HEAD playerHeadPortraitAdd. */
        public playerHeadPortraitAdd: gameProto.IPlayerHeadPortrait;

        /**
         * Encodes the specified S2C_CHAT_PRIVATE_HEAD message. Does not implicitly {@link gameProto.S2C_CHAT_PRIVATE_HEAD.verify|verify} messages.
         * @param message S2C_CHAT_PRIVATE_HEAD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_PRIVATE_HEAD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_PRIVATE_HEAD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_PRIVATE_HEAD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_PRIVATE_HEAD;
    }

    /** Properties of a C2S_CHAT_PRIVATE_RECORD_LIST. */
    interface IC2S_CHAT_PRIVATE_RECORD_LIST {

        /** C2S_CHAT_PRIVATE_RECORD_LIST playerId */
        playerId: number;
    }

    /** Represents a C2S_CHAT_PRIVATE_RECORD_LIST. */
    class C2S_CHAT_PRIVATE_RECORD_LIST implements IC2S_CHAT_PRIVATE_RECORD_LIST {

        /**
         * Constructs a new C2S_CHAT_PRIVATE_RECORD_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_PRIVATE_RECORD_LIST);

        /** C2S_CHAT_PRIVATE_RECORD_LIST playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_CHAT_PRIVATE_RECORD_LIST message. Does not implicitly {@link gameProto.C2S_CHAT_PRIVATE_RECORD_LIST.verify|verify} messages.
         * @param message C2S_CHAT_PRIVATE_RECORD_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_PRIVATE_RECORD_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_PRIVATE_RECORD_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_PRIVATE_RECORD_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_PRIVATE_RECORD_LIST;
    }

    /** Properties of a S2C_CHAT_PRIVATE_RECORD_LIST. */
    interface IS2C_CHAT_PRIVATE_RECORD_LIST {

        /** S2C_CHAT_PRIVATE_RECORD_LIST playerId */
        playerId: number;

        /** S2C_CHAT_PRIVATE_RECORD_LIST data */
        data?: (gameProto.IMsgData[]|null);
    }

    /** Represents a S2C_CHAT_PRIVATE_RECORD_LIST. */
    class S2C_CHAT_PRIVATE_RECORD_LIST implements IS2C_CHAT_PRIVATE_RECORD_LIST {

        /**
         * Constructs a new S2C_CHAT_PRIVATE_RECORD_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_PRIVATE_RECORD_LIST);

        /** S2C_CHAT_PRIVATE_RECORD_LIST playerId. */
        public playerId: number;

        /** S2C_CHAT_PRIVATE_RECORD_LIST data. */
        public data: gameProto.IMsgData[];

        /**
         * Encodes the specified S2C_CHAT_PRIVATE_RECORD_LIST message. Does not implicitly {@link gameProto.S2C_CHAT_PRIVATE_RECORD_LIST.verify|verify} messages.
         * @param message S2C_CHAT_PRIVATE_RECORD_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_PRIVATE_RECORD_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_PRIVATE_RECORD_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_PRIVATE_RECORD_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_PRIVATE_RECORD_LIST;
    }

    /** Properties of a C2S_CHAT_PRIVATE_CLEAN. */
    interface IC2S_CHAT_PRIVATE_CLEAN {

        /** C2S_CHAT_PRIVATE_CLEAN playerId */
        playerId: number;
    }

    /** Represents a C2S_CHAT_PRIVATE_CLEAN. */
    class C2S_CHAT_PRIVATE_CLEAN implements IC2S_CHAT_PRIVATE_CLEAN {

        /**
         * Constructs a new C2S_CHAT_PRIVATE_CLEAN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_PRIVATE_CLEAN);

        /** C2S_CHAT_PRIVATE_CLEAN playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_CHAT_PRIVATE_CLEAN message. Does not implicitly {@link gameProto.C2S_CHAT_PRIVATE_CLEAN.verify|verify} messages.
         * @param message C2S_CHAT_PRIVATE_CLEAN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_PRIVATE_CLEAN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_PRIVATE_CLEAN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_PRIVATE_CLEAN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_PRIVATE_CLEAN;
    }

    /** Properties of a S2C_CHAT_PRIVATE_CLEAN. */
    interface IS2C_CHAT_PRIVATE_CLEAN {

        /** S2C_CHAT_PRIVATE_CLEAN state */
        state: number;

        /** S2C_CHAT_PRIVATE_CLEAN playerId */
        playerId: number;
    }

    /** Represents a S2C_CHAT_PRIVATE_CLEAN. */
    class S2C_CHAT_PRIVATE_CLEAN implements IS2C_CHAT_PRIVATE_CLEAN {

        /**
         * Constructs a new S2C_CHAT_PRIVATE_CLEAN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_PRIVATE_CLEAN);

        /** S2C_CHAT_PRIVATE_CLEAN state. */
        public state: number;

        /** S2C_CHAT_PRIVATE_CLEAN playerId. */
        public playerId: number;

        /**
         * Encodes the specified S2C_CHAT_PRIVATE_CLEAN message. Does not implicitly {@link gameProto.S2C_CHAT_PRIVATE_CLEAN.verify|verify} messages.
         * @param message S2C_CHAT_PRIVATE_CLEAN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_PRIVATE_CLEAN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_PRIVATE_CLEAN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_PRIVATE_CLEAN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_PRIVATE_CLEAN;
    }

    /** Properties of a C2S_CHAT_BLACKLIST. */
    interface IC2S_CHAT_BLACKLIST {
    }

    /** Represents a C2S_CHAT_BLACKLIST. */
    class C2S_CHAT_BLACKLIST implements IC2S_CHAT_BLACKLIST {

        /**
         * Constructs a new C2S_CHAT_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_BLACKLIST);

        /**
         * Encodes the specified C2S_CHAT_BLACKLIST message. Does not implicitly {@link gameProto.C2S_CHAT_BLACKLIST.verify|verify} messages.
         * @param message C2S_CHAT_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_BLACKLIST;
    }

    /** Properties of a S2C_CHAT_BLACKLIST. */
    interface IS2C_CHAT_BLACKLIST {

        /** S2C_CHAT_BLACKLIST headPortrait */
        headPortrait?: (gameProto.IHeadPortrait[]|null);
    }

    /** Represents a S2C_CHAT_BLACKLIST. */
    class S2C_CHAT_BLACKLIST implements IS2C_CHAT_BLACKLIST {

        /**
         * Constructs a new S2C_CHAT_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_BLACKLIST);

        /** S2C_CHAT_BLACKLIST headPortrait. */
        public headPortrait: gameProto.IHeadPortrait[];

        /**
         * Encodes the specified S2C_CHAT_BLACKLIST message. Does not implicitly {@link gameProto.S2C_CHAT_BLACKLIST.verify|verify} messages.
         * @param message S2C_CHAT_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_BLACKLIST;
    }

    /** Properties of a C2S_CHAT_ADD_BLACKLIST. */
    interface IC2S_CHAT_ADD_BLACKLIST {

        /** C2S_CHAT_ADD_BLACKLIST playerId */
        playerId: number;
    }

    /** Represents a C2S_CHAT_ADD_BLACKLIST. */
    class C2S_CHAT_ADD_BLACKLIST implements IC2S_CHAT_ADD_BLACKLIST {

        /**
         * Constructs a new C2S_CHAT_ADD_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_ADD_BLACKLIST);

        /** C2S_CHAT_ADD_BLACKLIST playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_CHAT_ADD_BLACKLIST message. Does not implicitly {@link gameProto.C2S_CHAT_ADD_BLACKLIST.verify|verify} messages.
         * @param message C2S_CHAT_ADD_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_ADD_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_ADD_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_ADD_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_ADD_BLACKLIST;
    }

    /** Properties of a S2C_CHAT_ADD_BLACKLIST. */
    interface IS2C_CHAT_ADD_BLACKLIST {

        /** S2C_CHAT_ADD_BLACKLIST state */
        state: number;

        /** S2C_CHAT_ADD_BLACKLIST headPortrait */
        headPortrait: gameProto.IHeadPortrait;
    }

    /** Represents a S2C_CHAT_ADD_BLACKLIST. */
    class S2C_CHAT_ADD_BLACKLIST implements IS2C_CHAT_ADD_BLACKLIST {

        /**
         * Constructs a new S2C_CHAT_ADD_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_ADD_BLACKLIST);

        /** S2C_CHAT_ADD_BLACKLIST state. */
        public state: number;

        /** S2C_CHAT_ADD_BLACKLIST headPortrait. */
        public headPortrait: gameProto.IHeadPortrait;

        /**
         * Encodes the specified S2C_CHAT_ADD_BLACKLIST message. Does not implicitly {@link gameProto.S2C_CHAT_ADD_BLACKLIST.verify|verify} messages.
         * @param message S2C_CHAT_ADD_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_ADD_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_ADD_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_ADD_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_ADD_BLACKLIST;
    }

    /** Properties of a C2S_CHAT_DEL_BLACKLIST. */
    interface IC2S_CHAT_DEL_BLACKLIST {

        /** C2S_CHAT_DEL_BLACKLIST playerId */
        playerId: number;
    }

    /** Represents a C2S_CHAT_DEL_BLACKLIST. */
    class C2S_CHAT_DEL_BLACKLIST implements IC2S_CHAT_DEL_BLACKLIST {

        /**
         * Constructs a new C2S_CHAT_DEL_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_DEL_BLACKLIST);

        /** C2S_CHAT_DEL_BLACKLIST playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_CHAT_DEL_BLACKLIST message. Does not implicitly {@link gameProto.C2S_CHAT_DEL_BLACKLIST.verify|verify} messages.
         * @param message C2S_CHAT_DEL_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_DEL_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_DEL_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_DEL_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_DEL_BLACKLIST;
    }

    /** Properties of a S2C_CHAT_DEL_BLACKLIST. */
    interface IS2C_CHAT_DEL_BLACKLIST {

        /** S2C_CHAT_DEL_BLACKLIST state */
        state: number;

        /** S2C_CHAT_DEL_BLACKLIST playerId */
        playerId: number;
    }

    /** Represents a S2C_CHAT_DEL_BLACKLIST. */
    class S2C_CHAT_DEL_BLACKLIST implements IS2C_CHAT_DEL_BLACKLIST {

        /**
         * Constructs a new S2C_CHAT_DEL_BLACKLIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_DEL_BLACKLIST);

        /** S2C_CHAT_DEL_BLACKLIST state. */
        public state: number;

        /** S2C_CHAT_DEL_BLACKLIST playerId. */
        public playerId: number;

        /**
         * Encodes the specified S2C_CHAT_DEL_BLACKLIST message. Does not implicitly {@link gameProto.S2C_CHAT_DEL_BLACKLIST.verify|verify} messages.
         * @param message S2C_CHAT_DEL_BLACKLIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_DEL_BLACKLIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_DEL_BLACKLIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_DEL_BLACKLIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_DEL_BLACKLIST;
    }

    /** Properties of a C2S_CHAT_REPORT. */
    interface IC2S_CHAT_REPORT {

        /** C2S_CHAT_REPORT playerId */
        playerId: number;
    }

    /** Represents a C2S_CHAT_REPORT. */
    class C2S_CHAT_REPORT implements IC2S_CHAT_REPORT {

        /**
         * Constructs a new C2S_CHAT_REPORT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CHAT_REPORT);

        /** C2S_CHAT_REPORT playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_CHAT_REPORT message. Does not implicitly {@link gameProto.C2S_CHAT_REPORT.verify|verify} messages.
         * @param message C2S_CHAT_REPORT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CHAT_REPORT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CHAT_REPORT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CHAT_REPORT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CHAT_REPORT;
    }

    /** Properties of a S2C_CHAT_REPORT. */
    interface IS2C_CHAT_REPORT {

        /** S2C_CHAT_REPORT state */
        state: number;
    }

    /** Represents a S2C_CHAT_REPORT. */
    class S2C_CHAT_REPORT implements IS2C_CHAT_REPORT {

        /**
         * Constructs a new S2C_CHAT_REPORT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CHAT_REPORT);

        /** S2C_CHAT_REPORT state. */
        public state: number;

        /**
         * Encodes the specified S2C_CHAT_REPORT message. Does not implicitly {@link gameProto.S2C_CHAT_REPORT.verify|verify} messages.
         * @param message S2C_CHAT_REPORT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CHAT_REPORT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CHAT_REPORT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CHAT_REPORT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CHAT_REPORT;
    }

    /** Properties of a CityWarPlayerDamageRank. */
    interface ICityWarPlayerDamageRank {

        /** CityWarPlayerDamageRank rank */
        rank?: (number|null);

        /** CityWarPlayerDamageRank playerId */
        playerId?: (number|null);

        /** CityWarPlayerDamageRank playerName */
        playerName?: (string|null);

        /** CityWarPlayerDamageRank damage */
        damage?: (number|null);

        /** CityWarPlayerDamageRank countryId */
        countryId?: (number|null);
    }

    /** Represents a CityWarPlayerDamageRank. */
    class CityWarPlayerDamageRank implements ICityWarPlayerDamageRank {

        /**
         * Constructs a new CityWarPlayerDamageRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityWarPlayerDamageRank);

        /** CityWarPlayerDamageRank rank. */
        public rank: number;

        /** CityWarPlayerDamageRank playerId. */
        public playerId: number;

        /** CityWarPlayerDamageRank playerName. */
        public playerName: string;

        /** CityWarPlayerDamageRank damage. */
        public damage: number;

        /** CityWarPlayerDamageRank countryId. */
        public countryId: number;

        /**
         * Encodes the specified CityWarPlayerDamageRank message. Does not implicitly {@link gameProto.CityWarPlayerDamageRank.verify|verify} messages.
         * @param message CityWarPlayerDamageRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityWarPlayerDamageRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityWarPlayerDamageRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityWarPlayerDamageRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityWarPlayerDamageRank;
    }

    /** Properties of a CityWarGuildDamageRank. */
    interface ICityWarGuildDamageRank {

        /** CityWarGuildDamageRank rank */
        rank?: (number|null);

        /** CityWarGuildDamageRank guildId */
        guildId?: (number|null);

        /** CityWarGuildDamageRank guildName */
        guildName?: (string|null);

        /** CityWarGuildDamageRank damage */
        damage?: (number|null);

        /** CityWarGuildDamageRank countryId */
        countryId?: (number|null);
    }

    /** Represents a CityWarGuildDamageRank. */
    class CityWarGuildDamageRank implements ICityWarGuildDamageRank {

        /**
         * Constructs a new CityWarGuildDamageRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityWarGuildDamageRank);

        /** CityWarGuildDamageRank rank. */
        public rank: number;

        /** CityWarGuildDamageRank guildId. */
        public guildId: number;

        /** CityWarGuildDamageRank guildName. */
        public guildName: string;

        /** CityWarGuildDamageRank damage. */
        public damage: number;

        /** CityWarGuildDamageRank countryId. */
        public countryId: number;

        /**
         * Encodes the specified CityWarGuildDamageRank message. Does not implicitly {@link gameProto.CityWarGuildDamageRank.verify|verify} messages.
         * @param message CityWarGuildDamageRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityWarGuildDamageRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityWarGuildDamageRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityWarGuildDamageRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityWarGuildDamageRank;
    }

    /** Properties of a C2S_CITY_WAR_GO. */
    interface IC2S_CITY_WAR_GO {

        /** C2S_CITY_WAR_GO cityId */
        cityId: number;
    }

    /** Represents a C2S_CITY_WAR_GO. */
    class C2S_CITY_WAR_GO implements IC2S_CITY_WAR_GO {

        /**
         * Constructs a new C2S_CITY_WAR_GO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_GO);

        /** C2S_CITY_WAR_GO cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_WAR_GO message. Does not implicitly {@link gameProto.C2S_CITY_WAR_GO.verify|verify} messages.
         * @param message C2S_CITY_WAR_GO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_GO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_GO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_GO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_GO;
    }

    /** Properties of a C2S_CITY_WAR_CONFRONTATION_LIST. */
    interface IC2S_CITY_WAR_CONFRONTATION_LIST {

        /** C2S_CITY_WAR_CONFRONTATION_LIST cityId */
        cityId: number;

        /** C2S_CITY_WAR_CONFRONTATION_LIST page */
        page: number;
    }

    /** Represents a C2S_CITY_WAR_CONFRONTATION_LIST. */
    class C2S_CITY_WAR_CONFRONTATION_LIST implements IC2S_CITY_WAR_CONFRONTATION_LIST {

        /**
         * Constructs a new C2S_CITY_WAR_CONFRONTATION_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_CONFRONTATION_LIST);

        /** C2S_CITY_WAR_CONFRONTATION_LIST cityId. */
        public cityId: number;

        /** C2S_CITY_WAR_CONFRONTATION_LIST page. */
        public page: number;

        /**
         * Encodes the specified C2S_CITY_WAR_CONFRONTATION_LIST message. Does not implicitly {@link gameProto.C2S_CITY_WAR_CONFRONTATION_LIST.verify|verify} messages.
         * @param message C2S_CITY_WAR_CONFRONTATION_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_CONFRONTATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_CONFRONTATION_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_CONFRONTATION_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_CONFRONTATION_LIST;
    }

    /** Properties of a C2S_CITY_WATCH_WAR_TEAM. */
    interface IC2S_CITY_WATCH_WAR_TEAM {

        /** C2S_CITY_WATCH_WAR_TEAM cityId */
        cityId: number;

        /** C2S_CITY_WATCH_WAR_TEAM playerId */
        playerId: number;

        /** C2S_CITY_WATCH_WAR_TEAM teamId */
        teamId: number;
    }

    /** Represents a C2S_CITY_WATCH_WAR_TEAM. */
    class C2S_CITY_WATCH_WAR_TEAM implements IC2S_CITY_WATCH_WAR_TEAM {

        /**
         * Constructs a new C2S_CITY_WATCH_WAR_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WATCH_WAR_TEAM);

        /** C2S_CITY_WATCH_WAR_TEAM cityId. */
        public cityId: number;

        /** C2S_CITY_WATCH_WAR_TEAM playerId. */
        public playerId: number;

        /** C2S_CITY_WATCH_WAR_TEAM teamId. */
        public teamId: number;

        /**
         * Encodes the specified C2S_CITY_WATCH_WAR_TEAM message. Does not implicitly {@link gameProto.C2S_CITY_WATCH_WAR_TEAM.verify|verify} messages.
         * @param message C2S_CITY_WATCH_WAR_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WATCH_WAR_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WATCH_WAR_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WATCH_WAR_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WATCH_WAR_TEAM;
    }

    /** Properties of a C2S_CITY_WAR_MYTEAM. */
    interface IC2S_CITY_WAR_MYTEAM {

        /** C2S_CITY_WAR_MYTEAM cityId */
        cityId: number;
    }

    /** Represents a C2S_CITY_WAR_MYTEAM. */
    class C2S_CITY_WAR_MYTEAM implements IC2S_CITY_WAR_MYTEAM {

        /**
         * Constructs a new C2S_CITY_WAR_MYTEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_MYTEAM);

        /** C2S_CITY_WAR_MYTEAM cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_WAR_MYTEAM message. Does not implicitly {@link gameProto.C2S_CITY_WAR_MYTEAM.verify|verify} messages.
         * @param message C2S_CITY_WAR_MYTEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_MYTEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_MYTEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_MYTEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_MYTEAM;
    }

    /** Properties of a C2S_CITY_WAR_TEAM. */
    interface IC2S_CITY_WAR_TEAM {

        /** C2S_CITY_WAR_TEAM cityId */
        cityId: number;

        /** C2S_CITY_WAR_TEAM teamId */
        teamId: number;
    }

    /** Represents a C2S_CITY_WAR_TEAM. */
    class C2S_CITY_WAR_TEAM implements IC2S_CITY_WAR_TEAM {

        /**
         * Constructs a new C2S_CITY_WAR_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_TEAM);

        /** C2S_CITY_WAR_TEAM cityId. */
        public cityId: number;

        /** C2S_CITY_WAR_TEAM teamId. */
        public teamId: number;

        /**
         * Encodes the specified C2S_CITY_WAR_TEAM message. Does not implicitly {@link gameProto.C2S_CITY_WAR_TEAM.verify|verify} messages.
         * @param message C2S_CITY_WAR_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_TEAM;
    }

    /** Properties of a S2C_CITY_WAR_TEAM. */
    interface IS2C_CITY_WAR_TEAM {

        /** S2C_CITY_WAR_TEAM teamData */
        teamData: gameProto.ITeamData;
    }

    /** Represents a S2C_CITY_WAR_TEAM. */
    class S2C_CITY_WAR_TEAM implements IS2C_CITY_WAR_TEAM {

        /**
         * Constructs a new S2C_CITY_WAR_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_TEAM);

        /** S2C_CITY_WAR_TEAM teamData. */
        public teamData: gameProto.ITeamData;

        /**
         * Encodes the specified S2C_CITY_WAR_TEAM message. Does not implicitly {@link gameProto.S2C_CITY_WAR_TEAM.verify|verify} messages.
         * @param message S2C_CITY_WAR_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_TEAM;
    }

    /** Properties of a C2S_CITY_WAR_OUT. */
    interface IC2S_CITY_WAR_OUT {

        /** C2S_CITY_WAR_OUT cityId */
        cityId: number;
    }

    /** Represents a C2S_CITY_WAR_OUT. */
    class C2S_CITY_WAR_OUT implements IC2S_CITY_WAR_OUT {

        /**
         * Constructs a new C2S_CITY_WAR_OUT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_OUT);

        /** C2S_CITY_WAR_OUT cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_WAR_OUT message. Does not implicitly {@link gameProto.C2S_CITY_WAR_OUT.verify|verify} messages.
         * @param message C2S_CITY_WAR_OUT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_OUT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_OUT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_OUT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_OUT;
    }

    /** Properties of a S2C_CITY_WAR_OUT. */
    interface IS2C_CITY_WAR_OUT {

        /** S2C_CITY_WAR_OUT state */
        state: number;

        /** S2C_CITY_WAR_OUT cityId */
        cityId: number;
    }

    /** Represents a S2C_CITY_WAR_OUT. */
    class S2C_CITY_WAR_OUT implements IS2C_CITY_WAR_OUT {

        /**
         * Constructs a new S2C_CITY_WAR_OUT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_OUT);

        /** S2C_CITY_WAR_OUT state. */
        public state: number;

        /** S2C_CITY_WAR_OUT cityId. */
        public cityId: number;

        /**
         * Encodes the specified S2C_CITY_WAR_OUT message. Does not implicitly {@link gameProto.S2C_CITY_WAR_OUT.verify|verify} messages.
         * @param message S2C_CITY_WAR_OUT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_OUT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_OUT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_OUT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_OUT;
    }

    /** Properties of a S2C_CITY_WAR_SINGLE_OVER. */
    interface IS2C_CITY_WAR_SINGLE_OVER {

        /** S2C_CITY_WAR_SINGLE_OVER isVictory */
        isVictory: boolean;

        /** S2C_CITY_WAR_SINGLE_OVER attData */
        attData: number;

        /** S2C_CITY_WAR_SINGLE_OVER defData */
        defData: number;

        /** S2C_CITY_WAR_SINGLE_OVER attMilitaryMerits */
        attMilitaryMerits: number;

        /** S2C_CITY_WAR_SINGLE_OVER defMilitaryMerits */
        defMilitaryMerits: number;

        /** S2C_CITY_WAR_SINGLE_OVER cityId */
        cityId: number;
    }

    /** Represents a S2C_CITY_WAR_SINGLE_OVER. */
    class S2C_CITY_WAR_SINGLE_OVER implements IS2C_CITY_WAR_SINGLE_OVER {

        /**
         * Constructs a new S2C_CITY_WAR_SINGLE_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_SINGLE_OVER);

        /** S2C_CITY_WAR_SINGLE_OVER isVictory. */
        public isVictory: boolean;

        /** S2C_CITY_WAR_SINGLE_OVER attData. */
        public attData: number;

        /** S2C_CITY_WAR_SINGLE_OVER defData. */
        public defData: number;

        /** S2C_CITY_WAR_SINGLE_OVER attMilitaryMerits. */
        public attMilitaryMerits: number;

        /** S2C_CITY_WAR_SINGLE_OVER defMilitaryMerits. */
        public defMilitaryMerits: number;

        /** S2C_CITY_WAR_SINGLE_OVER cityId. */
        public cityId: number;

        /**
         * Encodes the specified S2C_CITY_WAR_SINGLE_OVER message. Does not implicitly {@link gameProto.S2C_CITY_WAR_SINGLE_OVER.verify|verify} messages.
         * @param message S2C_CITY_WAR_SINGLE_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_SINGLE_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_SINGLE_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_SINGLE_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_SINGLE_OVER;
    }

    /** Properties of a MyCityWarData. */
    interface IMyCityWarData {

        /** MyCityWarData killSoldiersCount */
        killSoldiersCount: number;

        /** MyCityWarData lossSoldiersCount */
        lossSoldiersCount: number;

        /** MyCityWarData warMerits */
        warMerits: number;
    }

    /** Represents a MyCityWarData. */
    class MyCityWarData implements IMyCityWarData {

        /**
         * Constructs a new MyCityWarData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMyCityWarData);

        /** MyCityWarData killSoldiersCount. */
        public killSoldiersCount: number;

        /** MyCityWarData lossSoldiersCount. */
        public lossSoldiersCount: number;

        /** MyCityWarData warMerits. */
        public warMerits: number;

        /**
         * Encodes the specified MyCityWarData message. Does not implicitly {@link gameProto.MyCityWarData.verify|verify} messages.
         * @param message MyCityWarData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMyCityWarData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MyCityWarData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MyCityWarData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MyCityWarData;
    }

    /** Properties of an AttDefData. */
    interface IAttDefData {

        /** AttDefData surplusSoldiersCount */
        surplusSoldiersCount: number;

        /** AttDefData lossSoldiersCount */
        lossSoldiersCount: number;

        /** AttDefData countryId */
        countryId: number;
    }

    /** Represents an AttDefData. */
    class AttDefData implements IAttDefData {

        /**
         * Constructs a new AttDefData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAttDefData);

        /** AttDefData surplusSoldiersCount. */
        public surplusSoldiersCount: number;

        /** AttDefData lossSoldiersCount. */
        public lossSoldiersCount: number;

        /** AttDefData countryId. */
        public countryId: number;

        /**
         * Encodes the specified AttDefData message. Does not implicitly {@link gameProto.AttDefData.verify|verify} messages.
         * @param message AttDefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAttDefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AttDefData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AttDefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AttDefData;
    }

    /** Properties of a S2C_CITY_WAR_SETTLEMENT. */
    interface IS2C_CITY_WAR_SETTLEMENT {

        /** S2C_CITY_WAR_SETTLEMENT isVictory */
        isVictory: boolean;

        /** S2C_CITY_WAR_SETTLEMENT attData */
        attData: gameProto.IAttDefData;

        /** S2C_CITY_WAR_SETTLEMENT defData */
        defData: gameProto.IAttDefData;

        /** S2C_CITY_WAR_SETTLEMENT cityId */
        cityId: number;

        /** S2C_CITY_WAR_SETTLEMENT myCityWarData */
        myCityWarData?: (gameProto.IMyCityWarData|null);
    }

    /** Represents a S2C_CITY_WAR_SETTLEMENT. */
    class S2C_CITY_WAR_SETTLEMENT implements IS2C_CITY_WAR_SETTLEMENT {

        /**
         * Constructs a new S2C_CITY_WAR_SETTLEMENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_SETTLEMENT);

        /** S2C_CITY_WAR_SETTLEMENT isVictory. */
        public isVictory: boolean;

        /** S2C_CITY_WAR_SETTLEMENT attData. */
        public attData: gameProto.IAttDefData;

        /** S2C_CITY_WAR_SETTLEMENT defData. */
        public defData: gameProto.IAttDefData;

        /** S2C_CITY_WAR_SETTLEMENT cityId. */
        public cityId: number;

        /** S2C_CITY_WAR_SETTLEMENT myCityWarData. */
        public myCityWarData?: (gameProto.IMyCityWarData|null);

        /**
         * Encodes the specified S2C_CITY_WAR_SETTLEMENT message. Does not implicitly {@link gameProto.S2C_CITY_WAR_SETTLEMENT.verify|verify} messages.
         * @param message S2C_CITY_WAR_SETTLEMENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_SETTLEMENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_SETTLEMENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_SETTLEMENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_SETTLEMENT;
    }

    /** Properties of a C2S_CITY_WAR_DMG_RANK. */
    interface IC2S_CITY_WAR_DMG_RANK {

        /** C2S_CITY_WAR_DMG_RANK cityId */
        cityId?: (number|null);
    }

    /** Represents a C2S_CITY_WAR_DMG_RANK. */
    class C2S_CITY_WAR_DMG_RANK implements IC2S_CITY_WAR_DMG_RANK {

        /**
         * Constructs a new C2S_CITY_WAR_DMG_RANK.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_WAR_DMG_RANK);

        /** C2S_CITY_WAR_DMG_RANK cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_WAR_DMG_RANK message. Does not implicitly {@link gameProto.C2S_CITY_WAR_DMG_RANK.verify|verify} messages.
         * @param message C2S_CITY_WAR_DMG_RANK message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_WAR_DMG_RANK, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_WAR_DMG_RANK message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_WAR_DMG_RANK
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_WAR_DMG_RANK;
    }

    /** Properties of a S2C_CITY_WAR_DMG_RANK. */
    interface IS2C_CITY_WAR_DMG_RANK {

        /** S2C_CITY_WAR_DMG_RANK playerRank */
        playerRank?: (gameProto.ICityWarPlayerDamageRank[]|null);

        /** S2C_CITY_WAR_DMG_RANK guildRank */
        guildRank?: (gameProto.ICityWarGuildDamageRank[]|null);
    }

    /** Represents a S2C_CITY_WAR_DMG_RANK. */
    class S2C_CITY_WAR_DMG_RANK implements IS2C_CITY_WAR_DMG_RANK {

        /**
         * Constructs a new S2C_CITY_WAR_DMG_RANK.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_WAR_DMG_RANK);

        /** S2C_CITY_WAR_DMG_RANK playerRank. */
        public playerRank: gameProto.ICityWarPlayerDamageRank[];

        /** S2C_CITY_WAR_DMG_RANK guildRank. */
        public guildRank: gameProto.ICityWarGuildDamageRank[];

        /**
         * Encodes the specified S2C_CITY_WAR_DMG_RANK message. Does not implicitly {@link gameProto.S2C_CITY_WAR_DMG_RANK.verify|verify} messages.
         * @param message S2C_CITY_WAR_DMG_RANK message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_WAR_DMG_RANK, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_WAR_DMG_RANK message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_WAR_DMG_RANK
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_WAR_DMG_RANK;
    }

    /** Properties of a C2S_CITY_ITEM_INFO. */
    interface IC2S_CITY_ITEM_INFO {

        /** C2S_CITY_ITEM_INFO cityId */
        cityId: number;
    }

    /** Represents a C2S_CITY_ITEM_INFO. */
    class C2S_CITY_ITEM_INFO implements IC2S_CITY_ITEM_INFO {

        /**
         * Constructs a new C2S_CITY_ITEM_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_ITEM_INFO);

        /** C2S_CITY_ITEM_INFO cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_ITEM_INFO message. Does not implicitly {@link gameProto.C2S_CITY_ITEM_INFO.verify|verify} messages.
         * @param message C2S_CITY_ITEM_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_ITEM_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_ITEM_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_ITEM_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_ITEM_INFO;
    }

    /** Properties of a S2C_CITY_ITEM_INFO. */
    interface IS2C_CITY_ITEM_INFO {

        /** S2C_CITY_ITEM_INFO defPlayerWarData */
        defPlayerWarData?: (gameProto.IPlayerWarData[]|null);
    }

    /** Represents a S2C_CITY_ITEM_INFO. */
    class S2C_CITY_ITEM_INFO implements IS2C_CITY_ITEM_INFO {

        /**
         * Constructs a new S2C_CITY_ITEM_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_ITEM_INFO);

        /** S2C_CITY_ITEM_INFO defPlayerWarData. */
        public defPlayerWarData: gameProto.IPlayerWarData[];

        /**
         * Encodes the specified S2C_CITY_ITEM_INFO message. Does not implicitly {@link gameProto.S2C_CITY_ITEM_INFO.verify|verify} messages.
         * @param message S2C_CITY_ITEM_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_ITEM_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_ITEM_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_ITEM_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_ITEM_INFO;
    }

    /** Properties of a CountryAllianceResp. */
    interface ICountryAllianceResp {

        /** CountryAllianceResp isAlliance */
        isAlliance: boolean;

        /** CountryAllianceResp countryOne */
        countryOne?: (number|null);

        /** CountryAllianceResp countryTwo */
        countryTwo?: (number|null);
    }

    /** Represents a CountryAllianceResp. */
    class CountryAllianceResp implements ICountryAllianceResp {

        /**
         * Constructs a new CountryAllianceResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryAllianceResp);

        /** CountryAllianceResp isAlliance. */
        public isAlliance: boolean;

        /** CountryAllianceResp countryOne. */
        public countryOne: number;

        /** CountryAllianceResp countryTwo. */
        public countryTwo: number;

        /**
         * Encodes the specified CountryAllianceResp message. Does not implicitly {@link gameProto.CountryAllianceResp.verify|verify} messages.
         * @param message CountryAllianceResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryAllianceResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryAllianceResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryAllianceResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryAllianceResp;
    }

    /** Properties of a CountryAllianceReq. */
    interface ICountryAllianceReq {
    }

    /** Represents a CountryAllianceReq. */
    class CountryAllianceReq implements ICountryAllianceReq {

        /**
         * Constructs a new CountryAllianceReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryAllianceReq);

        /**
         * Encodes the specified CountryAllianceReq message. Does not implicitly {@link gameProto.CountryAllianceReq.verify|verify} messages.
         * @param message CountryAllianceReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryAllianceReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryAllianceReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryAllianceReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryAllianceReq;
    }

    /** Properties of a CountryOfficialChangeResp. */
    interface ICountryOfficialChangeResp {

        /** CountryOfficialChangeResp playerId */
        playerId: number;

        /** CountryOfficialChangeResp officialId */
        officialId?: (number|null);
    }

    /** Represents a CountryOfficialChangeResp. */
    class CountryOfficialChangeResp implements ICountryOfficialChangeResp {

        /**
         * Constructs a new CountryOfficialChangeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryOfficialChangeResp);

        /** CountryOfficialChangeResp playerId. */
        public playerId: number;

        /** CountryOfficialChangeResp officialId. */
        public officialId: number;

        /**
         * Encodes the specified CountryOfficialChangeResp message. Does not implicitly {@link gameProto.CountryOfficialChangeResp.verify|verify} messages.
         * @param message CountryOfficialChangeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryOfficialChangeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryOfficialChangeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryOfficialChangeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryOfficialChangeResp;
    }

    /** Properties of a CityChangeInfo. */
    interface ICityChangeInfo {

        /** CityChangeInfo time */
        time?: (number|null);

        /** CityChangeInfo cityId */
        cityId?: (number|null);

        /** CityChangeInfo countryId */
        countryId?: (number|null);

        /** CityChangeInfo type */
        type?: (number|null);
    }

    /** Represents a CityChangeInfo. */
    class CityChangeInfo implements ICityChangeInfo {

        /**
         * Constructs a new CityChangeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityChangeInfo);

        /** CityChangeInfo time. */
        public time: number;

        /** CityChangeInfo cityId. */
        public cityId: number;

        /** CityChangeInfo countryId. */
        public countryId: number;

        /** CityChangeInfo type. */
        public type: number;

        /**
         * Encodes the specified CityChangeInfo message. Does not implicitly {@link gameProto.CityChangeInfo.verify|verify} messages.
         * @param message CityChangeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityChangeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityChangeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityChangeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityChangeInfo;
    }

    /** Properties of a CountryPlayerInfo. */
    interface ICountryPlayerInfo {

        /** CountryPlayerInfo playerId */
        playerId?: (number|null);

        /** CountryPlayerInfo name */
        name?: (string|null);

        /** CountryPlayerInfo legionName */
        legionName?: (string|null);

        /** CountryPlayerInfo roleHead */
        roleHead?: (number|null);

        /** CountryPlayerInfo jobId */
        jobId?: (number|null);

        /** CountryPlayerInfo fight */
        fight?: (number|null);

        /** CountryPlayerInfo warMerits */
        warMerits?: (number|null);

        /** CountryPlayerInfo cities */
        cities?: (number[]|null);

        /** CountryPlayerInfo kingChangeStamp */
        kingChangeStamp?: (number|null);

        /** CountryPlayerInfo kingchange */
        kingchange?: (gameProto.IKingChangeNotice[]|null);
    }

    /** Represents a CountryPlayerInfo. */
    class CountryPlayerInfo implements ICountryPlayerInfo {

        /**
         * Constructs a new CountryPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryPlayerInfo);

        /** CountryPlayerInfo playerId. */
        public playerId: number;

        /** CountryPlayerInfo name. */
        public name: string;

        /** CountryPlayerInfo legionName. */
        public legionName: string;

        /** CountryPlayerInfo roleHead. */
        public roleHead: number;

        /** CountryPlayerInfo jobId. */
        public jobId: number;

        /** CountryPlayerInfo fight. */
        public fight: number;

        /** CountryPlayerInfo warMerits. */
        public warMerits: number;

        /** CountryPlayerInfo cities. */
        public cities: number[];

        /** CountryPlayerInfo kingChangeStamp. */
        public kingChangeStamp: number;

        /** CountryPlayerInfo kingchange. */
        public kingchange: gameProto.IKingChangeNotice[];

        /**
         * Encodes the specified CountryPlayerInfo message. Does not implicitly {@link gameProto.CountryPlayerInfo.verify|verify} messages.
         * @param message CountryPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryPlayerInfo;
    }

    /** Properties of a KingChangeNotice. */
    interface IKingChangeNotice {

        /** KingChangeNotice countryId */
        countryId?: (number|null);

        /** KingChangeNotice playerName */
        playerName?: (string|null);

        /** KingChangeNotice changeStamp */
        changeStamp?: (number|null);
    }

    /** Represents a KingChangeNotice. */
    class KingChangeNotice implements IKingChangeNotice {

        /**
         * Constructs a new KingChangeNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IKingChangeNotice);

        /** KingChangeNotice countryId. */
        public countryId: number;

        /** KingChangeNotice playerName. */
        public playerName: string;

        /** KingChangeNotice changeStamp. */
        public changeStamp: number;

        /**
         * Encodes the specified KingChangeNotice message. Does not implicitly {@link gameProto.KingChangeNotice.verify|verify} messages.
         * @param message KingChangeNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IKingChangeNotice, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KingChangeNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KingChangeNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.KingChangeNotice;
    }

    /** Properties of a CountryJobInfo. */
    interface ICountryJobInfo {

        /** CountryJobInfo jobId */
        jobId: number;

        /** CountryJobInfo playerInfo */
        playerInfo?: (gameProto.ICountryPlayerInfo|null);
    }

    /** Represents a CountryJobInfo. */
    class CountryJobInfo implements ICountryJobInfo {

        /**
         * Constructs a new CountryJobInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryJobInfo);

        /** CountryJobInfo jobId. */
        public jobId: number;

        /** CountryJobInfo playerInfo. */
        public playerInfo?: (gameProto.ICountryPlayerInfo|null);

        /**
         * Encodes the specified CountryJobInfo message. Does not implicitly {@link gameProto.CountryJobInfo.verify|verify} messages.
         * @param message CountryJobInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryJobInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryJobInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryJobInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryJobInfo;
    }

    /** Properties of a CountryCityInfo. */
    interface ICountryCityInfo {

        /** CountryCityInfo cityId */
        cityId: number;

        /** CountryCityInfo playerInfo */
        playerInfo?: (gameProto.ICountryPlayerInfo|null);
    }

    /** Represents a CountryCityInfo. */
    class CountryCityInfo implements ICountryCityInfo {

        /**
         * Constructs a new CountryCityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryCityInfo);

        /** CountryCityInfo cityId. */
        public cityId: number;

        /** CountryCityInfo playerInfo. */
        public playerInfo?: (gameProto.ICountryPlayerInfo|null);

        /**
         * Encodes the specified CountryCityInfo message. Does not implicitly {@link gameProto.CountryCityInfo.verify|verify} messages.
         * @param message CountryCityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryCityInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryCityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryCityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryCityInfo;
    }

    /** Properties of a CountryInfoReq. */
    interface ICountryInfoReq {
    }

    /** Represents a CountryInfoReq. */
    class CountryInfoReq implements ICountryInfoReq {

        /**
         * Constructs a new CountryInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryInfoReq);

        /**
         * Encodes the specified CountryInfoReq message. Does not implicitly {@link gameProto.CountryInfoReq.verify|verify} messages.
         * @param message CountryInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryInfoReq;
    }

    /** Properties of a CountryInfoResp. */
    interface ICountryInfoResp {

        /** CountryInfoResp notice */
        notice?: (string|null);

        /** CountryInfoResp kingPlayerInfo */
        kingPlayerInfo?: (gameProto.ICountryPlayerInfo|null);

        /** CountryInfoResp selfPlayerInfo */
        selfPlayerInfo?: (gameProto.ICountryPlayerInfo|null);

        /** CountryInfoResp jobInfos */
        jobInfos?: (gameProto.ICountryJobInfo[]|null);

        /** CountryInfoResp cityInfos */
        cityInfos?: (gameProto.ICountryCityInfo[]|null);

        /** CountryInfoResp kingLastLogin */
        kingLastLogin?: (number|null);

        /** CountryInfoResp impeachStamp */
        impeachStamp?: (number|null);

        /** CountryInfoResp impeachStarter */
        impeachStarter?: (number|null);

        /** CountryInfoResp impeachStarterName */
        impeachStarterName?: (string|null);

        /** CountryInfoResp impeachVote */
        impeachVote?: (number[]|null);

        /** CountryInfoResp salaryStamp */
        salaryStamp?: (number|null);

        /** CountryInfoResp salaryJobId */
        salaryJobId?: (number|null);
    }

    /** Represents a CountryInfoResp. */
    class CountryInfoResp implements ICountryInfoResp {

        /**
         * Constructs a new CountryInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryInfoResp);

        /** CountryInfoResp notice. */
        public notice: string;

        /** CountryInfoResp kingPlayerInfo. */
        public kingPlayerInfo?: (gameProto.ICountryPlayerInfo|null);

        /** CountryInfoResp selfPlayerInfo. */
        public selfPlayerInfo?: (gameProto.ICountryPlayerInfo|null);

        /** CountryInfoResp jobInfos. */
        public jobInfos: gameProto.ICountryJobInfo[];

        /** CountryInfoResp cityInfos. */
        public cityInfos: gameProto.ICountryCityInfo[];

        /** CountryInfoResp kingLastLogin. */
        public kingLastLogin: number;

        /** CountryInfoResp impeachStamp. */
        public impeachStamp: number;

        /** CountryInfoResp impeachStarter. */
        public impeachStarter: number;

        /** CountryInfoResp impeachStarterName. */
        public impeachStarterName: string;

        /** CountryInfoResp impeachVote. */
        public impeachVote: number[];

        /** CountryInfoResp salaryStamp. */
        public salaryStamp: number;

        /** CountryInfoResp salaryJobId. */
        public salaryJobId: number;

        /**
         * Encodes the specified CountryInfoResp message. Does not implicitly {@link gameProto.CountryInfoResp.verify|verify} messages.
         * @param message CountryInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryInfoResp;
    }

    /** Properties of a CountryNoticeReq. */
    interface ICountryNoticeReq {

        /** CountryNoticeReq notice */
        notice?: (string|null);
    }

    /** Represents a CountryNoticeReq. */
    class CountryNoticeReq implements ICountryNoticeReq {

        /**
         * Constructs a new CountryNoticeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryNoticeReq);

        /** CountryNoticeReq notice. */
        public notice: string;

        /**
         * Encodes the specified CountryNoticeReq message. Does not implicitly {@link gameProto.CountryNoticeReq.verify|verify} messages.
         * @param message CountryNoticeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryNoticeReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryNoticeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryNoticeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryNoticeReq;
    }

    /** Properties of a CountryNoticeResp. */
    interface ICountryNoticeResp {

        /** CountryNoticeResp notice */
        notice?: (string|null);
    }

    /** Represents a CountryNoticeResp. */
    class CountryNoticeResp implements ICountryNoticeResp {

        /**
         * Constructs a new CountryNoticeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryNoticeResp);

        /** CountryNoticeResp notice. */
        public notice: string;

        /**
         * Encodes the specified CountryNoticeResp message. Does not implicitly {@link gameProto.CountryNoticeResp.verify|verify} messages.
         * @param message CountryNoticeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryNoticeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryNoticeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryNoticeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryNoticeResp;
    }

    /** Properties of a CountryApplyJobReq. */
    interface ICountryApplyJobReq {

        /** CountryApplyJobReq jobId */
        jobId?: (number|null);

        /** CountryApplyJobReq playerId */
        playerId?: (number|null);
    }

    /** Represents a CountryApplyJobReq. */
    class CountryApplyJobReq implements ICountryApplyJobReq {

        /**
         * Constructs a new CountryApplyJobReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyJobReq);

        /** CountryApplyJobReq jobId. */
        public jobId: number;

        /** CountryApplyJobReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified CountryApplyJobReq message. Does not implicitly {@link gameProto.CountryApplyJobReq.verify|verify} messages.
         * @param message CountryApplyJobReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyJobReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyJobReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyJobReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyJobReq;
    }

    /** Properties of a CountryApplyJobResp. */
    interface ICountryApplyJobResp {

        /** CountryApplyJobResp jobInfos */
        jobInfos?: (gameProto.ICountryJobInfo[]|null);
    }

    /** Represents a CountryApplyJobResp. */
    class CountryApplyJobResp implements ICountryApplyJobResp {

        /**
         * Constructs a new CountryApplyJobResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyJobResp);

        /** CountryApplyJobResp jobInfos. */
        public jobInfos: gameProto.ICountryJobInfo[];

        /**
         * Encodes the specified CountryApplyJobResp message. Does not implicitly {@link gameProto.CountryApplyJobResp.verify|verify} messages.
         * @param message CountryApplyJobResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyJobResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyJobResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyJobResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyJobResp;
    }

    /** Properties of a CountryApplyCityReq. */
    interface ICountryApplyCityReq {

        /** CountryApplyCityReq cityId */
        cityId?: (number|null);

        /** CountryApplyCityReq playerId */
        playerId?: (number|null);
    }

    /** Represents a CountryApplyCityReq. */
    class CountryApplyCityReq implements ICountryApplyCityReq {

        /**
         * Constructs a new CountryApplyCityReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyCityReq);

        /** CountryApplyCityReq cityId. */
        public cityId: number;

        /** CountryApplyCityReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified CountryApplyCityReq message. Does not implicitly {@link gameProto.CountryApplyCityReq.verify|verify} messages.
         * @param message CountryApplyCityReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyCityReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyCityReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyCityReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyCityReq;
    }

    /** Properties of a CountryApplyCityResp. */
    interface ICountryApplyCityResp {

        /** CountryApplyCityResp cityInfos */
        cityInfos?: (gameProto.ICountryCityInfo[]|null);
    }

    /** Represents a CountryApplyCityResp. */
    class CountryApplyCityResp implements ICountryApplyCityResp {

        /**
         * Constructs a new CountryApplyCityResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyCityResp);

        /** CountryApplyCityResp cityInfos. */
        public cityInfos: gameProto.ICountryCityInfo[];

        /**
         * Encodes the specified CountryApplyCityResp message. Does not implicitly {@link gameProto.CountryApplyCityResp.verify|verify} messages.
         * @param message CountryApplyCityResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyCityResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyCityResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyCityResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyCityResp;
    }

    /** Properties of a CountryApplyListReq. */
    interface ICountryApplyListReq {

        /** CountryApplyListReq listType */
        listType?: (number|null);

        /** CountryApplyListReq jobId */
        jobId?: (number|null);
    }

    /** Represents a CountryApplyListReq. */
    class CountryApplyListReq implements ICountryApplyListReq {

        /**
         * Constructs a new CountryApplyListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyListReq);

        /** CountryApplyListReq listType. */
        public listType: number;

        /** CountryApplyListReq jobId. */
        public jobId: number;

        /**
         * Encodes the specified CountryApplyListReq message. Does not implicitly {@link gameProto.CountryApplyListReq.verify|verify} messages.
         * @param message CountryApplyListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyListReq;
    }

    /** Properties of a CountryApplyListResp. */
    interface ICountryApplyListResp {

        /** CountryApplyListResp playerInfoList */
        playerInfoList?: (gameProto.ICountryPlayerInfo[]|null);
    }

    /** Represents a CountryApplyListResp. */
    class CountryApplyListResp implements ICountryApplyListResp {

        /**
         * Constructs a new CountryApplyListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryApplyListResp);

        /** CountryApplyListResp playerInfoList. */
        public playerInfoList: gameProto.ICountryPlayerInfo[];

        /**
         * Encodes the specified CountryApplyListResp message. Does not implicitly {@link gameProto.CountryApplyListResp.verify|verify} messages.
         * @param message CountryApplyListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryApplyListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryApplyListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryApplyListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryApplyListResp;
    }

    /** Properties of a CountryAbdicateReq. */
    interface ICountryAbdicateReq {

        /** CountryAbdicateReq playerId */
        playerId: number;
    }

    /** Represents a CountryAbdicateReq. */
    class CountryAbdicateReq implements ICountryAbdicateReq {

        /**
         * Constructs a new CountryAbdicateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICountryAbdicateReq);

        /** CountryAbdicateReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified CountryAbdicateReq message. Does not implicitly {@link gameProto.CountryAbdicateReq.verify|verify} messages.
         * @param message CountryAbdicateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICountryAbdicateReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CountryAbdicateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CountryAbdicateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CountryAbdicateReq;
    }

    /** Properties of a C2S_COUNTRY_CITY_INFO. */
    interface IC2S_COUNTRY_CITY_INFO {
    }

    /** Represents a C2S_COUNTRY_CITY_INFO. */
    class C2S_COUNTRY_CITY_INFO implements IC2S_COUNTRY_CITY_INFO {

        /**
         * Constructs a new C2S_COUNTRY_CITY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_CITY_INFO);

        /**
         * Encodes the specified C2S_COUNTRY_CITY_INFO message. Does not implicitly {@link gameProto.C2S_COUNTRY_CITY_INFO.verify|verify} messages.
         * @param message C2S_COUNTRY_CITY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_CITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_CITY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_CITY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_CITY_INFO;
    }

    /** Properties of a S2C_COUNTRY_CITY_INFO. */
    interface IS2C_COUNTRY_CITY_INFO {

        /** S2C_COUNTRY_CITY_INFO cities */
        cities?: (gameProto.ICountryCityInfo[]|null);
    }

    /** Represents a S2C_COUNTRY_CITY_INFO. */
    class S2C_COUNTRY_CITY_INFO implements IS2C_COUNTRY_CITY_INFO {

        /**
         * Constructs a new S2C_COUNTRY_CITY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_CITY_INFO);

        /** S2C_COUNTRY_CITY_INFO cities. */
        public cities: gameProto.ICountryCityInfo[];

        /**
         * Encodes the specified S2C_COUNTRY_CITY_INFO message. Does not implicitly {@link gameProto.S2C_COUNTRY_CITY_INFO.verify|verify} messages.
         * @param message S2C_COUNTRY_CITY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_CITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_CITY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_CITY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_CITY_INFO;
    }

    /** Properties of a C2S_COUNTRY_KING_CHANGE_STAMP. */
    interface IC2S_COUNTRY_KING_CHANGE_STAMP {
    }

    /** Represents a C2S_COUNTRY_KING_CHANGE_STAMP. */
    class C2S_COUNTRY_KING_CHANGE_STAMP implements IC2S_COUNTRY_KING_CHANGE_STAMP {

        /**
         * Constructs a new C2S_COUNTRY_KING_CHANGE_STAMP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_KING_CHANGE_STAMP);

        /**
         * Encodes the specified C2S_COUNTRY_KING_CHANGE_STAMP message. Does not implicitly {@link gameProto.C2S_COUNTRY_KING_CHANGE_STAMP.verify|verify} messages.
         * @param message C2S_COUNTRY_KING_CHANGE_STAMP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_KING_CHANGE_STAMP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_KING_CHANGE_STAMP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_KING_CHANGE_STAMP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_KING_CHANGE_STAMP;
    }

    /** Properties of a S2C_COUNTRY_KING_CHANGE_STAMP. */
    interface IS2C_COUNTRY_KING_CHANGE_STAMP {
    }

    /** Represents a S2C_COUNTRY_KING_CHANGE_STAMP. */
    class S2C_COUNTRY_KING_CHANGE_STAMP implements IS2C_COUNTRY_KING_CHANGE_STAMP {

        /**
         * Constructs a new S2C_COUNTRY_KING_CHANGE_STAMP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_KING_CHANGE_STAMP);

        /**
         * Encodes the specified S2C_COUNTRY_KING_CHANGE_STAMP message. Does not implicitly {@link gameProto.S2C_COUNTRY_KING_CHANGE_STAMP.verify|verify} messages.
         * @param message S2C_COUNTRY_KING_CHANGE_STAMP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_KING_CHANGE_STAMP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_KING_CHANGE_STAMP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_KING_CHANGE_STAMP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_KING_CHANGE_STAMP;
    }

    /** Properties of a C2S_COUNTRY_START_IMPEACH. */
    interface IC2S_COUNTRY_START_IMPEACH {
    }

    /** Represents a C2S_COUNTRY_START_IMPEACH. */
    class C2S_COUNTRY_START_IMPEACH implements IC2S_COUNTRY_START_IMPEACH {

        /**
         * Constructs a new C2S_COUNTRY_START_IMPEACH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_START_IMPEACH);

        /**
         * Encodes the specified C2S_COUNTRY_START_IMPEACH message. Does not implicitly {@link gameProto.C2S_COUNTRY_START_IMPEACH.verify|verify} messages.
         * @param message C2S_COUNTRY_START_IMPEACH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_START_IMPEACH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_START_IMPEACH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_START_IMPEACH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_START_IMPEACH;
    }

    /** Properties of a S2C_COUNTRY_START_IMPEACH. */
    interface IS2C_COUNTRY_START_IMPEACH {

        /** S2C_COUNTRY_START_IMPEACH errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_COUNTRY_START_IMPEACH. */
    class S2C_COUNTRY_START_IMPEACH implements IS2C_COUNTRY_START_IMPEACH {

        /**
         * Constructs a new S2C_COUNTRY_START_IMPEACH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_START_IMPEACH);

        /** S2C_COUNTRY_START_IMPEACH errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_COUNTRY_START_IMPEACH message. Does not implicitly {@link gameProto.S2C_COUNTRY_START_IMPEACH.verify|verify} messages.
         * @param message S2C_COUNTRY_START_IMPEACH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_START_IMPEACH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_START_IMPEACH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_START_IMPEACH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_START_IMPEACH;
    }

    /** Properties of a C2S_COUNTRY_VOTE_IMPEACH. */
    interface IC2S_COUNTRY_VOTE_IMPEACH {
    }

    /** Represents a C2S_COUNTRY_VOTE_IMPEACH. */
    class C2S_COUNTRY_VOTE_IMPEACH implements IC2S_COUNTRY_VOTE_IMPEACH {

        /**
         * Constructs a new C2S_COUNTRY_VOTE_IMPEACH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_VOTE_IMPEACH);

        /**
         * Encodes the specified C2S_COUNTRY_VOTE_IMPEACH message. Does not implicitly {@link gameProto.C2S_COUNTRY_VOTE_IMPEACH.verify|verify} messages.
         * @param message C2S_COUNTRY_VOTE_IMPEACH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_VOTE_IMPEACH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_VOTE_IMPEACH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_VOTE_IMPEACH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_VOTE_IMPEACH;
    }

    /** Properties of a S2C_COUNTRY_VOTE_IMPEACH. */
    interface IS2C_COUNTRY_VOTE_IMPEACH {

        /** S2C_COUNTRY_VOTE_IMPEACH errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_COUNTRY_VOTE_IMPEACH. */
    class S2C_COUNTRY_VOTE_IMPEACH implements IS2C_COUNTRY_VOTE_IMPEACH {

        /**
         * Constructs a new S2C_COUNTRY_VOTE_IMPEACH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_VOTE_IMPEACH);

        /** S2C_COUNTRY_VOTE_IMPEACH errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_COUNTRY_VOTE_IMPEACH message. Does not implicitly {@link gameProto.S2C_COUNTRY_VOTE_IMPEACH.verify|verify} messages.
         * @param message S2C_COUNTRY_VOTE_IMPEACH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_VOTE_IMPEACH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_VOTE_IMPEACH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_VOTE_IMPEACH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_VOTE_IMPEACH;
    }

    /** Properties of a C2S_COUNTRY_SALARY. */
    interface IC2S_COUNTRY_SALARY {
    }

    /** Represents a C2S_COUNTRY_SALARY. */
    class C2S_COUNTRY_SALARY implements IC2S_COUNTRY_SALARY {

        /**
         * Constructs a new C2S_COUNTRY_SALARY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_SALARY);

        /**
         * Encodes the specified C2S_COUNTRY_SALARY message. Does not implicitly {@link gameProto.C2S_COUNTRY_SALARY.verify|verify} messages.
         * @param message C2S_COUNTRY_SALARY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_SALARY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_SALARY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_SALARY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_SALARY;
    }

    /** Properties of a S2C_COUNTRY_SALARY. */
    interface IS2C_COUNTRY_SALARY {

        /** S2C_COUNTRY_SALARY errorCode */
        errorCode?: (number|null);

        /** S2C_COUNTRY_SALARY message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_COUNTRY_SALARY. */
    class S2C_COUNTRY_SALARY implements IS2C_COUNTRY_SALARY {

        /**
         * Constructs a new S2C_COUNTRY_SALARY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_SALARY);

        /** S2C_COUNTRY_SALARY errorCode. */
        public errorCode: number;

        /** S2C_COUNTRY_SALARY message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_COUNTRY_SALARY message. Does not implicitly {@link gameProto.S2C_COUNTRY_SALARY.verify|verify} messages.
         * @param message S2C_COUNTRY_SALARY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_SALARY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_SALARY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_SALARY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_SALARY;
    }

    /** Properties of a C2S_COUNTRY_CITY_REVENUE. */
    interface IC2S_COUNTRY_CITY_REVENUE {
    }

    /** Represents a C2S_COUNTRY_CITY_REVENUE. */
    class C2S_COUNTRY_CITY_REVENUE implements IC2S_COUNTRY_CITY_REVENUE {

        /**
         * Constructs a new C2S_COUNTRY_CITY_REVENUE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_CITY_REVENUE);

        /**
         * Encodes the specified C2S_COUNTRY_CITY_REVENUE message. Does not implicitly {@link gameProto.C2S_COUNTRY_CITY_REVENUE.verify|verify} messages.
         * @param message C2S_COUNTRY_CITY_REVENUE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_CITY_REVENUE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_CITY_REVENUE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_CITY_REVENUE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_CITY_REVENUE;
    }

    /** Properties of a S2C_COUNTRY_CITY_REVENUE. */
    interface IS2C_COUNTRY_CITY_REVENUE {

        /** S2C_COUNTRY_CITY_REVENUE errorCode */
        errorCode?: (number|null);

        /** S2C_COUNTRY_CITY_REVENUE message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_COUNTRY_CITY_REVENUE. */
    class S2C_COUNTRY_CITY_REVENUE implements IS2C_COUNTRY_CITY_REVENUE {

        /**
         * Constructs a new S2C_COUNTRY_CITY_REVENUE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_CITY_REVENUE);

        /** S2C_COUNTRY_CITY_REVENUE errorCode. */
        public errorCode: number;

        /** S2C_COUNTRY_CITY_REVENUE message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_COUNTRY_CITY_REVENUE message. Does not implicitly {@link gameProto.S2C_COUNTRY_CITY_REVENUE.verify|verify} messages.
         * @param message S2C_COUNTRY_CITY_REVENUE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_CITY_REVENUE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_CITY_REVENUE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_CITY_REVENUE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_CITY_REVENUE;
    }

    /** Properties of a S2C_COUNTRY_CITY_REVENUE_STATUS. */
    interface IS2C_COUNTRY_CITY_REVENUE_STATUS {

        /** S2C_COUNTRY_CITY_REVENUE_STATUS canReceiveCityRevenue */
        canReceiveCityRevenue: boolean;
    }

    /** Represents a S2C_COUNTRY_CITY_REVENUE_STATUS. */
    class S2C_COUNTRY_CITY_REVENUE_STATUS implements IS2C_COUNTRY_CITY_REVENUE_STATUS {

        /**
         * Constructs a new S2C_COUNTRY_CITY_REVENUE_STATUS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_CITY_REVENUE_STATUS);

        /** S2C_COUNTRY_CITY_REVENUE_STATUS canReceiveCityRevenue. */
        public canReceiveCityRevenue: boolean;

        /**
         * Encodes the specified S2C_COUNTRY_CITY_REVENUE_STATUS message. Does not implicitly {@link gameProto.S2C_COUNTRY_CITY_REVENUE_STATUS.verify|verify} messages.
         * @param message S2C_COUNTRY_CITY_REVENUE_STATUS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_CITY_REVENUE_STATUS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_CITY_REVENUE_STATUS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_CITY_REVENUE_STATUS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_CITY_REVENUE_STATUS;
    }

    /** Properties of a C2S_COUNTRY_EMPEROR_INFO. */
    interface IC2S_COUNTRY_EMPEROR_INFO {
    }

    /** Represents a C2S_COUNTRY_EMPEROR_INFO. */
    class C2S_COUNTRY_EMPEROR_INFO implements IC2S_COUNTRY_EMPEROR_INFO {

        /**
         * Constructs a new C2S_COUNTRY_EMPEROR_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_EMPEROR_INFO);

        /**
         * Encodes the specified C2S_COUNTRY_EMPEROR_INFO message. Does not implicitly {@link gameProto.C2S_COUNTRY_EMPEROR_INFO.verify|verify} messages.
         * @param message C2S_COUNTRY_EMPEROR_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_EMPEROR_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_EMPEROR_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_EMPEROR_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_EMPEROR_INFO;
    }

    /** Properties of a S2C_COUNTRY_EMPEROR_INFO. */
    interface IS2C_COUNTRY_EMPEROR_INFO {

        /** S2C_COUNTRY_EMPEROR_INFO nickName */
        nickName?: (string|null);

        /** S2C_COUNTRY_EMPEROR_INFO head */
        head?: (number|null);

        /** S2C_COUNTRY_EMPEROR_INFO fight */
        fight?: (number|null);

        /** S2C_COUNTRY_EMPEROR_INFO country */
        country?: (number|null);

        /** S2C_COUNTRY_EMPEROR_INFO guild */
        guild?: (string|null);
    }

    /** Represents a S2C_COUNTRY_EMPEROR_INFO. */
    class S2C_COUNTRY_EMPEROR_INFO implements IS2C_COUNTRY_EMPEROR_INFO {

        /**
         * Constructs a new S2C_COUNTRY_EMPEROR_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_EMPEROR_INFO);

        /** S2C_COUNTRY_EMPEROR_INFO nickName. */
        public nickName: string;

        /** S2C_COUNTRY_EMPEROR_INFO head. */
        public head: number;

        /** S2C_COUNTRY_EMPEROR_INFO fight. */
        public fight: number;

        /** S2C_COUNTRY_EMPEROR_INFO country. */
        public country: number;

        /** S2C_COUNTRY_EMPEROR_INFO guild. */
        public guild: string;

        /**
         * Encodes the specified S2C_COUNTRY_EMPEROR_INFO message. Does not implicitly {@link gameProto.S2C_COUNTRY_EMPEROR_INFO.verify|verify} messages.
         * @param message S2C_COUNTRY_EMPEROR_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_EMPEROR_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_EMPEROR_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_EMPEROR_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_EMPEROR_INFO;
    }

    /** Properties of a C2S_CITY_CHANGE_INFO_LIST. */
    interface IC2S_CITY_CHANGE_INFO_LIST {
    }

    /** Represents a C2S_CITY_CHANGE_INFO_LIST. */
    class C2S_CITY_CHANGE_INFO_LIST implements IC2S_CITY_CHANGE_INFO_LIST {

        /**
         * Constructs a new C2S_CITY_CHANGE_INFO_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_CHANGE_INFO_LIST);

        /**
         * Encodes the specified C2S_CITY_CHANGE_INFO_LIST message. Does not implicitly {@link gameProto.C2S_CITY_CHANGE_INFO_LIST.verify|verify} messages.
         * @param message C2S_CITY_CHANGE_INFO_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_CHANGE_INFO_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_CHANGE_INFO_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_CHANGE_INFO_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_CHANGE_INFO_LIST;
    }

    /** Properties of a S2C_CITY_CHANGE_INFO_LIST. */
    interface IS2C_CITY_CHANGE_INFO_LIST {

        /** S2C_CITY_CHANGE_INFO_LIST infos */
        infos?: (gameProto.ICityChangeInfo[]|null);
    }

    /** Represents a S2C_CITY_CHANGE_INFO_LIST. */
    class S2C_CITY_CHANGE_INFO_LIST implements IS2C_CITY_CHANGE_INFO_LIST {

        /**
         * Constructs a new S2C_CITY_CHANGE_INFO_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_CHANGE_INFO_LIST);

        /** S2C_CITY_CHANGE_INFO_LIST infos. */
        public infos: gameProto.ICityChangeInfo[];

        /**
         * Encodes the specified S2C_CITY_CHANGE_INFO_LIST message. Does not implicitly {@link gameProto.S2C_CITY_CHANGE_INFO_LIST.verify|verify} messages.
         * @param message S2C_CITY_CHANGE_INFO_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_CHANGE_INFO_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_CHANGE_INFO_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_CHANGE_INFO_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_CHANGE_INFO_LIST;
    }

    /** Properties of a S2C_CITY_CHANGE_INFO. */
    interface IS2C_CITY_CHANGE_INFO {

        /** S2C_CITY_CHANGE_INFO infos */
        infos?: (gameProto.ICityChangeInfo|null);
    }

    /** Represents a S2C_CITY_CHANGE_INFO. */
    class S2C_CITY_CHANGE_INFO implements IS2C_CITY_CHANGE_INFO {

        /**
         * Constructs a new S2C_CITY_CHANGE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_CHANGE_INFO);

        /** S2C_CITY_CHANGE_INFO infos. */
        public infos?: (gameProto.ICityChangeInfo|null);

        /**
         * Encodes the specified S2C_CITY_CHANGE_INFO message. Does not implicitly {@link gameProto.S2C_CITY_CHANGE_INFO.verify|verify} messages.
         * @param message S2C_CITY_CHANGE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_CHANGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_CHANGE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_CHANGE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_CHANGE_INFO;
    }

    /** Properties of an ArmyGroup. */
    interface IArmyGroup {

        /** ArmyGroup id */
        id: number;

        /** ArmyGroup head */
        head: gameProto.IHeadPortrait;

        /** ArmyGroup guildName */
        guildName: string;

        /** ArmyGroup fight */
        fight: number;

        /** ArmyGroup troopsRate */
        troopsRate: number;
    }

    /** Represents an ArmyGroup. */
    class ArmyGroup implements IArmyGroup {

        /**
         * Constructs a new ArmyGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArmyGroup);

        /** ArmyGroup id. */
        public id: number;

        /** ArmyGroup head. */
        public head: gameProto.IHeadPortrait;

        /** ArmyGroup guildName. */
        public guildName: string;

        /** ArmyGroup fight. */
        public fight: number;

        /** ArmyGroup troopsRate. */
        public troopsRate: number;

        /**
         * Encodes the specified ArmyGroup message. Does not implicitly {@link gameProto.ArmyGroup.verify|verify} messages.
         * @param message ArmyGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArmyGroup, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArmyGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArmyGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArmyGroup;
    }

    /** Properties of an ArmyGroupHp. */
    interface IArmyGroupHp {

        /** ArmyGroupHp id */
        id: number;

        /** ArmyGroupHp troopsRate */
        troopsRate: number;
    }

    /** Represents an ArmyGroupHp. */
    class ArmyGroupHp implements IArmyGroupHp {

        /**
         * Constructs a new ArmyGroupHp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IArmyGroupHp);

        /** ArmyGroupHp id. */
        public id: number;

        /** ArmyGroupHp troopsRate. */
        public troopsRate: number;

        /**
         * Encodes the specified ArmyGroupHp message. Does not implicitly {@link gameProto.ArmyGroupHp.verify|verify} messages.
         * @param message ArmyGroupHp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IArmyGroupHp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ArmyGroupHp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ArmyGroupHp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ArmyGroupHp;
    }

    /** Properties of a CommanderDataVo. */
    interface ICommanderDataVo {

        /** CommanderDataVo playerId */
        playerId?: (number|null);

        /** CommanderDataVo head */
        head?: (number|null);

        /** CommanderDataVo nickName */
        nickName?: (string|null);

        /** CommanderDataVo vipLevel */
        vipLevel?: (number|null);

        /** CommanderDataVo troopNum */
        troopNum?: (number|null);
    }

    /** Represents a CommanderDataVo. */
    class CommanderDataVo implements ICommanderDataVo {

        /**
         * Constructs a new CommanderDataVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICommanderDataVo);

        /** CommanderDataVo playerId. */
        public playerId: number;

        /** CommanderDataVo head. */
        public head: number;

        /** CommanderDataVo nickName. */
        public nickName: string;

        /** CommanderDataVo vipLevel. */
        public vipLevel: number;

        /** CommanderDataVo troopNum. */
        public troopNum: number;

        /**
         * Encodes the specified CommanderDataVo message. Does not implicitly {@link gameProto.CommanderDataVo.verify|verify} messages.
         * @param message CommanderDataVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICommanderDataVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CommanderDataVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommanderDataVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CommanderDataVo;
    }

    /** Properties of a ServerWarVo. */
    interface IServerWarVo {

        /** ServerWarVo serverId */
        serverId: number;

        /** ServerWarVo emperorData */
        emperorData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo weiKingData */
        weiKingData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo shuKingData */
        shuKingData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo wuKingData */
        wuKingData?: (gameProto.ICommanderDataVo|null);
    }

    /** Represents a ServerWarVo. */
    class ServerWarVo implements IServerWarVo {

        /**
         * Constructs a new ServerWarVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IServerWarVo);

        /** ServerWarVo serverId. */
        public serverId: number;

        /** ServerWarVo emperorData. */
        public emperorData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo weiKingData. */
        public weiKingData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo shuKingData. */
        public shuKingData?: (gameProto.ICommanderDataVo|null);

        /** ServerWarVo wuKingData. */
        public wuKingData?: (gameProto.ICommanderDataVo|null);

        /**
         * Encodes the specified ServerWarVo message. Does not implicitly {@link gameProto.ServerWarVo.verify|verify} messages.
         * @param message ServerWarVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IServerWarVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ServerWarVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServerWarVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ServerWarVo;
    }

    /** Properties of a ServerWarAreaSyncVo. */
    interface IServerWarAreaSyncVo {

        /** ServerWarAreaSyncVo id */
        id: number;

        /** ServerWarAreaSyncVo occupant */
        occupant: number;

        /** ServerWarAreaSyncVo teamNumA */
        teamNumA: number;

        /** ServerWarAreaSyncVo teamNumB */
        teamNumB: number;

        /** ServerWarAreaSyncVo battleServerId */
        battleServerId: number;
    }

    /** Represents a ServerWarAreaSyncVo. */
    class ServerWarAreaSyncVo implements IServerWarAreaSyncVo {

        /**
         * Constructs a new ServerWarAreaSyncVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IServerWarAreaSyncVo);

        /** ServerWarAreaSyncVo id. */
        public id: number;

        /** ServerWarAreaSyncVo occupant. */
        public occupant: number;

        /** ServerWarAreaSyncVo teamNumA. */
        public teamNumA: number;

        /** ServerWarAreaSyncVo teamNumB. */
        public teamNumB: number;

        /** ServerWarAreaSyncVo battleServerId. */
        public battleServerId: number;

        /**
         * Encodes the specified ServerWarAreaSyncVo message. Does not implicitly {@link gameProto.ServerWarAreaSyncVo.verify|verify} messages.
         * @param message ServerWarAreaSyncVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IServerWarAreaSyncVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ServerWarAreaSyncVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServerWarAreaSyncVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ServerWarAreaSyncVo;
    }

    /** Properties of a ServerWarAreaVo. */
    interface IServerWarAreaVo {

        /** ServerWarAreaVo id */
        id: number;

        /** ServerWarAreaVo areaId */
        areaId: number;

        /** ServerWarAreaVo type */
        type: number;

        /** ServerWarAreaVo occupant */
        occupant: number;
    }

    /** Represents a ServerWarAreaVo. */
    class ServerWarAreaVo implements IServerWarAreaVo {

        /**
         * Constructs a new ServerWarAreaVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IServerWarAreaVo);

        /** ServerWarAreaVo id. */
        public id: number;

        /** ServerWarAreaVo areaId. */
        public areaId: number;

        /** ServerWarAreaVo type. */
        public type: number;

        /** ServerWarAreaVo occupant. */
        public occupant: number;

        /**
         * Encodes the specified ServerWarAreaVo message. Does not implicitly {@link gameProto.ServerWarAreaVo.verify|verify} messages.
         * @param message ServerWarAreaVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IServerWarAreaVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ServerWarAreaVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ServerWarAreaVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ServerWarAreaVo;
    }

    /** Properties of a WarsandServerVo. */
    interface IWarsandServerVo {

        /** WarsandServerVo serverId */
        serverId: number;

        /** WarsandServerVo status */
        status: number;
    }

    /** Represents a WarsandServerVo. */
    class WarsandServerVo implements IWarsandServerVo {

        /**
         * Constructs a new WarsandServerVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarsandServerVo);

        /** WarsandServerVo serverId. */
        public serverId: number;

        /** WarsandServerVo status. */
        public status: number;

        /**
         * Encodes the specified WarsandServerVo message. Does not implicitly {@link gameProto.WarsandServerVo.verify|verify} messages.
         * @param message WarsandServerVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarsandServerVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarsandServerVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarsandServerVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarsandServerVo;
    }

    /** Properties of a WarSandCityVo. */
    interface IWarSandCityVo {

        /** WarSandCityVo cityId */
        cityId: number;

        /** WarSandCityVo servers */
        servers?: (gameProto.IWarsandServerVo[]|null);
    }

    /** Represents a WarSandCityVo. */
    class WarSandCityVo implements IWarSandCityVo {

        /**
         * Constructs a new WarSandCityVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarSandCityVo);

        /** WarSandCityVo cityId. */
        public cityId: number;

        /** WarSandCityVo servers. */
        public servers: gameProto.IWarsandServerVo[];

        /**
         * Encodes the specified WarSandCityVo message. Does not implicitly {@link gameProto.WarSandCityVo.verify|verify} messages.
         * @param message WarSandCityVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarSandCityVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarSandCityVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarSandCityVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarSandCityVo;
    }

    /** Properties of a WarAreaVo. */
    interface IWarAreaVo {

        /** WarAreaVo areaId */
        areaId: number;

        /** WarAreaVo occupant */
        occupant?: (number|null);

        /** WarAreaVo warAreaId */
        warAreaId: number;

        /** WarAreaVo defTeamNum */
        defTeamNum?: (number|null);

        /** WarAreaVo attTeamNum */
        attTeamNum?: (number|null);

        /** WarAreaVo towerNum */
        towerNum?: (boolean[]|null);

        /** WarAreaVo status */
        status: number;
    }

    /** Represents a WarAreaVo. */
    class WarAreaVo implements IWarAreaVo {

        /**
         * Constructs a new WarAreaVo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWarAreaVo);

        /** WarAreaVo areaId. */
        public areaId: number;

        /** WarAreaVo occupant. */
        public occupant: number;

        /** WarAreaVo warAreaId. */
        public warAreaId: number;

        /** WarAreaVo defTeamNum. */
        public defTeamNum: number;

        /** WarAreaVo attTeamNum. */
        public attTeamNum: number;

        /** WarAreaVo towerNum. */
        public towerNum: boolean[];

        /** WarAreaVo status. */
        public status: number;

        /**
         * Encodes the specified WarAreaVo message. Does not implicitly {@link gameProto.WarAreaVo.verify|verify} messages.
         * @param message WarAreaVo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWarAreaVo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarAreaVo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarAreaVo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WarAreaVo;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_TROOPS_INFO. */
    interface IS2C_CROSS_SERVER_WAR_TROOPS_INFO {

        /** S2C_CROSS_SERVER_WAR_TROOPS_INFO totalTroops */
        totalTroops: number;
    }

    /** Represents a S2C_CROSS_SERVER_WAR_TROOPS_INFO. */
    class S2C_CROSS_SERVER_WAR_TROOPS_INFO implements IS2C_CROSS_SERVER_WAR_TROOPS_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_TROOPS_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_TROOPS_INFO);

        /** S2C_CROSS_SERVER_WAR_TROOPS_INFO totalTroops. */
        public totalTroops: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_TROOPS_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_TROOPS_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_TROOPS_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_TROOPS_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_TROOPS_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_TROOPS_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_TROOPS_INFO;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_ENTER. */
    interface IC2S_CROSS_SERVER_WAR_ENTER {

        /** C2S_CROSS_SERVER_WAR_ENTER enter */
        enter: number;
    }

    /** Represents a C2S_CROSS_SERVER_WAR_ENTER. */
    class C2S_CROSS_SERVER_WAR_ENTER implements IC2S_CROSS_SERVER_WAR_ENTER {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_ENTER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_ENTER);

        /** C2S_CROSS_SERVER_WAR_ENTER enter. */
        public enter: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_ENTER message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_ENTER.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_ENTER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_ENTER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_ENTER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_ENTER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_ENTER;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_ENTER. */
    interface IS2C_CROSS_SERVER_WAR_ENTER {

        /** S2C_CROSS_SERVER_WAR_ENTER areaList */
        areaList?: (gameProto.IWarAreaVo[]|null);

        /** S2C_CROSS_SERVER_WAR_ENTER group */
        group?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_ENTER. */
    class S2C_CROSS_SERVER_WAR_ENTER implements IS2C_CROSS_SERVER_WAR_ENTER {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_ENTER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_ENTER);

        /** S2C_CROSS_SERVER_WAR_ENTER areaList. */
        public areaList: gameProto.IWarAreaVo[];

        /** S2C_CROSS_SERVER_WAR_ENTER group. */
        public group: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_ENTER message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_ENTER.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_ENTER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_ENTER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_ENTER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_ENTER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_ENTER;
    }

    /** Properties of a S2C_CROSS_SERVER_GATE_HP. */
    interface IS2C_CROSS_SERVER_GATE_HP {

        /** S2C_CROSS_SERVER_GATE_HP myHpRate */
        myHpRate: number;

        /** S2C_CROSS_SERVER_GATE_HP enemyHpRate */
        enemyHpRate: number;
    }

    /** Represents a S2C_CROSS_SERVER_GATE_HP. */
    class S2C_CROSS_SERVER_GATE_HP implements IS2C_CROSS_SERVER_GATE_HP {

        /**
         * Constructs a new S2C_CROSS_SERVER_GATE_HP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GATE_HP);

        /** S2C_CROSS_SERVER_GATE_HP myHpRate. */
        public myHpRate: number;

        /** S2C_CROSS_SERVER_GATE_HP enemyHpRate. */
        public enemyHpRate: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GATE_HP message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GATE_HP.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GATE_HP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GATE_HP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GATE_HP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GATE_HP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GATE_HP;
    }

    /** Properties of a S2C_CROSS_SERVER_BUFFER_INFO. */
    interface IS2C_CROSS_SERVER_BUFFER_INFO {
    }

    /** Represents a S2C_CROSS_SERVER_BUFFER_INFO. */
    class S2C_CROSS_SERVER_BUFFER_INFO implements IS2C_CROSS_SERVER_BUFFER_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_BUFFER_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_BUFFER_INFO);

        /**
         * Encodes the specified S2C_CROSS_SERVER_BUFFER_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_BUFFER_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_BUFFER_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_BUFFER_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_BUFFER_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_BUFFER_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_BUFFER_INFO;
    }

    /** Properties of a S2C_CROSS_SERVER_ARMY_STATUS. */
    interface IS2C_CROSS_SERVER_ARMY_STATUS {

        /** S2C_CROSS_SERVER_ARMY_STATUS isWar */
        isWar: boolean;
    }

    /** Represents a S2C_CROSS_SERVER_ARMY_STATUS. */
    class S2C_CROSS_SERVER_ARMY_STATUS implements IS2C_CROSS_SERVER_ARMY_STATUS {

        /**
         * Constructs a new S2C_CROSS_SERVER_ARMY_STATUS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_ARMY_STATUS);

        /** S2C_CROSS_SERVER_ARMY_STATUS isWar. */
        public isWar: boolean;

        /**
         * Encodes the specified S2C_CROSS_SERVER_ARMY_STATUS message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_ARMY_STATUS.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_ARMY_STATUS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_ARMY_STATUS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_ARMY_STATUS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_ARMY_STATUS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_ARMY_STATUS;
    }

    /** Properties of a S2C_CROSS_SERVER_CITY_STATUS. */
    interface IS2C_CROSS_SERVER_CITY_STATUS {

        /** S2C_CROSS_SERVER_CITY_STATUS isGate */
        isGate?: (boolean|null);

        /** S2C_CROSS_SERVER_CITY_STATUS cityId */
        cityId?: (number|null);

        /** S2C_CROSS_SERVER_CITY_STATUS status */
        status?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_CITY_STATUS. */
    class S2C_CROSS_SERVER_CITY_STATUS implements IS2C_CROSS_SERVER_CITY_STATUS {

        /**
         * Constructs a new S2C_CROSS_SERVER_CITY_STATUS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_CITY_STATUS);

        /** S2C_CROSS_SERVER_CITY_STATUS isGate. */
        public isGate: boolean;

        /** S2C_CROSS_SERVER_CITY_STATUS cityId. */
        public cityId: number;

        /** S2C_CROSS_SERVER_CITY_STATUS status. */
        public status: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_CITY_STATUS message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_CITY_STATUS.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_CITY_STATUS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_CITY_STATUS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_CITY_STATUS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_CITY_STATUS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_CITY_STATUS;
    }

    /** Properties of a S2C_CROSS_SERVER_GATE_INFO. */
    interface IS2C_CROSS_SERVER_GATE_INFO {

        /** S2C_CROSS_SERVER_GATE_INFO nickName */
        nickName: string;

        /** S2C_CROSS_SERVER_GATE_INFO guildName */
        guildName: string;

        /** S2C_CROSS_SERVER_GATE_INFO countryId */
        countryId: number;

        /** S2C_CROSS_SERVER_GATE_INFO group */
        group?: (number|null);

        /** S2C_CROSS_SERVER_GATE_INFO cityId */
        cityId?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_GATE_INFO. */
    class S2C_CROSS_SERVER_GATE_INFO implements IS2C_CROSS_SERVER_GATE_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_GATE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GATE_INFO);

        /** S2C_CROSS_SERVER_GATE_INFO nickName. */
        public nickName: string;

        /** S2C_CROSS_SERVER_GATE_INFO guildName. */
        public guildName: string;

        /** S2C_CROSS_SERVER_GATE_INFO countryId. */
        public countryId: number;

        /** S2C_CROSS_SERVER_GATE_INFO group. */
        public group: number;

        /** S2C_CROSS_SERVER_GATE_INFO cityId. */
        public cityId: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GATE_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GATE_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GATE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GATE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GATE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GATE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GATE_INFO;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_TEAM_UPDATE. */
    interface IC2S_CROSS_SERVER_WAR_TEAM_UPDATE {

        /** C2S_CROSS_SERVER_WAR_TEAM_UPDATE order */
        order: number;

        /** C2S_CROSS_SERVER_WAR_TEAM_UPDATE generalId */
        generalId?: (number[]|null);
    }

    /** Represents a C2S_CROSS_SERVER_WAR_TEAM_UPDATE. */
    class C2S_CROSS_SERVER_WAR_TEAM_UPDATE implements IC2S_CROSS_SERVER_WAR_TEAM_UPDATE {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_TEAM_UPDATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_TEAM_UPDATE);

        /** C2S_CROSS_SERVER_WAR_TEAM_UPDATE order. */
        public order: number;

        /** C2S_CROSS_SERVER_WAR_TEAM_UPDATE generalId. */
        public generalId: number[];

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_TEAM_UPDATE message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_TEAM_UPDATE.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_TEAM_UPDATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_TEAM_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_TEAM_UPDATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_TEAM_UPDATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_TEAM_UPDATE;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_TEAM_UPDATE. */
    interface IS2C_CROSS_SERVER_WAR_TEAM_UPDATE {
    }

    /** Represents a S2C_CROSS_SERVER_WAR_TEAM_UPDATE. */
    class S2C_CROSS_SERVER_WAR_TEAM_UPDATE implements IS2C_CROSS_SERVER_WAR_TEAM_UPDATE {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_TEAM_UPDATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_TEAM_UPDATE);

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_TEAM_UPDATE message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_TEAM_UPDATE.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_TEAM_UPDATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_TEAM_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_TEAM_UPDATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_TEAM_UPDATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_TEAM_UPDATE;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS. */
    interface IC2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS {

        /** C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS order */
        order: number;
    }

    /** Represents a C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS. */
    class C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS implements IC2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS);

        /** C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS order. */
        public order: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS. */
    interface IS2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS {
    }

    /** Represents a S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS. */
    class S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS implements IS2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS);

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_TEAM_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_RIVAL_INFO. */
    interface IC2S_CROSS_SERVER_WAR_RIVAL_INFO {
    }

    /** Represents a C2S_CROSS_SERVER_WAR_RIVAL_INFO. */
    class C2S_CROSS_SERVER_WAR_RIVAL_INFO implements IC2S_CROSS_SERVER_WAR_RIVAL_INFO {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_RIVAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_RIVAL_INFO);

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_RIVAL_INFO message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_RIVAL_INFO.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_RIVAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_RIVAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_RIVAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_RIVAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_RIVAL_INFO;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_RIVAL_INFO. */
    interface IS2C_CROSS_SERVER_WAR_RIVAL_INFO {

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warCityId */
        warCityId: number;

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warA */
        warA?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warB */
        warB?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO win */
        win?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_RIVAL_INFO. */
    class S2C_CROSS_SERVER_WAR_RIVAL_INFO implements IS2C_CROSS_SERVER_WAR_RIVAL_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_RIVAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_RIVAL_INFO);

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warCityId. */
        public warCityId: number;

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warA. */
        public warA?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO warB. */
        public warB?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_RIVAL_INFO win. */
        public win: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_RIVAL_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_RIVAL_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_RIVAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_RIVAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_RIVAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_RIVAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_RIVAL_INFO;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_SAND_INFO. */
    interface IC2S_CROSS_SERVER_WAR_SAND_INFO {
    }

    /** Represents a C2S_CROSS_SERVER_WAR_SAND_INFO. */
    class C2S_CROSS_SERVER_WAR_SAND_INFO implements IC2S_CROSS_SERVER_WAR_SAND_INFO {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_SAND_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_SAND_INFO);

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_SAND_INFO message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_SAND_INFO.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_SAND_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_SAND_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_SAND_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_SAND_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_SAND_INFO;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_SAND_INFO. */
    interface IS2C_CROSS_SERVER_WAR_SAND_INFO {

        /** S2C_CROSS_SERVER_WAR_SAND_INFO cityList */
        cityList?: (gameProto.IWarSandCityVo[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_SAND_INFO. */
    class S2C_CROSS_SERVER_WAR_SAND_INFO implements IS2C_CROSS_SERVER_WAR_SAND_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_SAND_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_SAND_INFO);

        /** S2C_CROSS_SERVER_WAR_SAND_INFO cityList. */
        public cityList: gameProto.IWarSandCityVo[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_SAND_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_SAND_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_SAND_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_SAND_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_SAND_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_SAND_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_SAND_INFO;
    }

    /** Properties of a C2S_CROSS_SERVER_ARMY_GROUP. */
    interface IC2S_CROSS_SERVER_ARMY_GROUP {
    }

    /** Represents a C2S_CROSS_SERVER_ARMY_GROUP. */
    class C2S_CROSS_SERVER_ARMY_GROUP implements IC2S_CROSS_SERVER_ARMY_GROUP {

        /**
         * Constructs a new C2S_CROSS_SERVER_ARMY_GROUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_ARMY_GROUP);

        /**
         * Encodes the specified C2S_CROSS_SERVER_ARMY_GROUP message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_ARMY_GROUP.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_ARMY_GROUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_ARMY_GROUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_ARMY_GROUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_ARMY_GROUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_ARMY_GROUP;
    }

    /** Properties of a S2C_CROSS_SERVER_ARMY_GROUP. */
    interface IS2C_CROSS_SERVER_ARMY_GROUP {

        /** S2C_CROSS_SERVER_ARMY_GROUP armyType */
        armyType: number;

        /** S2C_CROSS_SERVER_ARMY_GROUP status */
        status: number;

        /** S2C_CROSS_SERVER_ARMY_GROUP armyGroup */
        armyGroup?: (gameProto.IArmyGroup[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_ARMY_GROUP. */
    class S2C_CROSS_SERVER_ARMY_GROUP implements IS2C_CROSS_SERVER_ARMY_GROUP {

        /**
         * Constructs a new S2C_CROSS_SERVER_ARMY_GROUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_ARMY_GROUP);

        /** S2C_CROSS_SERVER_ARMY_GROUP armyType. */
        public armyType: number;

        /** S2C_CROSS_SERVER_ARMY_GROUP status. */
        public status: number;

        /** S2C_CROSS_SERVER_ARMY_GROUP armyGroup. */
        public armyGroup: gameProto.IArmyGroup[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_ARMY_GROUP message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_ARMY_GROUP.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_ARMY_GROUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_ARMY_GROUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_ARMY_GROUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_ARMY_GROUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_ARMY_GROUP;
    }

    /** Properties of a C2S_CROSS_SERVER_ARMY_HP. */
    interface IC2S_CROSS_SERVER_ARMY_HP {
    }

    /** Represents a C2S_CROSS_SERVER_ARMY_HP. */
    class C2S_CROSS_SERVER_ARMY_HP implements IC2S_CROSS_SERVER_ARMY_HP {

        /**
         * Constructs a new C2S_CROSS_SERVER_ARMY_HP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_ARMY_HP);

        /**
         * Encodes the specified C2S_CROSS_SERVER_ARMY_HP message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_ARMY_HP.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_ARMY_HP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_ARMY_HP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_ARMY_HP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_ARMY_HP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_ARMY_HP;
    }

    /** Properties of a S2C_CROSS_SERVER_ARMY_HP. */
    interface IS2C_CROSS_SERVER_ARMY_HP {

        /** S2C_CROSS_SERVER_ARMY_HP status */
        status: number;

        /** S2C_CROSS_SERVER_ARMY_HP armyGroupHp */
        armyGroupHp?: (gameProto.IArmyGroupHp[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_ARMY_HP. */
    class S2C_CROSS_SERVER_ARMY_HP implements IS2C_CROSS_SERVER_ARMY_HP {

        /**
         * Constructs a new S2C_CROSS_SERVER_ARMY_HP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_ARMY_HP);

        /** S2C_CROSS_SERVER_ARMY_HP status. */
        public status: number;

        /** S2C_CROSS_SERVER_ARMY_HP armyGroupHp. */
        public armyGroupHp: gameProto.IArmyGroupHp[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_ARMY_HP message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_ARMY_HP.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_ARMY_HP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_ARMY_HP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_ARMY_HP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_ARMY_HP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_ARMY_HP;
    }

    /** Properties of a C2S_CROSS_SERVER_INFO. */
    interface IC2S_CROSS_SERVER_INFO {
    }

    /** Represents a C2S_CROSS_SERVER_INFO. */
    class C2S_CROSS_SERVER_INFO implements IC2S_CROSS_SERVER_INFO {

        /**
         * Constructs a new C2S_CROSS_SERVER_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_INFO);

        /**
         * Encodes the specified C2S_CROSS_SERVER_INFO message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_INFO.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_INFO;
    }

    /** Properties of a S2C_CROSS_SERVER_INFO. */
    interface IS2C_CROSS_SERVER_INFO {

        /** S2C_CROSS_SERVER_INFO status */
        status?: (number|null);

        /** S2C_CROSS_SERVER_INFO rewardStatus */
        rewardStatus?: (number|null);

        /** S2C_CROSS_SERVER_INFO openTime */
        openTime?: (number|null);

        /** S2C_CROSS_SERVER_INFO closeTime */
        closeTime?: (number|null);

        /** S2C_CROSS_SERVER_INFO honorBoxIds */
        honorBoxIds?: (number[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_INFO. */
    class S2C_CROSS_SERVER_INFO implements IS2C_CROSS_SERVER_INFO {

        /**
         * Constructs a new S2C_CROSS_SERVER_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_INFO);

        /** S2C_CROSS_SERVER_INFO status. */
        public status: number;

        /** S2C_CROSS_SERVER_INFO rewardStatus. */
        public rewardStatus: number;

        /** S2C_CROSS_SERVER_INFO openTime. */
        public openTime: number;

        /** S2C_CROSS_SERVER_INFO closeTime. */
        public closeTime: number;

        /** S2C_CROSS_SERVER_INFO honorBoxIds. */
        public honorBoxIds: number[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_INFO message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_INFO.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_INFO;
    }

    /** Properties of a S2C_CROSS_SERVER_CITY_CHANGE. */
    interface IS2C_CROSS_SERVER_CITY_CHANGE {

        /** S2C_CROSS_SERVER_CITY_CHANGE areaData */
        areaData: gameProto.IWarAreaVo;
    }

    /** Represents a S2C_CROSS_SERVER_CITY_CHANGE. */
    class S2C_CROSS_SERVER_CITY_CHANGE implements IS2C_CROSS_SERVER_CITY_CHANGE {

        /**
         * Constructs a new S2C_CROSS_SERVER_CITY_CHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_CITY_CHANGE);

        /** S2C_CROSS_SERVER_CITY_CHANGE areaData. */
        public areaData: gameProto.IWarAreaVo;

        /**
         * Encodes the specified S2C_CROSS_SERVER_CITY_CHANGE message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_CITY_CHANGE.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_CITY_CHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_CITY_CHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_CITY_CHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_CITY_CHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_CITY_CHANGE;
    }

    /** Properties of a C2S_CROSS_SERVER_TEAM_MOVE. */
    interface IC2S_CROSS_SERVER_TEAM_MOVE {

        /** C2S_CROSS_SERVER_TEAM_MOVE teamType */
        teamType: number;

        /** C2S_CROSS_SERVER_TEAM_MOVE teamId */
        teamId: number;

        /** C2S_CROSS_SERVER_TEAM_MOVE toCityId */
        toCityId: number;
    }

    /** Represents a C2S_CROSS_SERVER_TEAM_MOVE. */
    class C2S_CROSS_SERVER_TEAM_MOVE implements IC2S_CROSS_SERVER_TEAM_MOVE {

        /**
         * Constructs a new C2S_CROSS_SERVER_TEAM_MOVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_TEAM_MOVE);

        /** C2S_CROSS_SERVER_TEAM_MOVE teamType. */
        public teamType: number;

        /** C2S_CROSS_SERVER_TEAM_MOVE teamId. */
        public teamId: number;

        /** C2S_CROSS_SERVER_TEAM_MOVE toCityId. */
        public toCityId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_TEAM_MOVE message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_TEAM_MOVE.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_TEAM_MOVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_TEAM_MOVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_TEAM_MOVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_TEAM_MOVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_TEAM_MOVE;
    }

    /** Properties of a S2C_CROSS_SERVER_TEAM_MOVE. */
    interface IS2C_CROSS_SERVER_TEAM_MOVE {

        /** S2C_CROSS_SERVER_TEAM_MOVE playerName */
        playerName: string;

        /** S2C_CROSS_SERVER_TEAM_MOVE occupant */
        occupant: number;

        /** S2C_CROSS_SERVER_TEAM_MOVE fromCityId */
        fromCityId: number;

        /** S2C_CROSS_SERVER_TEAM_MOVE toCityId */
        toCityId: number;
    }

    /** Represents a S2C_CROSS_SERVER_TEAM_MOVE. */
    class S2C_CROSS_SERVER_TEAM_MOVE implements IS2C_CROSS_SERVER_TEAM_MOVE {

        /**
         * Constructs a new S2C_CROSS_SERVER_TEAM_MOVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_TEAM_MOVE);

        /** S2C_CROSS_SERVER_TEAM_MOVE playerName. */
        public playerName: string;

        /** S2C_CROSS_SERVER_TEAM_MOVE occupant. */
        public occupant: number;

        /** S2C_CROSS_SERVER_TEAM_MOVE fromCityId. */
        public fromCityId: number;

        /** S2C_CROSS_SERVER_TEAM_MOVE toCityId. */
        public toCityId: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_TEAM_MOVE message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_TEAM_MOVE.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_TEAM_MOVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_TEAM_MOVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_TEAM_MOVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_TEAM_MOVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_TEAM_MOVE;
    }

    /** Properties of a C2S_CROSS_SERVER_ATTACK_GATE. */
    interface IC2S_CROSS_SERVER_ATTACK_GATE {

        /** C2S_CROSS_SERVER_ATTACK_GATE teamType */
        teamType: number;

        /** C2S_CROSS_SERVER_ATTACK_GATE teamId */
        teamId: number;
    }

    /** Represents a C2S_CROSS_SERVER_ATTACK_GATE. */
    class C2S_CROSS_SERVER_ATTACK_GATE implements IC2S_CROSS_SERVER_ATTACK_GATE {

        /**
         * Constructs a new C2S_CROSS_SERVER_ATTACK_GATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_ATTACK_GATE);

        /** C2S_CROSS_SERVER_ATTACK_GATE teamType. */
        public teamType: number;

        /** C2S_CROSS_SERVER_ATTACK_GATE teamId. */
        public teamId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_ATTACK_GATE message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_ATTACK_GATE.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_ATTACK_GATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_ATTACK_GATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_ATTACK_GATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_ATTACK_GATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_ATTACK_GATE;
    }

    /** Properties of a C2S_CROSS_SERVER_BUY_TOWER. */
    interface IC2S_CROSS_SERVER_BUY_TOWER {

        /** C2S_CROSS_SERVER_BUY_TOWER index */
        index: number;

        /** C2S_CROSS_SERVER_BUY_TOWER areaId */
        areaId: number;
    }

    /** Represents a C2S_CROSS_SERVER_BUY_TOWER. */
    class C2S_CROSS_SERVER_BUY_TOWER implements IC2S_CROSS_SERVER_BUY_TOWER {

        /**
         * Constructs a new C2S_CROSS_SERVER_BUY_TOWER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_BUY_TOWER);

        /** C2S_CROSS_SERVER_BUY_TOWER index. */
        public index: number;

        /** C2S_CROSS_SERVER_BUY_TOWER areaId. */
        public areaId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_BUY_TOWER message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_BUY_TOWER.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_BUY_TOWER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_BUY_TOWER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_BUY_TOWER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_BUY_TOWER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_BUY_TOWER;
    }

    /** Properties of a C2S_CROSS_SERVER_BUY_BUFFER. */
    interface IC2S_CROSS_SERVER_BUY_BUFFER {

        /** C2S_CROSS_SERVER_BUY_BUFFER id */
        id: number;
    }

    /** Represents a C2S_CROSS_SERVER_BUY_BUFFER. */
    class C2S_CROSS_SERVER_BUY_BUFFER implements IC2S_CROSS_SERVER_BUY_BUFFER {

        /**
         * Constructs a new C2S_CROSS_SERVER_BUY_BUFFER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_BUY_BUFFER);

        /** C2S_CROSS_SERVER_BUY_BUFFER id. */
        public id: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_BUY_BUFFER message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_BUY_BUFFER.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_BUY_BUFFER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_BUY_BUFFER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_BUY_BUFFER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_BUY_BUFFER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_BUY_BUFFER;
    }

    /** Properties of a S2C_CROSS_SERVER_GET_HONOR. */
    interface IS2C_CROSS_SERVER_GET_HONOR {

        /** S2C_CROSS_SERVER_GET_HONOR honor */
        honor: number;
    }

    /** Represents a S2C_CROSS_SERVER_GET_HONOR. */
    class S2C_CROSS_SERVER_GET_HONOR implements IS2C_CROSS_SERVER_GET_HONOR {

        /**
         * Constructs a new S2C_CROSS_SERVER_GET_HONOR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GET_HONOR);

        /** S2C_CROSS_SERVER_GET_HONOR honor. */
        public honor: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GET_HONOR message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GET_HONOR.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GET_HONOR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GET_HONOR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GET_HONOR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GET_HONOR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GET_HONOR;
    }

    /** Properties of a C2S_CROSS_SERVER_GET_HONOR_BOX. */
    interface IC2S_CROSS_SERVER_GET_HONOR_BOX {

        /** C2S_CROSS_SERVER_GET_HONOR_BOX boxId */
        boxId: number;
    }

    /** Represents a C2S_CROSS_SERVER_GET_HONOR_BOX. */
    class C2S_CROSS_SERVER_GET_HONOR_BOX implements IC2S_CROSS_SERVER_GET_HONOR_BOX {

        /**
         * Constructs a new C2S_CROSS_SERVER_GET_HONOR_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_GET_HONOR_BOX);

        /** C2S_CROSS_SERVER_GET_HONOR_BOX boxId. */
        public boxId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_GET_HONOR_BOX message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_GET_HONOR_BOX.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_GET_HONOR_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_GET_HONOR_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_GET_HONOR_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_GET_HONOR_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_GET_HONOR_BOX;
    }

    /** Properties of a S2C_CROSS_SERVER_GET_HONOR_BOX. */
    interface IS2C_CROSS_SERVER_GET_HONOR_BOX {

        /** S2C_CROSS_SERVER_GET_HONOR_BOX boxId */
        boxId: number;
    }

    /** Represents a S2C_CROSS_SERVER_GET_HONOR_BOX. */
    class S2C_CROSS_SERVER_GET_HONOR_BOX implements IS2C_CROSS_SERVER_GET_HONOR_BOX {

        /**
         * Constructs a new S2C_CROSS_SERVER_GET_HONOR_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GET_HONOR_BOX);

        /** S2C_CROSS_SERVER_GET_HONOR_BOX boxId. */
        public boxId: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GET_HONOR_BOX message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GET_HONOR_BOX.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GET_HONOR_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GET_HONOR_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GET_HONOR_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GET_HONOR_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GET_HONOR_BOX;
    }

    /** Properties of a C2S_CROSS_SERVER_GET_DAY_REWARD. */
    interface IC2S_CROSS_SERVER_GET_DAY_REWARD {
    }

    /** Represents a C2S_CROSS_SERVER_GET_DAY_REWARD. */
    class C2S_CROSS_SERVER_GET_DAY_REWARD implements IC2S_CROSS_SERVER_GET_DAY_REWARD {

        /**
         * Constructs a new C2S_CROSS_SERVER_GET_DAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_GET_DAY_REWARD);

        /**
         * Encodes the specified C2S_CROSS_SERVER_GET_DAY_REWARD message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_GET_DAY_REWARD.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_GET_DAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_GET_DAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_GET_DAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_GET_DAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_GET_DAY_REWARD;
    }

    /** Properties of a S2C_CROSS_SERVER_GET_DAY_REWARD. */
    interface IS2C_CROSS_SERVER_GET_DAY_REWARD {

        /** S2C_CROSS_SERVER_GET_DAY_REWARD duanWei */
        duanWei: number;
    }

    /** Represents a S2C_CROSS_SERVER_GET_DAY_REWARD. */
    class S2C_CROSS_SERVER_GET_DAY_REWARD implements IS2C_CROSS_SERVER_GET_DAY_REWARD {

        /**
         * Constructs a new S2C_CROSS_SERVER_GET_DAY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GET_DAY_REWARD);

        /** S2C_CROSS_SERVER_GET_DAY_REWARD duanWei. */
        public duanWei: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GET_DAY_REWARD message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GET_DAY_REWARD.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GET_DAY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GET_DAY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GET_DAY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GET_DAY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GET_DAY_REWARD;
    }

    /** Properties of a S2C_CROSS_SERVER_SETTLEMENT_DATA. */
    interface IS2C_CROSS_SERVER_SETTLEMENT_DATA {

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA isWin */
        isWin: boolean;

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA duanWei */
        duanWei: number;

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA bestList */
        bestList?: (string[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_SETTLEMENT_DATA. */
    class S2C_CROSS_SERVER_SETTLEMENT_DATA implements IS2C_CROSS_SERVER_SETTLEMENT_DATA {

        /**
         * Constructs a new S2C_CROSS_SERVER_SETTLEMENT_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_SETTLEMENT_DATA);

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA isWin. */
        public isWin: boolean;

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA duanWei. */
        public duanWei: number;

        /** S2C_CROSS_SERVER_SETTLEMENT_DATA bestList. */
        public bestList: string[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_SETTLEMENT_DATA message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_SETTLEMENT_DATA.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_SETTLEMENT_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_SETTLEMENT_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_SETTLEMENT_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_SETTLEMENT_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_SETTLEMENT_DATA;
    }

    /** Properties of a S2C_CROSS_SERVER_BATTLE_SETTLEMENT. */
    interface IS2C_CROSS_SERVER_BATTLE_SETTLEMENT {

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT isVictory */
        isVictory: boolean;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT attData */
        attData: gameProto.IAttDefData;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT defData */
        defData: gameProto.IAttDefData;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT cityId */
        cityId: number;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT myCityWarData */
        myCityWarData?: (gameProto.IMyCityWarData|null);

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT isAttack */
        isAttack?: (boolean|null);
    }

    /** Represents a S2C_CROSS_SERVER_BATTLE_SETTLEMENT. */
    class S2C_CROSS_SERVER_BATTLE_SETTLEMENT implements IS2C_CROSS_SERVER_BATTLE_SETTLEMENT {

        /**
         * Constructs a new S2C_CROSS_SERVER_BATTLE_SETTLEMENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_BATTLE_SETTLEMENT);

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT isVictory. */
        public isVictory: boolean;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT attData. */
        public attData: gameProto.IAttDefData;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT defData. */
        public defData: gameProto.IAttDefData;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT cityId. */
        public cityId: number;

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT myCityWarData. */
        public myCityWarData?: (gameProto.IMyCityWarData|null);

        /** S2C_CROSS_SERVER_BATTLE_SETTLEMENT isAttack. */
        public isAttack: boolean;

        /**
         * Encodes the specified S2C_CROSS_SERVER_BATTLE_SETTLEMENT message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_BATTLE_SETTLEMENT.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_BATTLE_SETTLEMENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_BATTLE_SETTLEMENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_BATTLE_SETTLEMENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_BATTLE_SETTLEMENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_BATTLE_SETTLEMENT;
    }

    /** Properties of a C2S_CROSS_SERVER_SYNC_CITY_DATA. */
    interface IC2S_CROSS_SERVER_SYNC_CITY_DATA {
    }

    /** Represents a C2S_CROSS_SERVER_SYNC_CITY_DATA. */
    class C2S_CROSS_SERVER_SYNC_CITY_DATA implements IC2S_CROSS_SERVER_SYNC_CITY_DATA {

        /**
         * Constructs a new C2S_CROSS_SERVER_SYNC_CITY_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_SYNC_CITY_DATA);

        /**
         * Encodes the specified C2S_CROSS_SERVER_SYNC_CITY_DATA message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_SYNC_CITY_DATA.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_SYNC_CITY_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_SYNC_CITY_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_SYNC_CITY_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_SYNC_CITY_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_SYNC_CITY_DATA;
    }

    /** Properties of a S2C_CROSS_SERVER_SYNC_CITY_DATA. */
    interface IS2C_CROSS_SERVER_SYNC_CITY_DATA {

        /** S2C_CROSS_SERVER_SYNC_CITY_DATA areaLists */
        areaLists?: (gameProto.IServerWarAreaSyncVo[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_SYNC_CITY_DATA. */
    class S2C_CROSS_SERVER_SYNC_CITY_DATA implements IS2C_CROSS_SERVER_SYNC_CITY_DATA {

        /**
         * Constructs a new S2C_CROSS_SERVER_SYNC_CITY_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_SYNC_CITY_DATA);

        /** S2C_CROSS_SERVER_SYNC_CITY_DATA areaLists. */
        public areaLists: gameProto.IServerWarAreaSyncVo[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_SYNC_CITY_DATA message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_SYNC_CITY_DATA.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_SYNC_CITY_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_SYNC_CITY_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_SYNC_CITY_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_SYNC_CITY_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_SYNC_CITY_DATA;
    }

    /** Properties of a C2S_CROSS_SERVER_SIGNUP. */
    interface IC2S_CROSS_SERVER_SIGNUP {

        /** C2S_CROSS_SERVER_SIGNUP openServerTime */
        openServerTime: number;

        /** C2S_CROSS_SERVER_SIGNUP emperorData */
        emperorData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP weiKingData */
        weiKingData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP shuKingData */
        shuKingData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP wuKingData */
        wuKingData?: (gameProto.ICommanderDataVo|null);
    }

    /** Represents a C2S_CROSS_SERVER_SIGNUP. */
    class C2S_CROSS_SERVER_SIGNUP implements IC2S_CROSS_SERVER_SIGNUP {

        /**
         * Constructs a new C2S_CROSS_SERVER_SIGNUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_SIGNUP);

        /** C2S_CROSS_SERVER_SIGNUP openServerTime. */
        public openServerTime: number;

        /** C2S_CROSS_SERVER_SIGNUP emperorData. */
        public emperorData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP weiKingData. */
        public weiKingData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP shuKingData. */
        public shuKingData?: (gameProto.ICommanderDataVo|null);

        /** C2S_CROSS_SERVER_SIGNUP wuKingData. */
        public wuKingData?: (gameProto.ICommanderDataVo|null);

        /**
         * Encodes the specified C2S_CROSS_SERVER_SIGNUP message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_SIGNUP.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_SIGNUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_SIGNUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_SIGNUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_SIGNUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_SIGNUP;
    }

    /** Properties of a S2C_CROSS_SERVER_SIGNUP. */
    interface IS2C_CROSS_SERVER_SIGNUP {

        /** S2C_CROSS_SERVER_SIGNUP ret */
        ret: number;

        /** S2C_CROSS_SERVER_SIGNUP duanWei */
        duanWei: number;
    }

    /** Represents a S2C_CROSS_SERVER_SIGNUP. */
    class S2C_CROSS_SERVER_SIGNUP implements IS2C_CROSS_SERVER_SIGNUP {

        /**
         * Constructs a new S2C_CROSS_SERVER_SIGNUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_SIGNUP);

        /** S2C_CROSS_SERVER_SIGNUP ret. */
        public ret: number;

        /** S2C_CROSS_SERVER_SIGNUP duanWei. */
        public duanWei: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_SIGNUP message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_SIGNUP.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_SIGNUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_SIGNUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_SIGNUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_SIGNUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_SIGNUP;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_DATA. */
    interface IC2S_CROSS_SERVER_WAR_DATA {

        /** C2S_CROSS_SERVER_WAR_DATA serverId */
        serverId: number;

        /** C2S_CROSS_SERVER_WAR_DATA msgId */
        msgId?: (number|null);
    }

    /** Represents a C2S_CROSS_SERVER_WAR_DATA. */
    class C2S_CROSS_SERVER_WAR_DATA implements IC2S_CROSS_SERVER_WAR_DATA {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_DATA);

        /** C2S_CROSS_SERVER_WAR_DATA serverId. */
        public serverId: number;

        /** C2S_CROSS_SERVER_WAR_DATA msgId. */
        public msgId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_DATA message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_DATA.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_DATA;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_DATA. */
    interface IS2C_CROSS_SERVER_WAR_DATA {

        /** S2C_CROSS_SERVER_WAR_DATA warVo */
        warVo?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_DATA warCityId */
        warCityId?: (number|null);

        /** S2C_CROSS_SERVER_WAR_DATA msgId */
        msgId?: (number|null);

        /** S2C_CROSS_SERVER_WAR_DATA group */
        group?: (number|null);

        /** S2C_CROSS_SERVER_WAR_DATA areaLists */
        areaLists?: (gameProto.IServerWarAreaVo[]|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_DATA. */
    class S2C_CROSS_SERVER_WAR_DATA implements IS2C_CROSS_SERVER_WAR_DATA {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_DATA);

        /** S2C_CROSS_SERVER_WAR_DATA warVo. */
        public warVo?: (gameProto.IServerWarVo|null);

        /** S2C_CROSS_SERVER_WAR_DATA warCityId. */
        public warCityId: number;

        /** S2C_CROSS_SERVER_WAR_DATA msgId. */
        public msgId: number;

        /** S2C_CROSS_SERVER_WAR_DATA group. */
        public group: number;

        /** S2C_CROSS_SERVER_WAR_DATA areaLists. */
        public areaLists: gameProto.IServerWarAreaVo[];

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_DATA message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_DATA.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_DATA;
    }

    /** Properties of a C2S_CROSS_SERVER_UPDATE_CITY_TEAM. */
    interface IC2S_CROSS_SERVER_UPDATE_CITY_TEAM {

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM type */
        type?: (number|null);

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM cityAreaId */
        cityAreaId?: (number|null);

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM teamNum */
        teamNum?: (number|null);
    }

    /** Represents a C2S_CROSS_SERVER_UPDATE_CITY_TEAM. */
    class C2S_CROSS_SERVER_UPDATE_CITY_TEAM implements IC2S_CROSS_SERVER_UPDATE_CITY_TEAM {

        /**
         * Constructs a new C2S_CROSS_SERVER_UPDATE_CITY_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_UPDATE_CITY_TEAM);

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM type. */
        public type: number;

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM cityAreaId. */
        public cityAreaId: number;

        /** C2S_CROSS_SERVER_UPDATE_CITY_TEAM teamNum. */
        public teamNum: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_UPDATE_CITY_TEAM message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_UPDATE_CITY_TEAM.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_UPDATE_CITY_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_UPDATE_CITY_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_UPDATE_CITY_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_UPDATE_CITY_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_UPDATE_CITY_TEAM;
    }

    /** Properties of a S2C_CROSS_SERVER_UPDATE_CITY_TEAM. */
    interface IS2C_CROSS_SERVER_UPDATE_CITY_TEAM {

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM ret */
        ret: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM cityAreaId */
        cityAreaId?: (number|null);

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM occupant */
        occupant: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM battleId */
        battleId: number;
    }

    /** Represents a S2C_CROSS_SERVER_UPDATE_CITY_TEAM. */
    class S2C_CROSS_SERVER_UPDATE_CITY_TEAM implements IS2C_CROSS_SERVER_UPDATE_CITY_TEAM {

        /**
         * Constructs a new S2C_CROSS_SERVER_UPDATE_CITY_TEAM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_UPDATE_CITY_TEAM);

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM ret. */
        public ret: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM cityAreaId. */
        public cityAreaId: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM occupant. */
        public occupant: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_TEAM battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_UPDATE_CITY_TEAM message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_UPDATE_CITY_TEAM.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_UPDATE_CITY_TEAM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_UPDATE_CITY_TEAM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_UPDATE_CITY_TEAM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_UPDATE_CITY_TEAM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_UPDATE_CITY_TEAM;
    }

    /** Properties of a S2C_CROSS_SERVER_ENTER_WAR. */
    interface IS2C_CROSS_SERVER_ENTER_WAR {

        /** S2C_CROSS_SERVER_ENTER_WAR cityAreaId */
        cityAreaId?: (number|null);

        /** S2C_CROSS_SERVER_ENTER_WAR occupant */
        occupant: number;

        /** S2C_CROSS_SERVER_ENTER_WAR battleId */
        battleId: number;
    }

    /** Represents a S2C_CROSS_SERVER_ENTER_WAR. */
    class S2C_CROSS_SERVER_ENTER_WAR implements IS2C_CROSS_SERVER_ENTER_WAR {

        /**
         * Constructs a new S2C_CROSS_SERVER_ENTER_WAR.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_ENTER_WAR);

        /** S2C_CROSS_SERVER_ENTER_WAR cityAreaId. */
        public cityAreaId: number;

        /** S2C_CROSS_SERVER_ENTER_WAR occupant. */
        public occupant: number;

        /** S2C_CROSS_SERVER_ENTER_WAR battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_ENTER_WAR message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_ENTER_WAR.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_ENTER_WAR message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_ENTER_WAR, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_ENTER_WAR message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_ENTER_WAR
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_ENTER_WAR;
    }

    /** Properties of a S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT. */
    interface IS2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT {

        /** S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT cityAreaId */
        cityAreaId?: (number|null);

        /** S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT occupant */
        occupant?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT. */
    class S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT implements IS2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT {

        /**
         * Constructs a new S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT);

        /** S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT cityAreaId. */
        public cityAreaId: number;

        /** S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT occupant. */
        public occupant: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_UPDATE_CITY_OCCUPANT;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_VOER. */
    interface IC2S_CROSS_SERVER_WAR_VOER {

        /** C2S_CROSS_SERVER_WAR_VOER cityAreaId */
        cityAreaId?: (number|null);
    }

    /** Represents a C2S_CROSS_SERVER_WAR_VOER. */
    class C2S_CROSS_SERVER_WAR_VOER implements IC2S_CROSS_SERVER_WAR_VOER {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_VOER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_VOER);

        /** C2S_CROSS_SERVER_WAR_VOER cityAreaId. */
        public cityAreaId: number;

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_VOER message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_VOER.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_VOER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_VOER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_VOER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_VOER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_VOER;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_VOER. */
    interface IS2C_CROSS_SERVER_WAR_VOER {

        /** S2C_CROSS_SERVER_WAR_VOER cityAreaId */
        cityAreaId?: (number|null);

        /** S2C_CROSS_SERVER_WAR_VOER occupant */
        occupant?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_VOER. */
    class S2C_CROSS_SERVER_WAR_VOER implements IS2C_CROSS_SERVER_WAR_VOER {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_VOER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_VOER);

        /** S2C_CROSS_SERVER_WAR_VOER cityAreaId. */
        public cityAreaId: number;

        /** S2C_CROSS_SERVER_WAR_VOER occupant. */
        public occupant: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_VOER message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_VOER.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_VOER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_VOER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_VOER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_VOER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_VOER;
    }

    /** Properties of a S2C_CROSS_SERVER_GATE_HP_TO_ENEMY. */
    interface IS2C_CROSS_SERVER_GATE_HP_TO_ENEMY {

        /** S2C_CROSS_SERVER_GATE_HP_TO_ENEMY hpRate */
        hpRate: number;
    }

    /** Represents a S2C_CROSS_SERVER_GATE_HP_TO_ENEMY. */
    class S2C_CROSS_SERVER_GATE_HP_TO_ENEMY implements IS2C_CROSS_SERVER_GATE_HP_TO_ENEMY {

        /**
         * Constructs a new S2C_CROSS_SERVER_GATE_HP_TO_ENEMY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_GATE_HP_TO_ENEMY);

        /** S2C_CROSS_SERVER_GATE_HP_TO_ENEMY hpRate. */
        public hpRate: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_GATE_HP_TO_ENEMY message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_GATE_HP_TO_ENEMY.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_GATE_HP_TO_ENEMY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_GATE_HP_TO_ENEMY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_GATE_HP_TO_ENEMY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_GATE_HP_TO_ENEMY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_GATE_HP_TO_ENEMY;
    }

    /** Properties of a C2S_CROSS_SERVER_WAR_END. */
    interface IC2S_CROSS_SERVER_WAR_END {
    }

    /** Represents a C2S_CROSS_SERVER_WAR_END. */
    class C2S_CROSS_SERVER_WAR_END implements IC2S_CROSS_SERVER_WAR_END {

        /**
         * Constructs a new C2S_CROSS_SERVER_WAR_END.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CROSS_SERVER_WAR_END);

        /**
         * Encodes the specified C2S_CROSS_SERVER_WAR_END message. Does not implicitly {@link gameProto.C2S_CROSS_SERVER_WAR_END.verify|verify} messages.
         * @param message C2S_CROSS_SERVER_WAR_END message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CROSS_SERVER_WAR_END, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CROSS_SERVER_WAR_END message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CROSS_SERVER_WAR_END
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CROSS_SERVER_WAR_END;
    }

    /** Properties of a S2C_CROSS_SERVER_WAR_END. */
    interface IS2C_CROSS_SERVER_WAR_END {

        /** S2C_CROSS_SERVER_WAR_END duanWei */
        duanWei?: (number|null);

        /** S2C_CROSS_SERVER_WAR_END isWin */
        isWin?: (number|null);
    }

    /** Represents a S2C_CROSS_SERVER_WAR_END. */
    class S2C_CROSS_SERVER_WAR_END implements IS2C_CROSS_SERVER_WAR_END {

        /**
         * Constructs a new S2C_CROSS_SERVER_WAR_END.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CROSS_SERVER_WAR_END);

        /** S2C_CROSS_SERVER_WAR_END duanWei. */
        public duanWei: number;

        /** S2C_CROSS_SERVER_WAR_END isWin. */
        public isWin: number;

        /**
         * Encodes the specified S2C_CROSS_SERVER_WAR_END message. Does not implicitly {@link gameProto.S2C_CROSS_SERVER_WAR_END.verify|verify} messages.
         * @param message S2C_CROSS_SERVER_WAR_END message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CROSS_SERVER_WAR_END, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CROSS_SERVER_WAR_END message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CROSS_SERVER_WAR_END
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CROSS_SERVER_WAR_END;
    }

    /** Properties of an Equipment. */
    interface IEquipment {

        /** Equipment uuid */
        uuid?: (number|null);

        /** Equipment equipmentId */
        equipmentId?: (number|null);

        /** Equipment slotType */
        slotType?: (number|null);

        /** Equipment generalId */
        generalId?: (number|null);
    }

    /** Represents an Equipment. */
    class Equipment implements IEquipment {

        /**
         * Constructs a new Equipment.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEquipment);

        /** Equipment uuid. */
        public uuid: number;

        /** Equipment equipmentId. */
        public equipmentId: number;

        /** Equipment slotType. */
        public slotType: number;

        /** Equipment generalId. */
        public generalId: number;

        /**
         * Encodes the specified Equipment message. Does not implicitly {@link gameProto.Equipment.verify|verify} messages.
         * @param message Equipment message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEquipment, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an Equipment message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Equipment
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Equipment;
    }

    /** Properties of an EquipmentSlot. */
    interface IEquipmentSlot {

        /** EquipmentSlot id */
        id?: (number|null);

        /** EquipmentSlot equipmentUuid */
        equipmentUuid?: (number|null);

        /** EquipmentSlot strengthen */
        strengthen?: (number|null);

        /** EquipmentSlot grade */
        grade?: (number|null);

        /** EquipmentSlot wrought */
        wrought?: (number|null);
    }

    /** Represents an EquipmentSlot. */
    class EquipmentSlot implements IEquipmentSlot {

        /**
         * Constructs a new EquipmentSlot.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IEquipmentSlot);

        /** EquipmentSlot id. */
        public id: number;

        /** EquipmentSlot equipmentUuid. */
        public equipmentUuid: number;

        /** EquipmentSlot strengthen. */
        public strengthen: number;

        /** EquipmentSlot grade. */
        public grade: number;

        /** EquipmentSlot wrought. */
        public wrought: number;

        /**
         * Encodes the specified EquipmentSlot message. Does not implicitly {@link gameProto.EquipmentSlot.verify|verify} messages.
         * @param message EquipmentSlot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IEquipmentSlot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an EquipmentSlot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquipmentSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.EquipmentSlot;
    }

    /** Properties of a GeneralEquipment. */
    interface IGeneralEquipment {

        /** GeneralEquipment generalId */
        generalId?: (number|null);

        /** GeneralEquipment slots */
        slots?: (gameProto.IEquipmentSlot[]|null);
    }

    /** Represents a GeneralEquipment. */
    class GeneralEquipment implements IGeneralEquipment {

        /**
         * Constructs a new GeneralEquipment.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralEquipment);

        /** GeneralEquipment generalId. */
        public generalId: number;

        /** GeneralEquipment slots. */
        public slots: gameProto.IEquipmentSlot[];

        /**
         * Encodes the specified GeneralEquipment message. Does not implicitly {@link gameProto.GeneralEquipment.verify|verify} messages.
         * @param message GeneralEquipment message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralEquipment, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralEquipment message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralEquipment
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralEquipment;
    }

    /** Properties of a C2S_EQUIPMENT_INFO. */
    interface IC2S_EQUIPMENT_INFO {
    }

    /** Represents a C2S_EQUIPMENT_INFO. */
    class C2S_EQUIPMENT_INFO implements IC2S_EQUIPMENT_INFO {

        /**
         * Constructs a new C2S_EQUIPMENT_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_EQUIPMENT_INFO);

        /**
         * Encodes the specified C2S_EQUIPMENT_INFO message. Does not implicitly {@link gameProto.C2S_EQUIPMENT_INFO.verify|verify} messages.
         * @param message C2S_EQUIPMENT_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_EQUIPMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_EQUIPMENT_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_EQUIPMENT_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_EQUIPMENT_INFO;
    }

    /** Properties of a S2C_EQUIPMENT_INFO. */
    interface IS2C_EQUIPMENT_INFO {

        /** S2C_EQUIPMENT_INFO generalEquipment */
        generalEquipment?: (gameProto.IGeneralEquipment[]|null);

        /** S2C_EQUIPMENT_INFO decomposeLevel */
        decomposeLevel?: (number|null);
    }

    /** Represents a S2C_EQUIPMENT_INFO. */
    class S2C_EQUIPMENT_INFO implements IS2C_EQUIPMENT_INFO {

        /**
         * Constructs a new S2C_EQUIPMENT_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_INFO);

        /** S2C_EQUIPMENT_INFO generalEquipment. */
        public generalEquipment: gameProto.IGeneralEquipment[];

        /** S2C_EQUIPMENT_INFO decomposeLevel. */
        public decomposeLevel: number;

        /**
         * Encodes the specified S2C_EQUIPMENT_INFO message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_INFO.verify|verify} messages.
         * @param message S2C_EQUIPMENT_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_INFO;
    }

    /** Properties of a C2S_EQUIPMENT_SLOT_UPGRADE. */
    interface IC2S_EQUIPMENT_SLOT_UPGRADE {

        /** C2S_EQUIPMENT_SLOT_UPGRADE generalId */
        generalId?: (number|null);

        /** C2S_EQUIPMENT_SLOT_UPGRADE slotType */
        slotType?: (number|null);

        /** C2S_EQUIPMENT_SLOT_UPGRADE upgradeType */
        upgradeType?: (number|null);
    }

    /** Represents a C2S_EQUIPMENT_SLOT_UPGRADE. */
    class C2S_EQUIPMENT_SLOT_UPGRADE implements IC2S_EQUIPMENT_SLOT_UPGRADE {

        /**
         * Constructs a new C2S_EQUIPMENT_SLOT_UPGRADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_EQUIPMENT_SLOT_UPGRADE);

        /** C2S_EQUIPMENT_SLOT_UPGRADE generalId. */
        public generalId: number;

        /** C2S_EQUIPMENT_SLOT_UPGRADE slotType. */
        public slotType: number;

        /** C2S_EQUIPMENT_SLOT_UPGRADE upgradeType. */
        public upgradeType: number;

        /**
         * Encodes the specified C2S_EQUIPMENT_SLOT_UPGRADE message. Does not implicitly {@link gameProto.C2S_EQUIPMENT_SLOT_UPGRADE.verify|verify} messages.
         * @param message C2S_EQUIPMENT_SLOT_UPGRADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_EQUIPMENT_SLOT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_EQUIPMENT_SLOT_UPGRADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_EQUIPMENT_SLOT_UPGRADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_EQUIPMENT_SLOT_UPGRADE;
    }

    /** Properties of a S2C_EQUIPMENT_SLOT_UPGRADE. */
    interface IS2C_EQUIPMENT_SLOT_UPGRADE {

        /** S2C_EQUIPMENT_SLOT_UPGRADE generalId */
        generalId?: (number|null);

        /** S2C_EQUIPMENT_SLOT_UPGRADE upgradeType */
        upgradeType?: (number|null);

        /** S2C_EQUIPMENT_SLOT_UPGRADE slotUpgraded */
        slotUpgraded?: (gameProto.IEquipmentSlot[]|null);
    }

    /** Represents a S2C_EQUIPMENT_SLOT_UPGRADE. */
    class S2C_EQUIPMENT_SLOT_UPGRADE implements IS2C_EQUIPMENT_SLOT_UPGRADE {

        /**
         * Constructs a new S2C_EQUIPMENT_SLOT_UPGRADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_SLOT_UPGRADE);

        /** S2C_EQUIPMENT_SLOT_UPGRADE generalId. */
        public generalId: number;

        /** S2C_EQUIPMENT_SLOT_UPGRADE upgradeType. */
        public upgradeType: number;

        /** S2C_EQUIPMENT_SLOT_UPGRADE slotUpgraded. */
        public slotUpgraded: gameProto.IEquipmentSlot[];

        /**
         * Encodes the specified S2C_EQUIPMENT_SLOT_UPGRADE message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_SLOT_UPGRADE.verify|verify} messages.
         * @param message S2C_EQUIPMENT_SLOT_UPGRADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_SLOT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_SLOT_UPGRADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_SLOT_UPGRADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_SLOT_UPGRADE;
    }

    /** Properties of a C2S_GENERAL_EQUIP. */
    interface IC2S_GENERAL_EQUIP {

        /** C2S_GENERAL_EQUIP generalId */
        generalId?: (number|null);

        /** C2S_GENERAL_EQUIP equipmentUuId */
        equipmentUuId?: (number|null);

        /** C2S_GENERAL_EQUIP slotType */
        slotType?: (number|null);
    }

    /** Represents a C2S_GENERAL_EQUIP. */
    class C2S_GENERAL_EQUIP implements IC2S_GENERAL_EQUIP {

        /**
         * Constructs a new C2S_GENERAL_EQUIP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GENERAL_EQUIP);

        /** C2S_GENERAL_EQUIP generalId. */
        public generalId: number;

        /** C2S_GENERAL_EQUIP equipmentUuId. */
        public equipmentUuId: number;

        /** C2S_GENERAL_EQUIP slotType. */
        public slotType: number;

        /**
         * Encodes the specified C2S_GENERAL_EQUIP message. Does not implicitly {@link gameProto.C2S_GENERAL_EQUIP.verify|verify} messages.
         * @param message C2S_GENERAL_EQUIP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GENERAL_EQUIP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GENERAL_EQUIP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GENERAL_EQUIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GENERAL_EQUIP;
    }

    /** Properties of a S2C_GENERAL_EQUIP. */
    interface IS2C_GENERAL_EQUIP {

        /** S2C_GENERAL_EQUIP errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_GENERAL_EQUIP. */
    class S2C_GENERAL_EQUIP implements IS2C_GENERAL_EQUIP {

        /**
         * Constructs a new S2C_GENERAL_EQUIP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GENERAL_EQUIP);

        /** S2C_GENERAL_EQUIP errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_GENERAL_EQUIP message. Does not implicitly {@link gameProto.S2C_GENERAL_EQUIP.verify|verify} messages.
         * @param message S2C_GENERAL_EQUIP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GENERAL_EQUIP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GENERAL_EQUIP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GENERAL_EQUIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GENERAL_EQUIP;
    }

    /** Properties of a C2S_EQUIPMENT_COMPOSE. */
    interface IC2S_EQUIPMENT_COMPOSE {

        /** C2S_EQUIPMENT_COMPOSE equipmentId */
        equipmentId?: (number|null);
    }

    /** Represents a C2S_EQUIPMENT_COMPOSE. */
    class C2S_EQUIPMENT_COMPOSE implements IC2S_EQUIPMENT_COMPOSE {

        /**
         * Constructs a new C2S_EQUIPMENT_COMPOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_EQUIPMENT_COMPOSE);

        /** C2S_EQUIPMENT_COMPOSE equipmentId. */
        public equipmentId: number;

        /**
         * Encodes the specified C2S_EQUIPMENT_COMPOSE message. Does not implicitly {@link gameProto.C2S_EQUIPMENT_COMPOSE.verify|verify} messages.
         * @param message C2S_EQUIPMENT_COMPOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_EQUIPMENT_COMPOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_EQUIPMENT_COMPOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_EQUIPMENT_COMPOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_EQUIPMENT_COMPOSE;
    }

    /** Properties of a S2C_EQUIPMENT_COMPOSE. */
    interface IS2C_EQUIPMENT_COMPOSE {

        /** S2C_EQUIPMENT_COMPOSE errorCode */
        errorCode?: (number|null);

        /** S2C_EQUIPMENT_COMPOSE valuesMessageSet */
        valuesMessageSet?: (gameProto.IValuesMessageSet|null);
    }

    /** Represents a S2C_EQUIPMENT_COMPOSE. */
    class S2C_EQUIPMENT_COMPOSE implements IS2C_EQUIPMENT_COMPOSE {

        /**
         * Constructs a new S2C_EQUIPMENT_COMPOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_COMPOSE);

        /** S2C_EQUIPMENT_COMPOSE errorCode. */
        public errorCode: number;

        /** S2C_EQUIPMENT_COMPOSE valuesMessageSet. */
        public valuesMessageSet?: (gameProto.IValuesMessageSet|null);

        /**
         * Encodes the specified S2C_EQUIPMENT_COMPOSE message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_COMPOSE.verify|verify} messages.
         * @param message S2C_EQUIPMENT_COMPOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_COMPOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_COMPOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_COMPOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_COMPOSE;
    }

    /** Properties of a C2S_EQUIPMENT_DECOMPOSE. */
    interface IC2S_EQUIPMENT_DECOMPOSE {

        /** C2S_EQUIPMENT_DECOMPOSE equipmentUuId */
        equipmentUuId?: (number[]|null);
    }

    /** Represents a C2S_EQUIPMENT_DECOMPOSE. */
    class C2S_EQUIPMENT_DECOMPOSE implements IC2S_EQUIPMENT_DECOMPOSE {

        /**
         * Constructs a new C2S_EQUIPMENT_DECOMPOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_EQUIPMENT_DECOMPOSE);

        /** C2S_EQUIPMENT_DECOMPOSE equipmentUuId. */
        public equipmentUuId: number[];

        /**
         * Encodes the specified C2S_EQUIPMENT_DECOMPOSE message. Does not implicitly {@link gameProto.C2S_EQUIPMENT_DECOMPOSE.verify|verify} messages.
         * @param message C2S_EQUIPMENT_DECOMPOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_EQUIPMENT_DECOMPOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_EQUIPMENT_DECOMPOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_EQUIPMENT_DECOMPOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_EQUIPMENT_DECOMPOSE;
    }

    /** Properties of a S2C_EQUIPMENT_DECOMPOSE. */
    interface IS2C_EQUIPMENT_DECOMPOSE {

        /** S2C_EQUIPMENT_DECOMPOSE errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_EQUIPMENT_DECOMPOSE. */
    class S2C_EQUIPMENT_DECOMPOSE implements IS2C_EQUIPMENT_DECOMPOSE {

        /**
         * Constructs a new S2C_EQUIPMENT_DECOMPOSE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_DECOMPOSE);

        /** S2C_EQUIPMENT_DECOMPOSE errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_EQUIPMENT_DECOMPOSE message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_DECOMPOSE.verify|verify} messages.
         * @param message S2C_EQUIPMENT_DECOMPOSE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_DECOMPOSE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_DECOMPOSE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_DECOMPOSE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_DECOMPOSE;
    }

    /** Properties of a C2S_GET_EQUIPMENT_LIST. */
    interface IC2S_GET_EQUIPMENT_LIST {
    }

    /** Represents a C2S_GET_EQUIPMENT_LIST. */
    class C2S_GET_EQUIPMENT_LIST implements IC2S_GET_EQUIPMENT_LIST {

        /**
         * Constructs a new C2S_GET_EQUIPMENT_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_EQUIPMENT_LIST);

        /**
         * Encodes the specified C2S_GET_EQUIPMENT_LIST message. Does not implicitly {@link gameProto.C2S_GET_EQUIPMENT_LIST.verify|verify} messages.
         * @param message C2S_GET_EQUIPMENT_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_EQUIPMENT_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_EQUIPMENT_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_EQUIPMENT_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_EQUIPMENT_LIST;
    }

    /** Properties of a S2C_GET_EQUIPMENT_LIST. */
    interface IS2C_GET_EQUIPMENT_LIST {

        /** S2C_GET_EQUIPMENT_LIST equipments */
        equipments?: (gameProto.IEquipment[]|null);
    }

    /** Represents a S2C_GET_EQUIPMENT_LIST. */
    class S2C_GET_EQUIPMENT_LIST implements IS2C_GET_EQUIPMENT_LIST {

        /**
         * Constructs a new S2C_GET_EQUIPMENT_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_EQUIPMENT_LIST);

        /** S2C_GET_EQUIPMENT_LIST equipments. */
        public equipments: gameProto.IEquipment[];

        /**
         * Encodes the specified S2C_GET_EQUIPMENT_LIST message. Does not implicitly {@link gameProto.S2C_GET_EQUIPMENT_LIST.verify|verify} messages.
         * @param message S2C_GET_EQUIPMENT_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_EQUIPMENT_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_EQUIPMENT_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_EQUIPMENT_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_EQUIPMENT_LIST;
    }

    /** Properties of a S2C_EQUIPMENT_CHANGE. */
    interface IS2C_EQUIPMENT_CHANGE {

        /** S2C_EQUIPMENT_CHANGE equipments */
        equipments?: (gameProto.IEquipment[]|null);
    }

    /** Represents a S2C_EQUIPMENT_CHANGE. */
    class S2C_EQUIPMENT_CHANGE implements IS2C_EQUIPMENT_CHANGE {

        /**
         * Constructs a new S2C_EQUIPMENT_CHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_CHANGE);

        /** S2C_EQUIPMENT_CHANGE equipments. */
        public equipments: gameProto.IEquipment[];

        /**
         * Encodes the specified S2C_EQUIPMENT_CHANGE message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_CHANGE.verify|verify} messages.
         * @param message S2C_EQUIPMENT_CHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_CHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_CHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_CHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_CHANGE;
    }

    /** Properties of a S2C_GENERAL_EQUIPMENT_CHANGE. */
    interface IS2C_GENERAL_EQUIPMENT_CHANGE {

        /** S2C_GENERAL_EQUIPMENT_CHANGE generalEquipments */
        generalEquipments?: (gameProto.IGeneralEquipment[]|null);
    }

    /** Represents a S2C_GENERAL_EQUIPMENT_CHANGE. */
    class S2C_GENERAL_EQUIPMENT_CHANGE implements IS2C_GENERAL_EQUIPMENT_CHANGE {

        /**
         * Constructs a new S2C_GENERAL_EQUIPMENT_CHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GENERAL_EQUIPMENT_CHANGE);

        /** S2C_GENERAL_EQUIPMENT_CHANGE generalEquipments. */
        public generalEquipments: gameProto.IGeneralEquipment[];

        /**
         * Encodes the specified S2C_GENERAL_EQUIPMENT_CHANGE message. Does not implicitly {@link gameProto.S2C_GENERAL_EQUIPMENT_CHANGE.verify|verify} messages.
         * @param message S2C_GENERAL_EQUIPMENT_CHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GENERAL_EQUIPMENT_CHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GENERAL_EQUIPMENT_CHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GENERAL_EQUIPMENT_CHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GENERAL_EQUIPMENT_CHANGE;
    }

    /** Properties of a C2S_GENERAL_EQUIP_ALL. */
    interface IC2S_GENERAL_EQUIP_ALL {

        /** C2S_GENERAL_EQUIP_ALL generalId */
        generalId?: (number|null);

        /** C2S_GENERAL_EQUIP_ALL equipmentUuid */
        equipmentUuid?: (number[]|null);
    }

    /** Represents a C2S_GENERAL_EQUIP_ALL. */
    class C2S_GENERAL_EQUIP_ALL implements IC2S_GENERAL_EQUIP_ALL {

        /**
         * Constructs a new C2S_GENERAL_EQUIP_ALL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GENERAL_EQUIP_ALL);

        /** C2S_GENERAL_EQUIP_ALL generalId. */
        public generalId: number;

        /** C2S_GENERAL_EQUIP_ALL equipmentUuid. */
        public equipmentUuid: number[];

        /**
         * Encodes the specified C2S_GENERAL_EQUIP_ALL message. Does not implicitly {@link gameProto.C2S_GENERAL_EQUIP_ALL.verify|verify} messages.
         * @param message C2S_GENERAL_EQUIP_ALL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GENERAL_EQUIP_ALL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GENERAL_EQUIP_ALL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GENERAL_EQUIP_ALL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GENERAL_EQUIP_ALL;
    }

    /** Properties of a S2C_GENERAL_EQUIP_ALL. */
    interface IS2C_GENERAL_EQUIP_ALL {

        /** S2C_GENERAL_EQUIP_ALL errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_GENERAL_EQUIP_ALL. */
    class S2C_GENERAL_EQUIP_ALL implements IS2C_GENERAL_EQUIP_ALL {

        /**
         * Constructs a new S2C_GENERAL_EQUIP_ALL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GENERAL_EQUIP_ALL);

        /** S2C_GENERAL_EQUIP_ALL errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_GENERAL_EQUIP_ALL message. Does not implicitly {@link gameProto.S2C_GENERAL_EQUIP_ALL.verify|verify} messages.
         * @param message S2C_GENERAL_EQUIP_ALL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GENERAL_EQUIP_ALL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GENERAL_EQUIP_ALL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GENERAL_EQUIP_ALL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GENERAL_EQUIP_ALL;
    }

    /** Properties of a S2C_EQUIPMENT_ADD. */
    interface IS2C_EQUIPMENT_ADD {

        /** S2C_EQUIPMENT_ADD equipments */
        equipments?: (gameProto.IEquipment[]|null);
    }

    /** Represents a S2C_EQUIPMENT_ADD. */
    class S2C_EQUIPMENT_ADD implements IS2C_EQUIPMENT_ADD {

        /**
         * Constructs a new S2C_EQUIPMENT_ADD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_ADD);

        /** S2C_EQUIPMENT_ADD equipments. */
        public equipments: gameProto.IEquipment[];

        /**
         * Encodes the specified S2C_EQUIPMENT_ADD message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_ADD.verify|verify} messages.
         * @param message S2C_EQUIPMENT_ADD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_ADD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_ADD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_ADD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_ADD;
    }

    /** Properties of a S2C_EQUIPMENT_DEL. */
    interface IS2C_EQUIPMENT_DEL {

        /** S2C_EQUIPMENT_DEL equipmentUuid */
        equipmentUuid?: (number[]|null);
    }

    /** Represents a S2C_EQUIPMENT_DEL. */
    class S2C_EQUIPMENT_DEL implements IS2C_EQUIPMENT_DEL {

        /**
         * Constructs a new S2C_EQUIPMENT_DEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_EQUIPMENT_DEL);

        /** S2C_EQUIPMENT_DEL equipmentUuid. */
        public equipmentUuid: number[];

        /**
         * Encodes the specified S2C_EQUIPMENT_DEL message. Does not implicitly {@link gameProto.S2C_EQUIPMENT_DEL.verify|verify} messages.
         * @param message S2C_EQUIPMENT_DEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_EQUIPMENT_DEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_EQUIPMENT_DEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_EQUIPMENT_DEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_EQUIPMENT_DEL;
    }

    /** Properties of a Building. */
    interface IBuilding {

        /** Building id */
        id: number;

        /** Building level */
        level: number;

        /** Building type */
        type: number;

        /** Building status */
        status: number;

        /** Building buildStartTime */
        buildStartTime: number;

        /** Building buildEndTime */
        buildEndTime: number;

        /** Building speedTime */
        speedTime: number;
    }

    /** Represents a Building. */
    class Building implements IBuilding {

        /**
         * Constructs a new Building.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuilding);

        /** Building id. */
        public id: number;

        /** Building level. */
        public level: number;

        /** Building type. */
        public type: number;

        /** Building status. */
        public status: number;

        /** Building buildStartTime. */
        public buildStartTime: number;

        /** Building buildEndTime. */
        public buildEndTime: number;

        /** Building speedTime. */
        public speedTime: number;

        /**
         * Encodes the specified Building message. Does not implicitly {@link gameProto.Building.verify|verify} messages.
         * @param message Building message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuilding, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Building message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Building
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Building;
    }

    /** Properties of a LevyData. */
    interface ILevyData {

        /** LevyData type */
        type: number;

        /** LevyData count */
        count: number;
    }

    /** Represents a LevyData. */
    class LevyData implements ILevyData {

        /**
         * Constructs a new LevyData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ILevyData);

        /** LevyData type. */
        public type: number;

        /** LevyData count. */
        public count: number;

        /**
         * Encodes the specified LevyData message. Does not implicitly {@link gameProto.LevyData.verify|verify} messages.
         * @param message LevyData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ILevyData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LevyData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LevyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.LevyData;
    }

    /** Properties of a BuildingLevy. */
    interface IBuildingLevy {

        /** BuildingLevy bid */
        bid: number;

        /** BuildingLevy harvestTime */
        harvestTime: number;
    }

    /** Represents a BuildingLevy. */
    class BuildingLevy implements IBuildingLevy {

        /**
         * Constructs a new BuildingLevy.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuildingLevy);

        /** BuildingLevy bid. */
        public bid: number;

        /** BuildingLevy harvestTime. */
        public harvestTime: number;

        /**
         * Encodes the specified BuildingLevy message. Does not implicitly {@link gameProto.BuildingLevy.verify|verify} messages.
         * @param message BuildingLevy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuildingLevy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuildingLevy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuildingLevy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuildingLevy;
    }

    /** Properties of a TrainArmy. */
    interface ITrainArmy {

        /** TrainArmy bId */
        bId: number;

        /** TrainArmy armyType */
        armyType: number;

        /** TrainArmy startTime */
        startTime: number;

        /** TrainArmy endTime */
        endTime: number;

        /** TrainArmy num */
        num: number;

        /** TrainArmy speedTime */
        speedTime: number;
    }

    /** Represents a TrainArmy. */
    class TrainArmy implements ITrainArmy {

        /**
         * Constructs a new TrainArmy.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITrainArmy);

        /** TrainArmy bId. */
        public bId: number;

        /** TrainArmy armyType. */
        public armyType: number;

        /** TrainArmy startTime. */
        public startTime: number;

        /** TrainArmy endTime. */
        public endTime: number;

        /** TrainArmy num. */
        public num: number;

        /** TrainArmy speedTime. */
        public speedTime: number;

        /**
         * Encodes the specified TrainArmy message. Does not implicitly {@link gameProto.TrainArmy.verify|verify} messages.
         * @param message TrainArmy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITrainArmy, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TrainArmy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrainArmy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TrainArmy;
    }

    /** Properties of a C2S_BUILDING_INFO. */
    interface IC2S_BUILDING_INFO {
    }

    /** Represents a C2S_BUILDING_INFO. */
    class C2S_BUILDING_INFO implements IC2S_BUILDING_INFO {

        /**
         * Constructs a new C2S_BUILDING_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUILDING_INFO);

        /**
         * Encodes the specified C2S_BUILDING_INFO message. Does not implicitly {@link gameProto.C2S_BUILDING_INFO.verify|verify} messages.
         * @param message C2S_BUILDING_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUILDING_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUILDING_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUILDING_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUILDING_INFO;
    }

    /** Properties of a S2C_BUILDING_INFO. */
    interface IS2C_BUILDING_INFO {

        /** S2C_BUILDING_INFO buildQueueCount */
        buildQueueCount: number;

        /** S2C_BUILDING_INFO buildings */
        buildings?: (gameProto.IBuilding[]|null);

        /** S2C_BUILDING_INFO buildingLevy */
        buildingLevy?: (gameProto.IBuildingLevy[]|null);

        /** S2C_BUILDING_INFO trainArmys */
        trainArmys?: (gameProto.ITrainArmy[]|null);
    }

    /** Represents a S2C_BUILDING_INFO. */
    class S2C_BUILDING_INFO implements IS2C_BUILDING_INFO {

        /**
         * Constructs a new S2C_BUILDING_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUILDING_INFO);

        /** S2C_BUILDING_INFO buildQueueCount. */
        public buildQueueCount: number;

        /** S2C_BUILDING_INFO buildings. */
        public buildings: gameProto.IBuilding[];

        /** S2C_BUILDING_INFO buildingLevy. */
        public buildingLevy: gameProto.IBuildingLevy[];

        /** S2C_BUILDING_INFO trainArmys. */
        public trainArmys: gameProto.ITrainArmy[];

        /**
         * Encodes the specified S2C_BUILDING_INFO message. Does not implicitly {@link gameProto.S2C_BUILDING_INFO.verify|verify} messages.
         * @param message S2C_BUILDING_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUILDING_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUILDING_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUILDING_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUILDING_INFO;
    }

    /** Properties of a C2S_BUILDING_ACTIVATED. */
    interface IC2S_BUILDING_ACTIVATED {

        /** C2S_BUILDING_ACTIVATED bId */
        bId: number;
    }

    /** Represents a C2S_BUILDING_ACTIVATED. */
    class C2S_BUILDING_ACTIVATED implements IC2S_BUILDING_ACTIVATED {

        /**
         * Constructs a new C2S_BUILDING_ACTIVATED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUILDING_ACTIVATED);

        /** C2S_BUILDING_ACTIVATED bId. */
        public bId: number;

        /**
         * Encodes the specified C2S_BUILDING_ACTIVATED message. Does not implicitly {@link gameProto.C2S_BUILDING_ACTIVATED.verify|verify} messages.
         * @param message C2S_BUILDING_ACTIVATED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUILDING_ACTIVATED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUILDING_ACTIVATED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUILDING_ACTIVATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUILDING_ACTIVATED;
    }

    /** Properties of a S2C_BUILDING_ACTIVATED. */
    interface IS2C_BUILDING_ACTIVATED {

        /** S2C_BUILDING_ACTIVATED building */
        building: gameProto.IBuilding;

        /** S2C_BUILDING_ACTIVATED buildingLevy */
        buildingLevy?: (gameProto.IBuildingLevy|null);

        /** S2C_BUILDING_ACTIVATED trainArmys */
        trainArmys?: (gameProto.ITrainArmy|null);
    }

    /** Represents a S2C_BUILDING_ACTIVATED. */
    class S2C_BUILDING_ACTIVATED implements IS2C_BUILDING_ACTIVATED {

        /**
         * Constructs a new S2C_BUILDING_ACTIVATED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUILDING_ACTIVATED);

        /** S2C_BUILDING_ACTIVATED building. */
        public building: gameProto.IBuilding;

        /** S2C_BUILDING_ACTIVATED buildingLevy. */
        public buildingLevy?: (gameProto.IBuildingLevy|null);

        /** S2C_BUILDING_ACTIVATED trainArmys. */
        public trainArmys?: (gameProto.ITrainArmy|null);

        /**
         * Encodes the specified S2C_BUILDING_ACTIVATED message. Does not implicitly {@link gameProto.S2C_BUILDING_ACTIVATED.verify|verify} messages.
         * @param message S2C_BUILDING_ACTIVATED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUILDING_ACTIVATED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUILDING_ACTIVATED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUILDING_ACTIVATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUILDING_ACTIVATED;
    }

    /** Properties of a C2S_BUILDING_UPLEVEL. */
    interface IC2S_BUILDING_UPLEVEL {

        /** C2S_BUILDING_UPLEVEL bId */
        bId: number;
    }

    /** Represents a C2S_BUILDING_UPLEVEL. */
    class C2S_BUILDING_UPLEVEL implements IC2S_BUILDING_UPLEVEL {

        /**
         * Constructs a new C2S_BUILDING_UPLEVEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUILDING_UPLEVEL);

        /** C2S_BUILDING_UPLEVEL bId. */
        public bId: number;

        /**
         * Encodes the specified C2S_BUILDING_UPLEVEL message. Does not implicitly {@link gameProto.C2S_BUILDING_UPLEVEL.verify|verify} messages.
         * @param message C2S_BUILDING_UPLEVEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUILDING_UPLEVEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUILDING_UPLEVEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUILDING_UPLEVEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUILDING_UPLEVEL;
    }

    /** Properties of a S2C_BUILDING_UPLEVEL. */
    interface IS2C_BUILDING_UPLEVEL {

        /** S2C_BUILDING_UPLEVEL resultCode */
        resultCode: number;

        /** S2C_BUILDING_UPLEVEL bId */
        bId: number;

        /** S2C_BUILDING_UPLEVEL buildStartTime */
        buildStartTime: number;

        /** S2C_BUILDING_UPLEVEL buildEndTime */
        buildEndTime: number;

        /** S2C_BUILDING_UPLEVEL newLevel */
        newLevel: number;
    }

    /** Represents a S2C_BUILDING_UPLEVEL. */
    class S2C_BUILDING_UPLEVEL implements IS2C_BUILDING_UPLEVEL {

        /**
         * Constructs a new S2C_BUILDING_UPLEVEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUILDING_UPLEVEL);

        /** S2C_BUILDING_UPLEVEL resultCode. */
        public resultCode: number;

        /** S2C_BUILDING_UPLEVEL bId. */
        public bId: number;

        /** S2C_BUILDING_UPLEVEL buildStartTime. */
        public buildStartTime: number;

        /** S2C_BUILDING_UPLEVEL buildEndTime. */
        public buildEndTime: number;

        /** S2C_BUILDING_UPLEVEL newLevel. */
        public newLevel: number;

        /**
         * Encodes the specified S2C_BUILDING_UPLEVEL message. Does not implicitly {@link gameProto.S2C_BUILDING_UPLEVEL.verify|verify} messages.
         * @param message S2C_BUILDING_UPLEVEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUILDING_UPLEVEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUILDING_UPLEVEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUILDING_UPLEVEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUILDING_UPLEVEL;
    }

    /** Properties of a C2S_BUILDING_SPEED. */
    interface IC2S_BUILDING_SPEED {

        /** C2S_BUILDING_SPEED bId */
        bId: number;

        /** C2S_BUILDING_SPEED itemId */
        itemId?: (number|null);

        /** C2S_BUILDING_SPEED itemNum */
        itemNum?: (number|null);
    }

    /** Represents a C2S_BUILDING_SPEED. */
    class C2S_BUILDING_SPEED implements IC2S_BUILDING_SPEED {

        /**
         * Constructs a new C2S_BUILDING_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUILDING_SPEED);

        /** C2S_BUILDING_SPEED bId. */
        public bId: number;

        /** C2S_BUILDING_SPEED itemId. */
        public itemId: number;

        /** C2S_BUILDING_SPEED itemNum. */
        public itemNum: number;

        /**
         * Encodes the specified C2S_BUILDING_SPEED message. Does not implicitly {@link gameProto.C2S_BUILDING_SPEED.verify|verify} messages.
         * @param message C2S_BUILDING_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUILDING_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUILDING_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUILDING_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUILDING_SPEED;
    }

    /** Properties of a S2C_BUILDING_SPEED. */
    interface IS2C_BUILDING_SPEED {

        /** S2C_BUILDING_SPEED retCode */
        retCode?: (number|null);

        /** S2C_BUILDING_SPEED bId */
        bId: number;

        /** S2C_BUILDING_SPEED speedTime */
        speedTime: number;
    }

    /** Represents a S2C_BUILDING_SPEED. */
    class S2C_BUILDING_SPEED implements IS2C_BUILDING_SPEED {

        /**
         * Constructs a new S2C_BUILDING_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUILDING_SPEED);

        /** S2C_BUILDING_SPEED retCode. */
        public retCode: number;

        /** S2C_BUILDING_SPEED bId. */
        public bId: number;

        /** S2C_BUILDING_SPEED speedTime. */
        public speedTime: number;

        /**
         * Encodes the specified S2C_BUILDING_SPEED message. Does not implicitly {@link gameProto.S2C_BUILDING_SPEED.verify|verify} messages.
         * @param message S2C_BUILDING_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUILDING_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUILDING_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUILDING_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUILDING_SPEED;
    }

    /** Properties of a BuildingOpenInfo. */
    interface IBuildingOpenInfo {

        /** BuildingOpenInfo building */
        building?: (gameProto.IBuilding[]|null);
    }

    /** Represents a BuildingOpenInfo. */
    class BuildingOpenInfo implements IBuildingOpenInfo {

        /**
         * Constructs a new BuildingOpenInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuildingOpenInfo);

        /** BuildingOpenInfo building. */
        public building: gameProto.IBuilding[];

        /**
         * Encodes the specified BuildingOpenInfo message. Does not implicitly {@link gameProto.BuildingOpenInfo.verify|verify} messages.
         * @param message BuildingOpenInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuildingOpenInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuildingOpenInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuildingOpenInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuildingOpenInfo;
    }

    /** Properties of a C2S_TOUCH_BUILDING. */
    interface IC2S_TOUCH_BUILDING {

        /** C2S_TOUCH_BUILDING bId */
        bId: number;
    }

    /** Represents a C2S_TOUCH_BUILDING. */
    class C2S_TOUCH_BUILDING implements IC2S_TOUCH_BUILDING {

        /**
         * Constructs a new C2S_TOUCH_BUILDING.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TOUCH_BUILDING);

        /** C2S_TOUCH_BUILDING bId. */
        public bId: number;

        /**
         * Encodes the specified C2S_TOUCH_BUILDING message. Does not implicitly {@link gameProto.C2S_TOUCH_BUILDING.verify|verify} messages.
         * @param message C2S_TOUCH_BUILDING message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TOUCH_BUILDING, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TOUCH_BUILDING message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TOUCH_BUILDING
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TOUCH_BUILDING;
    }

    /** Properties of a C2S_BUILDING_LEVY. */
    interface IC2S_BUILDING_LEVY {

        /** C2S_BUILDING_LEVY type */
        type: number;
    }

    /** Represents a C2S_BUILDING_LEVY. */
    class C2S_BUILDING_LEVY implements IC2S_BUILDING_LEVY {

        /**
         * Constructs a new C2S_BUILDING_LEVY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_BUILDING_LEVY);

        /** C2S_BUILDING_LEVY type. */
        public type: number;

        /**
         * Encodes the specified C2S_BUILDING_LEVY message. Does not implicitly {@link gameProto.C2S_BUILDING_LEVY.verify|verify} messages.
         * @param message C2S_BUILDING_LEVY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_BUILDING_LEVY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_BUILDING_LEVY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_BUILDING_LEVY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_BUILDING_LEVY;
    }

    /** Properties of a S2C_BUILDING_LEVY. */
    interface IS2C_BUILDING_LEVY {

        /** S2C_BUILDING_LEVY buildingLevy */
        buildingLevy?: (gameProto.IBuildingLevy[]|null);

        /** S2C_BUILDING_LEVY levyData */
        levyData: gameProto.ILevyData;

        /** S2C_BUILDING_LEVY errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_BUILDING_LEVY. */
    class S2C_BUILDING_LEVY implements IS2C_BUILDING_LEVY {

        /**
         * Constructs a new S2C_BUILDING_LEVY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_BUILDING_LEVY);

        /** S2C_BUILDING_LEVY buildingLevy. */
        public buildingLevy: gameProto.IBuildingLevy[];

        /** S2C_BUILDING_LEVY levyData. */
        public levyData: gameProto.ILevyData;

        /** S2C_BUILDING_LEVY errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_BUILDING_LEVY message. Does not implicitly {@link gameProto.S2C_BUILDING_LEVY.verify|verify} messages.
         * @param message S2C_BUILDING_LEVY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_BUILDING_LEVY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_BUILDING_LEVY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_BUILDING_LEVY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_BUILDING_LEVY;
    }

    /** Properties of a C2S_TRAINING_ARMY. */
    interface IC2S_TRAINING_ARMY {

        /** C2S_TRAINING_ARMY bId */
        bId: number;

        /** C2S_TRAINING_ARMY num */
        num: number;
    }

    /** Represents a C2S_TRAINING_ARMY. */
    class C2S_TRAINING_ARMY implements IC2S_TRAINING_ARMY {

        /**
         * Constructs a new C2S_TRAINING_ARMY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TRAINING_ARMY);

        /** C2S_TRAINING_ARMY bId. */
        public bId: number;

        /** C2S_TRAINING_ARMY num. */
        public num: number;

        /**
         * Encodes the specified C2S_TRAINING_ARMY message. Does not implicitly {@link gameProto.C2S_TRAINING_ARMY.verify|verify} messages.
         * @param message C2S_TRAINING_ARMY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TRAINING_ARMY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TRAINING_ARMY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TRAINING_ARMY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TRAINING_ARMY;
    }

    /** Properties of a S2C_TRAINING_ARMY. */
    interface IS2C_TRAINING_ARMY {

        /** S2C_TRAINING_ARMY trainArmy */
        trainArmy: gameProto.ITrainArmy;
    }

    /** Represents a S2C_TRAINING_ARMY. */
    class S2C_TRAINING_ARMY implements IS2C_TRAINING_ARMY {

        /**
         * Constructs a new S2C_TRAINING_ARMY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TRAINING_ARMY);

        /** S2C_TRAINING_ARMY trainArmy. */
        public trainArmy: gameProto.ITrainArmy;

        /**
         * Encodes the specified S2C_TRAINING_ARMY message. Does not implicitly {@link gameProto.S2C_TRAINING_ARMY.verify|verify} messages.
         * @param message S2C_TRAINING_ARMY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TRAINING_ARMY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TRAINING_ARMY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TRAINING_ARMY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TRAINING_ARMY;
    }

    /** Properties of a C2S_TRAINING_SPEED. */
    interface IC2S_TRAINING_SPEED {

        /** C2S_TRAINING_SPEED bId */
        bId: number;

        /** C2S_TRAINING_SPEED itemId */
        itemId?: (number|null);

        /** C2S_TRAINING_SPEED itemNum */
        itemNum?: (number|null);
    }

    /** Represents a C2S_TRAINING_SPEED. */
    class C2S_TRAINING_SPEED implements IC2S_TRAINING_SPEED {

        /**
         * Constructs a new C2S_TRAINING_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TRAINING_SPEED);

        /** C2S_TRAINING_SPEED bId. */
        public bId: number;

        /** C2S_TRAINING_SPEED itemId. */
        public itemId: number;

        /** C2S_TRAINING_SPEED itemNum. */
        public itemNum: number;

        /**
         * Encodes the specified C2S_TRAINING_SPEED message. Does not implicitly {@link gameProto.C2S_TRAINING_SPEED.verify|verify} messages.
         * @param message C2S_TRAINING_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TRAINING_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TRAINING_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TRAINING_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TRAINING_SPEED;
    }

    /** Properties of a S2C_TRAINING_SPEED. */
    interface IS2C_TRAINING_SPEED {

        /** S2C_TRAINING_SPEED bId */
        bId: number;

        /** S2C_TRAINING_SPEED speedTime */
        speedTime?: (number|null);

        /** S2C_TRAINING_SPEED itemId */
        itemId?: (number|null);
    }

    /** Represents a S2C_TRAINING_SPEED. */
    class S2C_TRAINING_SPEED implements IS2C_TRAINING_SPEED {

        /**
         * Constructs a new S2C_TRAINING_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TRAINING_SPEED);

        /** S2C_TRAINING_SPEED bId. */
        public bId: number;

        /** S2C_TRAINING_SPEED speedTime. */
        public speedTime: number;

        /** S2C_TRAINING_SPEED itemId. */
        public itemId: number;

        /**
         * Encodes the specified S2C_TRAINING_SPEED message. Does not implicitly {@link gameProto.S2C_TRAINING_SPEED.verify|verify} messages.
         * @param message S2C_TRAINING_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TRAINING_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TRAINING_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TRAINING_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TRAINING_SPEED;
    }

    /** Properties of a C2S_TRAINING_GET. */
    interface IC2S_TRAINING_GET {

        /** C2S_TRAINING_GET bId */
        bId: number;
    }

    /** Represents a C2S_TRAINING_GET. */
    class C2S_TRAINING_GET implements IC2S_TRAINING_GET {

        /**
         * Constructs a new C2S_TRAINING_GET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TRAINING_GET);

        /** C2S_TRAINING_GET bId. */
        public bId: number;

        /**
         * Encodes the specified C2S_TRAINING_GET message. Does not implicitly {@link gameProto.C2S_TRAINING_GET.verify|verify} messages.
         * @param message C2S_TRAINING_GET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TRAINING_GET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TRAINING_GET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TRAINING_GET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TRAINING_GET;
    }

    /** Properties of a S2C_TRAINING_GET. */
    interface IS2C_TRAINING_GET {

        /** S2C_TRAINING_GET bId */
        bId: number;

        /** S2C_TRAINING_GET armyType */
        armyType: number;

        /** S2C_TRAINING_GET trainNum */
        trainNum: number;

        /** S2C_TRAINING_GET allNum */
        allNum: number;
    }

    /** Represents a S2C_TRAINING_GET. */
    class S2C_TRAINING_GET implements IS2C_TRAINING_GET {

        /**
         * Constructs a new S2C_TRAINING_GET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TRAINING_GET);

        /** S2C_TRAINING_GET bId. */
        public bId: number;

        /** S2C_TRAINING_GET armyType. */
        public armyType: number;

        /** S2C_TRAINING_GET trainNum. */
        public trainNum: number;

        /** S2C_TRAINING_GET allNum. */
        public allNum: number;

        /**
         * Encodes the specified S2C_TRAINING_GET message. Does not implicitly {@link gameProto.S2C_TRAINING_GET.verify|verify} messages.
         * @param message S2C_TRAINING_GET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TRAINING_GET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TRAINING_GET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TRAINING_GET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TRAINING_GET;
    }

    /** Properties of a C2S_FUNCTION_PREVIEW. */
    interface IC2S_FUNCTION_PREVIEW {

        /** C2S_FUNCTION_PREVIEW functionId */
        functionId?: (number|null);
    }

    /** Represents a C2S_FUNCTION_PREVIEW. */
    class C2S_FUNCTION_PREVIEW implements IC2S_FUNCTION_PREVIEW {

        /**
         * Constructs a new C2S_FUNCTION_PREVIEW.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_FUNCTION_PREVIEW);

        /** C2S_FUNCTION_PREVIEW functionId. */
        public functionId: number;

        /**
         * Encodes the specified C2S_FUNCTION_PREVIEW message. Does not implicitly {@link gameProto.C2S_FUNCTION_PREVIEW.verify|verify} messages.
         * @param message C2S_FUNCTION_PREVIEW message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_FUNCTION_PREVIEW, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_FUNCTION_PREVIEW message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_FUNCTION_PREVIEW
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_FUNCTION_PREVIEW;
    }

    /** Properties of a S2C_FUNCTION_PREVIEW. */
    interface IS2C_FUNCTION_PREVIEW {

        /** S2C_FUNCTION_PREVIEW newFunctionId */
        newFunctionId?: (number[]|null);

        /** S2C_FUNCTION_PREVIEW nextFunctionid */
        nextFunctionid?: (number|null);
    }

    /** Represents a S2C_FUNCTION_PREVIEW. */
    class S2C_FUNCTION_PREVIEW implements IS2C_FUNCTION_PREVIEW {

        /**
         * Constructs a new S2C_FUNCTION_PREVIEW.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_FUNCTION_PREVIEW);

        /** S2C_FUNCTION_PREVIEW newFunctionId. */
        public newFunctionId: number[];

        /** S2C_FUNCTION_PREVIEW nextFunctionid. */
        public nextFunctionid: number;

        /**
         * Encodes the specified S2C_FUNCTION_PREVIEW message. Does not implicitly {@link gameProto.S2C_FUNCTION_PREVIEW.verify|verify} messages.
         * @param message S2C_FUNCTION_PREVIEW message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_FUNCTION_PREVIEW, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_FUNCTION_PREVIEW message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_FUNCTION_PREVIEW
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_FUNCTION_PREVIEW;
    }

    /** Properties of a GemstoneInfo. */
    interface IGemstoneInfo {

        /** GemstoneInfo gemstoneId */
        gemstoneId: number;

        /** GemstoneInfo failNumber */
        failNumber: number;
    }

    /** Represents a GemstoneInfo. */
    class GemstoneInfo implements IGemstoneInfo {

        /**
         * Constructs a new GemstoneInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGemstoneInfo);

        /** GemstoneInfo gemstoneId. */
        public gemstoneId: number;

        /** GemstoneInfo failNumber. */
        public failNumber: number;

        /**
         * Encodes the specified GemstoneInfo message. Does not implicitly {@link gameProto.GemstoneInfo.verify|verify} messages.
         * @param message GemstoneInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGemstoneInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GemstoneInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GemstoneInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GemstoneInfo;
    }

    /** Properties of a GemstoneAllReq. */
    interface IGemstoneAllReq {
    }

    /** Represents a GemstoneAllReq. */
    class GemstoneAllReq implements IGemstoneAllReq {

        /**
         * Constructs a new GemstoneAllReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGemstoneAllReq);

        /**
         * Encodes the specified GemstoneAllReq message. Does not implicitly {@link gameProto.GemstoneAllReq.verify|verify} messages.
         * @param message GemstoneAllReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGemstoneAllReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GemstoneAllReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GemstoneAllReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GemstoneAllReq;
    }

    /** Properties of a GemstoneAllResp. */
    interface IGemstoneAllResp {

        /** GemstoneAllResp gemstoneInfo */
        gemstoneInfo?: (gameProto.IGemstoneInfo[]|null);
    }

    /** Represents a GemstoneAllResp. */
    class GemstoneAllResp implements IGemstoneAllResp {

        /**
         * Constructs a new GemstoneAllResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGemstoneAllResp);

        /** GemstoneAllResp gemstoneInfo. */
        public gemstoneInfo: gameProto.IGemstoneInfo[];

        /**
         * Encodes the specified GemstoneAllResp message. Does not implicitly {@link gameProto.GemstoneAllResp.verify|verify} messages.
         * @param message GemstoneAllResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGemstoneAllResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GemstoneAllResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GemstoneAllResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GemstoneAllResp;
    }

    /** Properties of a GemstoneUpReq. */
    interface IGemstoneUpReq {

        /** GemstoneUpReq gemstoneId */
        gemstoneId: number;

        /** GemstoneUpReq count */
        count: number;
    }

    /** Represents a GemstoneUpReq. */
    class GemstoneUpReq implements IGemstoneUpReq {

        /**
         * Constructs a new GemstoneUpReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGemstoneUpReq);

        /** GemstoneUpReq gemstoneId. */
        public gemstoneId: number;

        /** GemstoneUpReq count. */
        public count: number;

        /**
         * Encodes the specified GemstoneUpReq message. Does not implicitly {@link gameProto.GemstoneUpReq.verify|verify} messages.
         * @param message GemstoneUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGemstoneUpReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GemstoneUpReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GemstoneUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GemstoneUpReq;
    }

    /** Properties of a GemstoneUpResp. */
    interface IGemstoneUpResp {

        /** GemstoneUpResp sumNumber */
        sumNumber: number;

        /** GemstoneUpResp successNumber */
        successNumber: number;
    }

    /** Represents a GemstoneUpResp. */
    class GemstoneUpResp implements IGemstoneUpResp {

        /**
         * Constructs a new GemstoneUpResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGemstoneUpResp);

        /** GemstoneUpResp sumNumber. */
        public sumNumber: number;

        /** GemstoneUpResp successNumber. */
        public successNumber: number;

        /**
         * Encodes the specified GemstoneUpResp message. Does not implicitly {@link gameProto.GemstoneUpResp.verify|verify} messages.
         * @param message GemstoneUpResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGemstoneUpResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GemstoneUpResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GemstoneUpResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GemstoneUpResp;
    }

    /** Properties of a GeneralInfo. */
    interface IGeneralInfo {

        /** GeneralInfo generalId */
        generalId: number;

        /** GeneralInfo level */
        level: number;

        /** GeneralInfo quality */
        quality: number;

        /** GeneralInfo treasureId */
        treasureId: number;

        /** GeneralInfo curExp */
        curExp: number;

        /** GeneralInfo star */
        star: number;

        /** GeneralInfo fight */
        fight: number;

        /** GeneralInfo attributeList */
        attributeList?: (gameProto.IAttributeValue[]|null);

        /** GeneralInfo soldierAttribute */
        soldierAttribute?: (gameProto.IAttributeValue[]|null);

        /** GeneralInfo skills */
        skills?: (gameProto.IGeneralSkillDto[]|null);

        /** GeneralInfo generalEquipment */
        generalEquipment?: (gameProto.IGeneralEquipment|null);

        /** GeneralInfo upgradeLevel */
        upgradeLevel?: (number|null);

        /** GeneralInfo treasureStar */
        treasureStar: number;
    }

    /** Represents a GeneralInfo. */
    class GeneralInfo implements IGeneralInfo {

        /**
         * Constructs a new GeneralInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralInfo);

        /** GeneralInfo generalId. */
        public generalId: number;

        /** GeneralInfo level. */
        public level: number;

        /** GeneralInfo quality. */
        public quality: number;

        /** GeneralInfo treasureId. */
        public treasureId: number;

        /** GeneralInfo curExp. */
        public curExp: number;

        /** GeneralInfo star. */
        public star: number;

        /** GeneralInfo fight. */
        public fight: number;

        /** GeneralInfo attributeList. */
        public attributeList: gameProto.IAttributeValue[];

        /** GeneralInfo soldierAttribute. */
        public soldierAttribute: gameProto.IAttributeValue[];

        /** GeneralInfo skills. */
        public skills: gameProto.IGeneralSkillDto[];

        /** GeneralInfo generalEquipment. */
        public generalEquipment?: (gameProto.IGeneralEquipment|null);

        /** GeneralInfo upgradeLevel. */
        public upgradeLevel: number;

        /** GeneralInfo treasureStar. */
        public treasureStar: number;

        /**
         * Encodes the specified GeneralInfo message. Does not implicitly {@link gameProto.GeneralInfo.verify|verify} messages.
         * @param message GeneralInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralInfo;
    }

    /** Properties of a GeneralRecover. */
    interface IGeneralRecover {

        /** GeneralRecover generalId */
        generalId: number;

        /** GeneralRecover sumHp */
        sumHp: number;

        /** GeneralRecover nowHp */
        nowHp: number;

        /** GeneralRecover isFinish */
        isFinish: boolean;
    }

    /** Represents a GeneralRecover. */
    class GeneralRecover implements IGeneralRecover {

        /**
         * Constructs a new GeneralRecover.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralRecover);

        /** GeneralRecover generalId. */
        public generalId: number;

        /** GeneralRecover sumHp. */
        public sumHp: number;

        /** GeneralRecover nowHp. */
        public nowHp: number;

        /** GeneralRecover isFinish. */
        public isFinish: boolean;

        /**
         * Encodes the specified GeneralRecover message. Does not implicitly {@link gameProto.GeneralRecover.verify|verify} messages.
         * @param message GeneralRecover message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralRecover, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralRecover message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralRecover
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralRecover;
    }

    /** Properties of an ExpBookDto. */
    interface IExpBookDto {

        /** ExpBookDto id */
        id: number;

        /** ExpBookDto count */
        count: number;
    }

    /** Represents an ExpBookDto. */
    class ExpBookDto implements IExpBookDto {

        /**
         * Constructs a new ExpBookDto.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IExpBookDto);

        /** ExpBookDto id. */
        public id: number;

        /** ExpBookDto count. */
        public count: number;

        /**
         * Encodes the specified ExpBookDto message. Does not implicitly {@link gameProto.ExpBookDto.verify|verify} messages.
         * @param message ExpBookDto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IExpBookDto, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ExpBookDto message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExpBookDto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ExpBookDto;
    }

    /** Properties of a PlayerGeneralInfo. */
    interface IPlayerGeneralInfo {

        /** PlayerGeneralInfo playerId */
        playerId: number;

        /** PlayerGeneralInfo generalInfo */
        generalInfo?: (gameProto.IGeneralInfo[]|null);
    }

    /** Represents a PlayerGeneralInfo. */
    class PlayerGeneralInfo implements IPlayerGeneralInfo {

        /**
         * Constructs a new PlayerGeneralInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerGeneralInfo);

        /** PlayerGeneralInfo playerId. */
        public playerId: number;

        /** PlayerGeneralInfo generalInfo. */
        public generalInfo: gameProto.IGeneralInfo[];

        /**
         * Encodes the specified PlayerGeneralInfo message. Does not implicitly {@link gameProto.PlayerGeneralInfo.verify|verify} messages.
         * @param message PlayerGeneralInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerGeneralInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerGeneralInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerGeneralInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerGeneralInfo;
    }

    /** Properties of a GeneralSkillDto. */
    interface IGeneralSkillDto {

        /** GeneralSkillDto sequence */
        sequence: number;

        /** GeneralSkillDto skillId */
        skillId?: (number|null);

        /** GeneralSkillDto level */
        level?: (number|null);
    }

    /** Represents a GeneralSkillDto. */
    class GeneralSkillDto implements IGeneralSkillDto {

        /**
         * Constructs a new GeneralSkillDto.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralSkillDto);

        /** GeneralSkillDto sequence. */
        public sequence: number;

        /** GeneralSkillDto skillId. */
        public skillId: number;

        /** GeneralSkillDto level. */
        public level: number;

        /**
         * Encodes the specified GeneralSkillDto message. Does not implicitly {@link gameProto.GeneralSkillDto.verify|verify} messages.
         * @param message GeneralSkillDto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralSkillDto, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralSkillDto message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralSkillDto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralSkillDto;
    }

    /** Properties of a GeneralAllReq. */
    interface IGeneralAllReq {
    }

    /** Represents a GeneralAllReq. */
    class GeneralAllReq implements IGeneralAllReq {

        /**
         * Constructs a new GeneralAllReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralAllReq);

        /**
         * Encodes the specified GeneralAllReq message. Does not implicitly {@link gameProto.GeneralAllReq.verify|verify} messages.
         * @param message GeneralAllReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralAllReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralAllReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralAllReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralAllReq;
    }

    /** Properties of a GeneralAllResp. */
    interface IGeneralAllResp {

        /** GeneralAllResp generalInfo */
        generalInfo?: (gameProto.IGeneralInfo[]|null);
    }

    /** Represents a GeneralAllResp. */
    class GeneralAllResp implements IGeneralAllResp {

        /**
         * Constructs a new GeneralAllResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralAllResp);

        /** GeneralAllResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo[];

        /**
         * Encodes the specified GeneralAllResp message. Does not implicitly {@link gameProto.GeneralAllResp.verify|verify} messages.
         * @param message GeneralAllResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralAllResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralAllResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralAllResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralAllResp;
    }

    /** Properties of a GeneralDetailReq. */
    interface IGeneralDetailReq {

        /** GeneralDetailReq targetId */
        targetId: number;

        /** GeneralDetailReq generalId */
        generalId: number;
    }

    /** Represents a GeneralDetailReq. */
    class GeneralDetailReq implements IGeneralDetailReq {

        /**
         * Constructs a new GeneralDetailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralDetailReq);

        /** GeneralDetailReq targetId. */
        public targetId: number;

        /** GeneralDetailReq generalId. */
        public generalId: number;

        /**
         * Encodes the specified GeneralDetailReq message. Does not implicitly {@link gameProto.GeneralDetailReq.verify|verify} messages.
         * @param message GeneralDetailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralDetailReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralDetailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralDetailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralDetailReq;
    }

    /** Properties of a GeneralDetailResp. */
    interface IGeneralDetailResp {

        /** GeneralDetailResp generalInfo */
        generalInfo: gameProto.IGeneralInfo;
    }

    /** Represents a GeneralDetailResp. */
    class GeneralDetailResp implements IGeneralDetailResp {

        /**
         * Constructs a new GeneralDetailResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralDetailResp);

        /** GeneralDetailResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo;

        /**
         * Encodes the specified GeneralDetailResp message. Does not implicitly {@link gameProto.GeneralDetailResp.verify|verify} messages.
         * @param message GeneralDetailResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralDetailResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralDetailResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralDetailResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralDetailResp;
    }

    /** Properties of a GeneralUseExpBookReq. */
    interface IGeneralUseExpBookReq {

        /** GeneralUseExpBookReq generalId */
        generalId: number;

        /** GeneralUseExpBookReq items */
        items?: (gameProto.IExpBookDto[]|null);

        /** GeneralUseExpBookReq isAll */
        isAll: boolean;
    }

    /** Represents a GeneralUseExpBookReq. */
    class GeneralUseExpBookReq implements IGeneralUseExpBookReq {

        /**
         * Constructs a new GeneralUseExpBookReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUseExpBookReq);

        /** GeneralUseExpBookReq generalId. */
        public generalId: number;

        /** GeneralUseExpBookReq items. */
        public items: gameProto.IExpBookDto[];

        /** GeneralUseExpBookReq isAll. */
        public isAll: boolean;

        /**
         * Encodes the specified GeneralUseExpBookReq message. Does not implicitly {@link gameProto.GeneralUseExpBookReq.verify|verify} messages.
         * @param message GeneralUseExpBookReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUseExpBookReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUseExpBookReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUseExpBookReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUseExpBookReq;
    }

    /** Properties of a GeneralUseExpBookResp. */
    interface IGeneralUseExpBookResp {

        /** GeneralUseExpBookResp generalInfo */
        generalInfo: gameProto.IGeneralInfo;
    }

    /** Represents a GeneralUseExpBookResp. */
    class GeneralUseExpBookResp implements IGeneralUseExpBookResp {

        /**
         * Constructs a new GeneralUseExpBookResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUseExpBookResp);

        /** GeneralUseExpBookResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo;

        /**
         * Encodes the specified GeneralUseExpBookResp message. Does not implicitly {@link gameProto.GeneralUseExpBookResp.verify|verify} messages.
         * @param message GeneralUseExpBookResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUseExpBookResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUseExpBookResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUseExpBookResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUseExpBookResp;
    }

    /** Properties of a GeneralUpStarReq. */
    interface IGeneralUpStarReq {

        /** GeneralUpStarReq generalId */
        generalId: number;
    }

    /** Represents a GeneralUpStarReq. */
    class GeneralUpStarReq implements IGeneralUpStarReq {

        /**
         * Constructs a new GeneralUpStarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUpStarReq);

        /** GeneralUpStarReq generalId. */
        public generalId: number;

        /**
         * Encodes the specified GeneralUpStarReq message. Does not implicitly {@link gameProto.GeneralUpStarReq.verify|verify} messages.
         * @param message GeneralUpStarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUpStarReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUpStarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUpStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUpStarReq;
    }

    /** Properties of a GeneralUpStarResp. */
    interface IGeneralUpStarResp {

        /** GeneralUpStarResp generalInfo */
        generalInfo: gameProto.IGeneralInfo;
    }

    /** Represents a GeneralUpStarResp. */
    class GeneralUpStarResp implements IGeneralUpStarResp {

        /**
         * Constructs a new GeneralUpStarResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUpStarResp);

        /** GeneralUpStarResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo;

        /**
         * Encodes the specified GeneralUpStarResp message. Does not implicitly {@link gameProto.GeneralUpStarResp.verify|verify} messages.
         * @param message GeneralUpStarResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUpStarResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUpStarResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUpStarResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUpStarResp;
    }

    /** Properties of a RecruitedGeneralReq. */
    interface IRecruitedGeneralReq {

        /** RecruitedGeneralReq generalId */
        generalId: number;
    }

    /** Represents a RecruitedGeneralReq. */
    class RecruitedGeneralReq implements IRecruitedGeneralReq {

        /**
         * Constructs a new RecruitedGeneralReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRecruitedGeneralReq);

        /** RecruitedGeneralReq generalId. */
        public generalId: number;

        /**
         * Encodes the specified RecruitedGeneralReq message. Does not implicitly {@link gameProto.RecruitedGeneralReq.verify|verify} messages.
         * @param message RecruitedGeneralReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRecruitedGeneralReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RecruitedGeneralReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecruitedGeneralReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RecruitedGeneralReq;
    }

    /** Properties of a RecruitedGeneralResp. */
    interface IRecruitedGeneralResp {

        /** RecruitedGeneralResp generalInfo */
        generalInfo: gameProto.IGeneralInfo;
    }

    /** Represents a RecruitedGeneralResp. */
    class RecruitedGeneralResp implements IRecruitedGeneralResp {

        /**
         * Constructs a new RecruitedGeneralResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRecruitedGeneralResp);

        /** RecruitedGeneralResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo;

        /**
         * Encodes the specified RecruitedGeneralResp message. Does not implicitly {@link gameProto.RecruitedGeneralResp.verify|verify} messages.
         * @param message RecruitedGeneralResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRecruitedGeneralResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RecruitedGeneralResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RecruitedGeneralResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RecruitedGeneralResp;
    }

    /** Properties of a GeneralSkillListReq. */
    interface IGeneralSkillListReq {
    }

    /** Represents a GeneralSkillListReq. */
    class GeneralSkillListReq implements IGeneralSkillListReq {

        /**
         * Constructs a new GeneralSkillListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralSkillListReq);

        /**
         * Encodes the specified GeneralSkillListReq message. Does not implicitly {@link gameProto.GeneralSkillListReq.verify|verify} messages.
         * @param message GeneralSkillListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralSkillListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralSkillListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralSkillListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralSkillListReq;
    }

    /** Properties of a GeneralSkillListResp. */
    interface IGeneralSkillListResp {

        /** GeneralSkillListResp skillList */
        skillList?: (number[]|null);
    }

    /** Represents a GeneralSkillListResp. */
    class GeneralSkillListResp implements IGeneralSkillListResp {

        /**
         * Constructs a new GeneralSkillListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralSkillListResp);

        /** GeneralSkillListResp skillList. */
        public skillList: number[];

        /**
         * Encodes the specified GeneralSkillListResp message. Does not implicitly {@link gameProto.GeneralSkillListResp.verify|verify} messages.
         * @param message GeneralSkillListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralSkillListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralSkillListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralSkillListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralSkillListResp;
    }

    /** Properties of an OpenSkillReq. */
    interface IOpenSkillReq {

        /** OpenSkillReq generalId */
        generalId: number;

        /** OpenSkillReq sequence */
        sequence: number;

        /** OpenSkillReq skillId */
        skillId?: (number|null);
    }

    /** Represents an OpenSkillReq. */
    class OpenSkillReq implements IOpenSkillReq {

        /**
         * Constructs a new OpenSkillReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IOpenSkillReq);

        /** OpenSkillReq generalId. */
        public generalId: number;

        /** OpenSkillReq sequence. */
        public sequence: number;

        /** OpenSkillReq skillId. */
        public skillId: number;

        /**
         * Encodes the specified OpenSkillReq message. Does not implicitly {@link gameProto.OpenSkillReq.verify|verify} messages.
         * @param message OpenSkillReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IOpenSkillReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenSkillReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenSkillReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.OpenSkillReq;
    }

    /** Properties of an OpenSkillResp. */
    interface IOpenSkillResp {

        /** OpenSkillResp generalId */
        generalId: number;

        /** OpenSkillResp sequence */
        sequence: number;

        /** OpenSkillResp skillId */
        skillId: number;

        /** OpenSkillResp level */
        level: number;
    }

    /** Represents an OpenSkillResp. */
    class OpenSkillResp implements IOpenSkillResp {

        /**
         * Constructs a new OpenSkillResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IOpenSkillResp);

        /** OpenSkillResp generalId. */
        public generalId: number;

        /** OpenSkillResp sequence. */
        public sequence: number;

        /** OpenSkillResp skillId. */
        public skillId: number;

        /** OpenSkillResp level. */
        public level: number;

        /**
         * Encodes the specified OpenSkillResp message. Does not implicitly {@link gameProto.OpenSkillResp.verify|verify} messages.
         * @param message OpenSkillResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IOpenSkillResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OpenSkillResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OpenSkillResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.OpenSkillResp;
    }

    /** Properties of a GeneralTreasureWearReq. */
    interface IGeneralTreasureWearReq {

        /** GeneralTreasureWearReq generalId */
        generalId: number;

        /** GeneralTreasureWearReq treasureId */
        treasureId: number;
    }

    /** Represents a GeneralTreasureWearReq. */
    class GeneralTreasureWearReq implements IGeneralTreasureWearReq {

        /**
         * Constructs a new GeneralTreasureWearReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralTreasureWearReq);

        /** GeneralTreasureWearReq generalId. */
        public generalId: number;

        /** GeneralTreasureWearReq treasureId. */
        public treasureId: number;

        /**
         * Encodes the specified GeneralTreasureWearReq message. Does not implicitly {@link gameProto.GeneralTreasureWearReq.verify|verify} messages.
         * @param message GeneralTreasureWearReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralTreasureWearReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralTreasureWearReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralTreasureWearReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralTreasureWearReq;
    }

    /** Properties of a GeneralTreasureWearResp. */
    interface IGeneralTreasureWearResp {

        /** GeneralTreasureWearResp generalInfo */
        generalInfo?: (gameProto.IGeneralInfo[]|null);
    }

    /** Represents a GeneralTreasureWearResp. */
    class GeneralTreasureWearResp implements IGeneralTreasureWearResp {

        /**
         * Constructs a new GeneralTreasureWearResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralTreasureWearResp);

        /** GeneralTreasureWearResp generalInfo. */
        public generalInfo: gameProto.IGeneralInfo[];

        /**
         * Encodes the specified GeneralTreasureWearResp message. Does not implicitly {@link gameProto.GeneralTreasureWearResp.verify|verify} messages.
         * @param message GeneralTreasureWearResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralTreasureWearResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralTreasureWearResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralTreasureWearResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralTreasureWearResp;
    }

    /** Properties of a GeneralUpgradeReq. */
    interface IGeneralUpgradeReq {

        /** GeneralUpgradeReq generalId */
        generalId?: (number|null);
    }

    /** Represents a GeneralUpgradeReq. */
    class GeneralUpgradeReq implements IGeneralUpgradeReq {

        /**
         * Constructs a new GeneralUpgradeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUpgradeReq);

        /** GeneralUpgradeReq generalId. */
        public generalId: number;

        /**
         * Encodes the specified GeneralUpgradeReq message. Does not implicitly {@link gameProto.GeneralUpgradeReq.verify|verify} messages.
         * @param message GeneralUpgradeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUpgradeReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUpgradeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUpgradeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUpgradeReq;
    }

    /** Properties of a GeneralUpgradeResp. */
    interface IGeneralUpgradeResp {

        /** GeneralUpgradeResp generalInfo */
        generalInfo?: (gameProto.IGeneralInfo|null);
    }

    /** Represents a GeneralUpgradeResp. */
    class GeneralUpgradeResp implements IGeneralUpgradeResp {

        /**
         * Constructs a new GeneralUpgradeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralUpgradeResp);

        /** GeneralUpgradeResp generalInfo. */
        public generalInfo?: (gameProto.IGeneralInfo|null);

        /**
         * Encodes the specified GeneralUpgradeResp message. Does not implicitly {@link gameProto.GeneralUpgradeResp.verify|verify} messages.
         * @param message GeneralUpgradeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralUpgradeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralUpgradeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralUpgradeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralUpgradeResp;
    }

    /** Properties of a C2S_GENERAL_REBIRTH. */
    interface IC2S_GENERAL_REBIRTH {

        /** C2S_GENERAL_REBIRTH generalId */
        generalId: number;
    }

    /** Represents a C2S_GENERAL_REBIRTH. */
    class C2S_GENERAL_REBIRTH implements IC2S_GENERAL_REBIRTH {

        /**
         * Constructs a new C2S_GENERAL_REBIRTH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GENERAL_REBIRTH);

        /** C2S_GENERAL_REBIRTH generalId. */
        public generalId: number;

        /**
         * Encodes the specified C2S_GENERAL_REBIRTH message. Does not implicitly {@link gameProto.C2S_GENERAL_REBIRTH.verify|verify} messages.
         * @param message C2S_GENERAL_REBIRTH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GENERAL_REBIRTH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GENERAL_REBIRTH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GENERAL_REBIRTH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GENERAL_REBIRTH;
    }

    /** Properties of a S2C_GENERAL_REBIRTH. */
    interface IS2C_GENERAL_REBIRTH {

        /** S2C_GENERAL_REBIRTH generalInfo */
        generalInfo: gameProto.IGeneralInfo;
    }

    /** Represents a S2C_GENERAL_REBIRTH. */
    class S2C_GENERAL_REBIRTH implements IS2C_GENERAL_REBIRTH {

        /**
         * Constructs a new S2C_GENERAL_REBIRTH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GENERAL_REBIRTH);

        /** S2C_GENERAL_REBIRTH generalInfo. */
        public generalInfo: gameProto.IGeneralInfo;

        /**
         * Encodes the specified S2C_GENERAL_REBIRTH message. Does not implicitly {@link gameProto.S2C_GENERAL_REBIRTH.verify|verify} messages.
         * @param message S2C_GENERAL_REBIRTH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GENERAL_REBIRTH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GENERAL_REBIRTH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GENERAL_REBIRTH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GENERAL_REBIRTH;
    }

    /** Properties of a GiftBag. */
    interface IGiftBag {

        /** GiftBag giftBagId */
        giftBagId?: (number|null);

        /** GiftBag giftBagType */
        giftBagType?: (number|null);

        /** GiftBag giftBagStatus */
        giftBagStatus?: (number|null);

        /** GiftBag giftBagEffectTime */
        giftBagEffectTime?: (number|null);

        /** GiftBag type */
        type: number;

        /** GiftBag continueTime */
        continueTime?: (number|null);

        /** GiftBag condition */
        condition?: (number|null);

        /** GiftBag rechargeConfig */
        rechargeConfig?: (gameProto.IRechargeConfig|null);
    }

    /** Represents a GiftBag. */
    class GiftBag implements IGiftBag {

        /**
         * Constructs a new GiftBag.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGiftBag);

        /** GiftBag giftBagId. */
        public giftBagId: number;

        /** GiftBag giftBagType. */
        public giftBagType: number;

        /** GiftBag giftBagStatus. */
        public giftBagStatus: number;

        /** GiftBag giftBagEffectTime. */
        public giftBagEffectTime: number;

        /** GiftBag type. */
        public type: number;

        /** GiftBag continueTime. */
        public continueTime: number;

        /** GiftBag condition. */
        public condition: number;

        /** GiftBag rechargeConfig. */
        public rechargeConfig?: (gameProto.IRechargeConfig|null);

        /**
         * Encodes the specified GiftBag message. Does not implicitly {@link gameProto.GiftBag.verify|verify} messages.
         * @param message GiftBag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGiftBag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GiftBag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GiftBag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GiftBag;
    }

    /** Properties of a C2S_TIME_LIMI_GIFT_BAG_INFO. */
    interface IC2S_TIME_LIMI_GIFT_BAG_INFO {

        /** C2S_TIME_LIMI_GIFT_BAG_INFO type */
        type: number;
    }

    /** Represents a C2S_TIME_LIMI_GIFT_BAG_INFO. */
    class C2S_TIME_LIMI_GIFT_BAG_INFO implements IC2S_TIME_LIMI_GIFT_BAG_INFO {

        /**
         * Constructs a new C2S_TIME_LIMI_GIFT_BAG_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TIME_LIMI_GIFT_BAG_INFO);

        /** C2S_TIME_LIMI_GIFT_BAG_INFO type. */
        public type: number;

        /**
         * Encodes the specified C2S_TIME_LIMI_GIFT_BAG_INFO message. Does not implicitly {@link gameProto.C2S_TIME_LIMI_GIFT_BAG_INFO.verify|verify} messages.
         * @param message C2S_TIME_LIMI_GIFT_BAG_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TIME_LIMI_GIFT_BAG_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TIME_LIMI_GIFT_BAG_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TIME_LIMI_GIFT_BAG_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TIME_LIMI_GIFT_BAG_INFO;
    }

    /** Properties of a S2C_TIME_LIMI_GIFT_BAG_INFO. */
    interface IS2C_TIME_LIMI_GIFT_BAG_INFO {

        /** S2C_TIME_LIMI_GIFT_BAG_INFO giftList */
        giftList?: (gameProto.IGiftBag[]|null);
    }

    /** Represents a S2C_TIME_LIMI_GIFT_BAG_INFO. */
    class S2C_TIME_LIMI_GIFT_BAG_INFO implements IS2C_TIME_LIMI_GIFT_BAG_INFO {

        /**
         * Constructs a new S2C_TIME_LIMI_GIFT_BAG_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TIME_LIMI_GIFT_BAG_INFO);

        /** S2C_TIME_LIMI_GIFT_BAG_INFO giftList. */
        public giftList: gameProto.IGiftBag[];

        /**
         * Encodes the specified S2C_TIME_LIMI_GIFT_BAG_INFO message. Does not implicitly {@link gameProto.S2C_TIME_LIMI_GIFT_BAG_INFO.verify|verify} messages.
         * @param message S2C_TIME_LIMI_GIFT_BAG_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TIME_LIMI_GIFT_BAG_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TIME_LIMI_GIFT_BAG_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TIME_LIMI_GIFT_BAG_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TIME_LIMI_GIFT_BAG_INFO;
    }

    /** Properties of a S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO. */
    interface IS2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO {

        /** S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO gifgBag */
        gifgBag?: (gameProto.IGiftBag[]|null);
    }

    /** Represents a S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO. */
    class S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO implements IS2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO {

        /**
         * Constructs a new S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO);

        /** S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO gifgBag. */
        public gifgBag: gameProto.IGiftBag[];

        /**
         * Encodes the specified S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO message. Does not implicitly {@link gameProto.S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO.verify|verify} messages.
         * @param message S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SINGLE_TIME_LIMI_GIFT_BAG_INFO;
    }

    /** Properties of a C2S_TIME_LIMI_GIFT_BAG_BUY. */
    interface IC2S_TIME_LIMI_GIFT_BAG_BUY {

        /** C2S_TIME_LIMI_GIFT_BAG_BUY shopId */
        shopId: number;
    }

    /** Represents a C2S_TIME_LIMI_GIFT_BAG_BUY. */
    class C2S_TIME_LIMI_GIFT_BAG_BUY implements IC2S_TIME_LIMI_GIFT_BAG_BUY {

        /**
         * Constructs a new C2S_TIME_LIMI_GIFT_BAG_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TIME_LIMI_GIFT_BAG_BUY);

        /** C2S_TIME_LIMI_GIFT_BAG_BUY shopId. */
        public shopId: number;

        /**
         * Encodes the specified C2S_TIME_LIMI_GIFT_BAG_BUY message. Does not implicitly {@link gameProto.C2S_TIME_LIMI_GIFT_BAG_BUY.verify|verify} messages.
         * @param message C2S_TIME_LIMI_GIFT_BAG_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TIME_LIMI_GIFT_BAG_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TIME_LIMI_GIFT_BAG_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TIME_LIMI_GIFT_BAG_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TIME_LIMI_GIFT_BAG_BUY;
    }

    /** Properties of a S2C_TIME_LIMI_GIFT_BAG_BUY. */
    interface IS2C_TIME_LIMI_GIFT_BAG_BUY {

        /** S2C_TIME_LIMI_GIFT_BAG_BUY shopId */
        shopId: number;

        /** S2C_TIME_LIMI_GIFT_BAG_BUY giftBagStatus */
        giftBagStatus: number;
    }

    /** Represents a S2C_TIME_LIMI_GIFT_BAG_BUY. */
    class S2C_TIME_LIMI_GIFT_BAG_BUY implements IS2C_TIME_LIMI_GIFT_BAG_BUY {

        /**
         * Constructs a new S2C_TIME_LIMI_GIFT_BAG_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TIME_LIMI_GIFT_BAG_BUY);

        /** S2C_TIME_LIMI_GIFT_BAG_BUY shopId. */
        public shopId: number;

        /** S2C_TIME_LIMI_GIFT_BAG_BUY giftBagStatus. */
        public giftBagStatus: number;

        /**
         * Encodes the specified S2C_TIME_LIMI_GIFT_BAG_BUY message. Does not implicitly {@link gameProto.S2C_TIME_LIMI_GIFT_BAG_BUY.verify|verify} messages.
         * @param message S2C_TIME_LIMI_GIFT_BAG_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TIME_LIMI_GIFT_BAG_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TIME_LIMI_GIFT_BAG_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TIME_LIMI_GIFT_BAG_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TIME_LIMI_GIFT_BAG_BUY;
    }

    /** Properties of a C2S_TIME_LIMI_GIFT_BAG_AWARD. */
    interface IC2S_TIME_LIMI_GIFT_BAG_AWARD {

        /** C2S_TIME_LIMI_GIFT_BAG_AWARD giftBagId */
        giftBagId: number;
    }

    /** Represents a C2S_TIME_LIMI_GIFT_BAG_AWARD. */
    class C2S_TIME_LIMI_GIFT_BAG_AWARD implements IC2S_TIME_LIMI_GIFT_BAG_AWARD {

        /**
         * Constructs a new C2S_TIME_LIMI_GIFT_BAG_AWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TIME_LIMI_GIFT_BAG_AWARD);

        /** C2S_TIME_LIMI_GIFT_BAG_AWARD giftBagId. */
        public giftBagId: number;

        /**
         * Encodes the specified C2S_TIME_LIMI_GIFT_BAG_AWARD message. Does not implicitly {@link gameProto.C2S_TIME_LIMI_GIFT_BAG_AWARD.verify|verify} messages.
         * @param message C2S_TIME_LIMI_GIFT_BAG_AWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TIME_LIMI_GIFT_BAG_AWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TIME_LIMI_GIFT_BAG_AWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TIME_LIMI_GIFT_BAG_AWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TIME_LIMI_GIFT_BAG_AWARD;
    }

    /** Properties of a S2C_TIME_LIMI_GIFT_BAG_AWARD. */
    interface IS2C_TIME_LIMI_GIFT_BAG_AWARD {

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD resultCode */
        resultCode?: (number|null);

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD giftbagId */
        giftbagId?: (number|null);
    }

    /** Represents a S2C_TIME_LIMI_GIFT_BAG_AWARD. */
    class S2C_TIME_LIMI_GIFT_BAG_AWARD implements IS2C_TIME_LIMI_GIFT_BAG_AWARD {

        /**
         * Constructs a new S2C_TIME_LIMI_GIFT_BAG_AWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TIME_LIMI_GIFT_BAG_AWARD);

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD resultCode. */
        public resultCode: number;

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_TIME_LIMI_GIFT_BAG_AWARD giftbagId. */
        public giftbagId: number;

        /**
         * Encodes the specified S2C_TIME_LIMI_GIFT_BAG_AWARD message. Does not implicitly {@link gameProto.S2C_TIME_LIMI_GIFT_BAG_AWARD.verify|verify} messages.
         * @param message S2C_TIME_LIMI_GIFT_BAG_AWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TIME_LIMI_GIFT_BAG_AWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TIME_LIMI_GIFT_BAG_AWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TIME_LIMI_GIFT_BAG_AWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TIME_LIMI_GIFT_BAG_AWARD;
    }

    /** Properties of a GuildInfo. */
    interface IGuildInfo {

        /** GuildInfo id */
        id: number;

        /** GuildInfo name */
        name: string;

        /** GuildInfo guildMemberInfo */
        guildMemberInfo?: (gameProto.IGuildMemberInfo[]|null);

        /** GuildInfo configId */
        configId: number;

        /** GuildInfo declaration */
        declaration?: (string|null);

        /** GuildInfo fund */
        fund?: (number|null);

        /** GuildInfo buildingLevel */
        buildingLevel?: (number|null);

        /** GuildInfo joinStatus */
        joinStatus?: (number|null);

        /** GuildInfo iconStatus */
        iconStatus?: (number|null);

        /** GuildInfo capacity */
        capacity: number;

        /** GuildInfo guildPower */
        guildPower: number;

        /** GuildInfo memberCount */
        memberCount: number;

        /** GuildInfo guildLeader */
        guildLeader: string;

        /** GuildInfo guildTechInfo */
        guildTechInfo?: (gameProto.IGuildTechInfo[]|null);

        /** GuildInfo donateResourceCount */
        donateResourceCount: number;
    }

    /** Represents a GuildInfo. */
    class GuildInfo implements IGuildInfo {

        /**
         * Constructs a new GuildInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildInfo);

        /** GuildInfo id. */
        public id: number;

        /** GuildInfo name. */
        public name: string;

        /** GuildInfo guildMemberInfo. */
        public guildMemberInfo: gameProto.IGuildMemberInfo[];

        /** GuildInfo configId. */
        public configId: number;

        /** GuildInfo declaration. */
        public declaration: string;

        /** GuildInfo fund. */
        public fund: number;

        /** GuildInfo buildingLevel. */
        public buildingLevel: number;

        /** GuildInfo joinStatus. */
        public joinStatus: number;

        /** GuildInfo iconStatus. */
        public iconStatus: number;

        /** GuildInfo capacity. */
        public capacity: number;

        /** GuildInfo guildPower. */
        public guildPower: number;

        /** GuildInfo memberCount. */
        public memberCount: number;

        /** GuildInfo guildLeader. */
        public guildLeader: string;

        /** GuildInfo guildTechInfo. */
        public guildTechInfo: gameProto.IGuildTechInfo[];

        /** GuildInfo donateResourceCount. */
        public donateResourceCount: number;

        /**
         * Encodes the specified GuildInfo message. Does not implicitly {@link gameProto.GuildInfo.verify|verify} messages.
         * @param message GuildInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildInfo;
    }

    /** Properties of a GuildData. */
    interface IGuildData {

        /** GuildData id */
        id: number;

        /** GuildData name */
        name: string;

        /** GuildData guildMemberInfo */
        guildMemberInfo: gameProto.IGuildMemberInfo;

        /** GuildData configId */
        configId: number;

        /** GuildData declaration */
        declaration?: (string|null);

        /** GuildData memberCount */
        memberCount: number;

        /** GuildData capacity */
        capacity: number;

        /** GuildData guildPower */
        guildPower: number;
    }

    /** Represents a GuildData. */
    class GuildData implements IGuildData {

        /**
         * Constructs a new GuildData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildData);

        /** GuildData id. */
        public id: number;

        /** GuildData name. */
        public name: string;

        /** GuildData guildMemberInfo. */
        public guildMemberInfo: gameProto.IGuildMemberInfo;

        /** GuildData configId. */
        public configId: number;

        /** GuildData declaration. */
        public declaration: string;

        /** GuildData memberCount. */
        public memberCount: number;

        /** GuildData capacity. */
        public capacity: number;

        /** GuildData guildPower. */
        public guildPower: number;

        /**
         * Encodes the specified GuildData message. Does not implicitly {@link gameProto.GuildData.verify|verify} messages.
         * @param message GuildData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildData;
    }

    /** Properties of a GuildMemberInfo. */
    interface IGuildMemberInfo {

        /** GuildMemberInfo playerId */
        playerId: number;

        /** GuildMemberInfo name */
        name: string;

        /** GuildMemberInfo level */
        level: number;

        /** GuildMemberInfo position */
        position: number;

        /** GuildMemberInfo joinTime */
        joinTime?: (number|null);

        /** GuildMemberInfo onlineTime */
        onlineTime?: (number|null);

        /** GuildMemberInfo power */
        power?: (number|null);

        /** GuildMemberInfo offline */
        offline?: (boolean|null);

        /** GuildMemberInfo offlineTime */
        offlineTime?: (number|null);

        /** GuildMemberInfo donate */
        donate?: (number|null);

        /** GuildMemberInfo head */
        head: number;

        /** GuildMemberInfo vip */
        vip?: (number|null);
    }

    /** Represents a GuildMemberInfo. */
    class GuildMemberInfo implements IGuildMemberInfo {

        /**
         * Constructs a new GuildMemberInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildMemberInfo);

        /** GuildMemberInfo playerId. */
        public playerId: number;

        /** GuildMemberInfo name. */
        public name: string;

        /** GuildMemberInfo level. */
        public level: number;

        /** GuildMemberInfo position. */
        public position: number;

        /** GuildMemberInfo joinTime. */
        public joinTime: number;

        /** GuildMemberInfo onlineTime. */
        public onlineTime: number;

        /** GuildMemberInfo power. */
        public power: number;

        /** GuildMemberInfo offline. */
        public offline: boolean;

        /** GuildMemberInfo offlineTime. */
        public offlineTime: number;

        /** GuildMemberInfo donate. */
        public donate: number;

        /** GuildMemberInfo head. */
        public head: number;

        /** GuildMemberInfo vip. */
        public vip: number;

        /**
         * Encodes the specified GuildMemberInfo message. Does not implicitly {@link gameProto.GuildMemberInfo.verify|verify} messages.
         * @param message GuildMemberInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildMemberInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildMemberInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildMemberInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildMemberInfo;
    }

    /** Properties of a GuildTechInfo. */
    interface IGuildTechInfo {

        /** GuildTechInfo id */
        id: number;

        /** GuildTechInfo exp */
        exp: number;

        /** GuildTechInfo type */
        type: number;
    }

    /** Represents a GuildTechInfo. */
    class GuildTechInfo implements IGuildTechInfo {

        /**
         * Constructs a new GuildTechInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechInfo);

        /** GuildTechInfo id. */
        public id: number;

        /** GuildTechInfo exp. */
        public exp: number;

        /** GuildTechInfo type. */
        public type: number;

        /**
         * Encodes the specified GuildTechInfo message. Does not implicitly {@link gameProto.GuildTechInfo.verify|verify} messages.
         * @param message GuildTechInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechInfo;
    }

    /** Properties of a GuildShopGoods. */
    interface IGuildShopGoods {

        /** GuildShopGoods id */
        id: number;

        /** GuildShopGoods itemId */
        itemId: number;

        /** GuildShopGoods count */
        count: number;
    }

    /** Represents a GuildShopGoods. */
    class GuildShopGoods implements IGuildShopGoods {

        /**
         * Constructs a new GuildShopGoods.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildShopGoods);

        /** GuildShopGoods id. */
        public id: number;

        /** GuildShopGoods itemId. */
        public itemId: number;

        /** GuildShopGoods count. */
        public count: number;

        /**
         * Encodes the specified GuildShopGoods message. Does not implicitly {@link gameProto.GuildShopGoods.verify|verify} messages.
         * @param message GuildShopGoods message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildShopGoods, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildShopGoods message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildShopGoods
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildShopGoods;
    }

    /** Properties of a CheckPlayerInfo. */
    interface ICheckPlayerInfo {

        /** CheckPlayerInfo playerId */
        playerId: number;

        /** CheckPlayerInfo name */
        name: string;

        /** CheckPlayerInfo level */
        level: number;

        /** CheckPlayerInfo position */
        position: number;

        /** CheckPlayerInfo power */
        power?: (number|null);

        /** CheckPlayerInfo head */
        head: number;

        /** CheckPlayerInfo buildingLevel */
        buildingLevel: number;

        /** CheckPlayerInfo generalList */
        generalList?: (gameProto.IGeneralDetails[]|null);

        /** CheckPlayerInfo guildName */
        guildName?: (string|null);

        /** CheckPlayerInfo countryId */
        countryId: number;
    }

    /** Represents a CheckPlayerInfo. */
    class CheckPlayerInfo implements ICheckPlayerInfo {

        /**
         * Constructs a new CheckPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckPlayerInfo);

        /** CheckPlayerInfo playerId. */
        public playerId: number;

        /** CheckPlayerInfo name. */
        public name: string;

        /** CheckPlayerInfo level. */
        public level: number;

        /** CheckPlayerInfo position. */
        public position: number;

        /** CheckPlayerInfo power. */
        public power: number;

        /** CheckPlayerInfo head. */
        public head: number;

        /** CheckPlayerInfo buildingLevel. */
        public buildingLevel: number;

        /** CheckPlayerInfo generalList. */
        public generalList: gameProto.IGeneralDetails[];

        /** CheckPlayerInfo guildName. */
        public guildName: string;

        /** CheckPlayerInfo countryId. */
        public countryId: number;

        /**
         * Encodes the specified CheckPlayerInfo message. Does not implicitly {@link gameProto.CheckPlayerInfo.verify|verify} messages.
         * @param message CheckPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckPlayerInfo;
    }

    /** Properties of a GeneralDetails. */
    interface IGeneralDetails {

        /** GeneralDetails id */
        id: number;

        /** GeneralDetails star */
        star: number;

        /** GeneralDetails armyId */
        armyId: number;

        /** GeneralDetails level */
        level: number;
    }

    /** Represents a GeneralDetails. */
    class GeneralDetails implements IGeneralDetails {

        /**
         * Constructs a new GeneralDetails.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralDetails);

        /** GeneralDetails id. */
        public id: number;

        /** GeneralDetails star. */
        public star: number;

        /** GeneralDetails armyId. */
        public armyId: number;

        /** GeneralDetails level. */
        public level: number;

        /**
         * Encodes the specified GeneralDetails message. Does not implicitly {@link gameProto.GeneralDetails.verify|verify} messages.
         * @param message GeneralDetails message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralDetails, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralDetails message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralDetails;
    }

    /** GuildInformationType enum. */
    enum GuildInformationType {
        createGuild = 1,
        joinGuild = 2,
        leaveGuild = 3,
        kickOutFromGuild = 4,
        appointPosition = 5,
        changeGuildLeader = 6,
        changeName = 7,
        applyGuildLeader = 8
    }

    /** Properties of a GuildInformationBar. */
    interface IGuildInformationBar {

        /** GuildInformationBar msgTime */
        msgTime: number;

        /** GuildInformationBar type */
        type?: (number|null);

        /** GuildInformationBar guildName */
        guildName: string;

        /** GuildInformationBar playerName */
        playerName: string;

        /** GuildInformationBar positionName */
        positionName: string;

        /** GuildInformationBar positionPlayerName */
        positionPlayerName: string;
    }

    /** Represents a GuildInformationBar. */
    class GuildInformationBar implements IGuildInformationBar {

        /**
         * Constructs a new GuildInformationBar.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildInformationBar);

        /** GuildInformationBar msgTime. */
        public msgTime: number;

        /** GuildInformationBar type. */
        public type: number;

        /** GuildInformationBar guildName. */
        public guildName: string;

        /** GuildInformationBar playerName. */
        public playerName: string;

        /** GuildInformationBar positionName. */
        public positionName: string;

        /** GuildInformationBar positionPlayerName. */
        public positionPlayerName: string;

        /**
         * Encodes the specified GuildInformationBar message. Does not implicitly {@link gameProto.GuildInformationBar.verify|verify} messages.
         * @param message GuildInformationBar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildInformationBar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildInformationBar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildInformationBar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildInformationBar;
    }

    /** Properties of a StayApplyJoinGuild. */
    interface IStayApplyJoinGuild {

        /** StayApplyJoinGuild playerId */
        playerId: number;

        /** StayApplyJoinGuild name */
        name: string;

        /** StayApplyJoinGuild level */
        level: number;

        /** StayApplyJoinGuild power */
        power: number;
    }

    /** Represents a StayApplyJoinGuild. */
    class StayApplyJoinGuild implements IStayApplyJoinGuild {

        /**
         * Constructs a new StayApplyJoinGuild.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IStayApplyJoinGuild);

        /** StayApplyJoinGuild playerId. */
        public playerId: number;

        /** StayApplyJoinGuild name. */
        public name: string;

        /** StayApplyJoinGuild level. */
        public level: number;

        /** StayApplyJoinGuild power. */
        public power: number;

        /**
         * Encodes the specified StayApplyJoinGuild message. Does not implicitly {@link gameProto.StayApplyJoinGuild.verify|verify} messages.
         * @param message StayApplyJoinGuild message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IStayApplyJoinGuild, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a StayApplyJoinGuild message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StayApplyJoinGuild
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.StayApplyJoinGuild;
    }

    /** Properties of a RankGuildInfo. */
    interface IRankGuildInfo {

        /** RankGuildInfo id */
        id: number;

        /** RankGuildInfo name */
        name: string;

        /** RankGuildInfo iconStatus */
        iconStatus?: (number|null);

        /** RankGuildInfo guildPower */
        guildPower: number;

        /** RankGuildInfo rank */
        rank: number;

        /** RankGuildInfo leaderInfo */
        leaderInfo: gameProto.IGuildMemberInfo;

        /** RankGuildInfo guildMemberInfo */
        guildMemberInfo?: (gameProto.IGuildMemberInfo[]|null);
    }

    /** Represents a RankGuildInfo. */
    class RankGuildInfo implements IRankGuildInfo {

        /**
         * Constructs a new RankGuildInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRankGuildInfo);

        /** RankGuildInfo id. */
        public id: number;

        /** RankGuildInfo name. */
        public name: string;

        /** RankGuildInfo iconStatus. */
        public iconStatus: number;

        /** RankGuildInfo guildPower. */
        public guildPower: number;

        /** RankGuildInfo rank. */
        public rank: number;

        /** RankGuildInfo leaderInfo. */
        public leaderInfo: gameProto.IGuildMemberInfo;

        /** RankGuildInfo guildMemberInfo. */
        public guildMemberInfo: gameProto.IGuildMemberInfo[];

        /**
         * Encodes the specified RankGuildInfo message. Does not implicitly {@link gameProto.RankGuildInfo.verify|verify} messages.
         * @param message RankGuildInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRankGuildInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankGuildInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankGuildInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RankGuildInfo;
    }

    /** Properties of a CreateGuildReq. */
    interface ICreateGuildReq {

        /** CreateGuildReq name */
        name?: (string|null);

        /** CreateGuildReq declaration */
        declaration?: (string|null);
    }

    /** Represents a CreateGuildReq. */
    class CreateGuildReq implements ICreateGuildReq {

        /**
         * Constructs a new CreateGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICreateGuildReq);

        /** CreateGuildReq name. */
        public name: string;

        /** CreateGuildReq declaration. */
        public declaration: string;

        /**
         * Encodes the specified CreateGuildReq message. Does not implicitly {@link gameProto.CreateGuildReq.verify|verify} messages.
         * @param message CreateGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICreateGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CreateGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CreateGuildReq;
    }

    /** Properties of a CreateGuildResp. */
    interface ICreateGuildResp {

        /** CreateGuildResp guildInfo */
        guildInfo: gameProto.IGuildInfo;
    }

    /** Represents a CreateGuildResp. */
    class CreateGuildResp implements ICreateGuildResp {

        /**
         * Constructs a new CreateGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICreateGuildResp);

        /** CreateGuildResp guildInfo. */
        public guildInfo: gameProto.IGuildInfo;

        /**
         * Encodes the specified CreateGuildResp message. Does not implicitly {@link gameProto.CreateGuildResp.verify|verify} messages.
         * @param message CreateGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICreateGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CreateGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CreateGuildResp;
    }

    /** Properties of a GetGuildInfoReq. */
    interface IGetGuildInfoReq {

        /** GetGuildInfoReq id */
        id?: (number|null);
    }

    /** Represents a GetGuildInfoReq. */
    class GetGuildInfoReq implements IGetGuildInfoReq {

        /**
         * Constructs a new GetGuildInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetGuildInfoReq);

        /** GetGuildInfoReq id. */
        public id: number;

        /**
         * Encodes the specified GetGuildInfoReq message. Does not implicitly {@link gameProto.GetGuildInfoReq.verify|verify} messages.
         * @param message GetGuildInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetGuildInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetGuildInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGuildInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetGuildInfoReq;
    }

    /** Properties of a GetGuildInfoResp. */
    interface IGetGuildInfoResp {

        /** GetGuildInfoResp guildInfo */
        guildInfo?: (gameProto.IGuildInfo|null);

        /** GetGuildInfoResp id */
        id?: (number|null);
    }

    /** Represents a GetGuildInfoResp. */
    class GetGuildInfoResp implements IGetGuildInfoResp {

        /**
         * Constructs a new GetGuildInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetGuildInfoResp);

        /** GetGuildInfoResp guildInfo. */
        public guildInfo?: (gameProto.IGuildInfo|null);

        /** GetGuildInfoResp id. */
        public id: number;

        /**
         * Encodes the specified GetGuildInfoResp message. Does not implicitly {@link gameProto.GetGuildInfoResp.verify|verify} messages.
         * @param message GetGuildInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetGuildInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetGuildInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGuildInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetGuildInfoResp;
    }

    /** Properties of a GuildListReq. */
    interface IGuildListReq {
    }

    /** Represents a GuildListReq. */
    class GuildListReq implements IGuildListReq {

        /**
         * Constructs a new GuildListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildListReq);

        /**
         * Encodes the specified GuildListReq message. Does not implicitly {@link gameProto.GuildListReq.verify|verify} messages.
         * @param message GuildListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildListReq;
    }

    /** Properties of a GuildListResp. */
    interface IGuildListResp {

        /** GuildListResp guildData */
        guildData?: (gameProto.IGuildData[]|null);
    }

    /** Represents a GuildListResp. */
    class GuildListResp implements IGuildListResp {

        /**
         * Constructs a new GuildListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildListResp);

        /** GuildListResp guildData. */
        public guildData: gameProto.IGuildData[];

        /**
         * Encodes the specified GuildListResp message. Does not implicitly {@link gameProto.GuildListResp.verify|verify} messages.
         * @param message GuildListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildListResp;
    }

    /** Properties of an ApplyJoinGuildReq. */
    interface IApplyJoinGuildReq {

        /** ApplyJoinGuildReq id */
        id: number;
    }

    /** Represents an ApplyJoinGuildReq. */
    class ApplyJoinGuildReq implements IApplyJoinGuildReq {

        /**
         * Constructs a new ApplyJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApplyJoinGuildReq);

        /** ApplyJoinGuildReq id. */
        public id: number;

        /**
         * Encodes the specified ApplyJoinGuildReq message. Does not implicitly {@link gameProto.ApplyJoinGuildReq.verify|verify} messages.
         * @param message ApplyJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApplyJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApplyJoinGuildReq;
    }

    /** Properties of an ApplyJoinGuildResp. */
    interface IApplyJoinGuildResp {

        /** ApplyJoinGuildResp id */
        id: number;

        /** ApplyJoinGuildResp join */
        join: number;

        /** ApplyJoinGuildResp GuildBuildingLevel */
        GuildBuildingLevel: number;
    }

    /** Represents an ApplyJoinGuildResp. */
    class ApplyJoinGuildResp implements IApplyJoinGuildResp {

        /**
         * Constructs a new ApplyJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApplyJoinGuildResp);

        /** ApplyJoinGuildResp id. */
        public id: number;

        /** ApplyJoinGuildResp join. */
        public join: number;

        /** ApplyJoinGuildResp GuildBuildingLevel. */
        public GuildBuildingLevel: number;

        /**
         * Encodes the specified ApplyJoinGuildResp message. Does not implicitly {@link gameProto.ApplyJoinGuildResp.verify|verify} messages.
         * @param message ApplyJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApplyJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApplyJoinGuildResp;
    }

    /** Properties of an OtherApplyJoinGuildResp. */
    interface IOtherApplyJoinGuildResp {

        /** OtherApplyJoinGuildResp playerId */
        playerId: number;

        /** OtherApplyJoinGuildResp name */
        name: string;

        /** OtherApplyJoinGuildResp level */
        level: number;
    }

    /** Represents an OtherApplyJoinGuildResp. */
    class OtherApplyJoinGuildResp implements IOtherApplyJoinGuildResp {

        /**
         * Constructs a new OtherApplyJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IOtherApplyJoinGuildResp);

        /** OtherApplyJoinGuildResp playerId. */
        public playerId: number;

        /** OtherApplyJoinGuildResp name. */
        public name: string;

        /** OtherApplyJoinGuildResp level. */
        public level: number;

        /**
         * Encodes the specified OtherApplyJoinGuildResp message. Does not implicitly {@link gameProto.OtherApplyJoinGuildResp.verify|verify} messages.
         * @param message OtherApplyJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IOtherApplyJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an OtherApplyJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OtherApplyJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.OtherApplyJoinGuildResp;
    }

    /** Properties of an AcceptApplyJoinGuildReq. */
    interface IAcceptApplyJoinGuildReq {

        /** AcceptApplyJoinGuildReq playerId */
        playerId: number;

        /** AcceptApplyJoinGuildReq status */
        status: number;

        /** AcceptApplyJoinGuildReq type */
        type: number;
    }

    /** Represents an AcceptApplyJoinGuildReq. */
    class AcceptApplyJoinGuildReq implements IAcceptApplyJoinGuildReq {

        /**
         * Constructs a new AcceptApplyJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAcceptApplyJoinGuildReq);

        /** AcceptApplyJoinGuildReq playerId. */
        public playerId: number;

        /** AcceptApplyJoinGuildReq status. */
        public status: number;

        /** AcceptApplyJoinGuildReq type. */
        public type: number;

        /**
         * Encodes the specified AcceptApplyJoinGuildReq message. Does not implicitly {@link gameProto.AcceptApplyJoinGuildReq.verify|verify} messages.
         * @param message AcceptApplyJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAcceptApplyJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptApplyJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptApplyJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AcceptApplyJoinGuildReq;
    }

    /** Properties of an AcceptApplyJoinGuildResp. */
    interface IAcceptApplyJoinGuildResp {

        /** AcceptApplyJoinGuildResp playerId */
        playerId: number;

        /** AcceptApplyJoinGuildResp status */
        status: number;

        /** AcceptApplyJoinGuildResp type */
        type: number;
    }

    /** Represents an AcceptApplyJoinGuildResp. */
    class AcceptApplyJoinGuildResp implements IAcceptApplyJoinGuildResp {

        /**
         * Constructs a new AcceptApplyJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAcceptApplyJoinGuildResp);

        /** AcceptApplyJoinGuildResp playerId. */
        public playerId: number;

        /** AcceptApplyJoinGuildResp status. */
        public status: number;

        /** AcceptApplyJoinGuildResp type. */
        public type: number;

        /**
         * Encodes the specified AcceptApplyJoinGuildResp message. Does not implicitly {@link gameProto.AcceptApplyJoinGuildResp.verify|verify} messages.
         * @param message AcceptApplyJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAcceptApplyJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AcceptApplyJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptApplyJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AcceptApplyJoinGuildResp;
    }

    /** Properties of a JoinGuildResp. */
    interface IJoinGuildResp {

        /** JoinGuildResp guildInfo */
        guildInfo: gameProto.IGuildInfo;
    }

    /** Represents a JoinGuildResp. */
    class JoinGuildResp implements IJoinGuildResp {

        /**
         * Constructs a new JoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IJoinGuildResp);

        /** JoinGuildResp guildInfo. */
        public guildInfo: gameProto.IGuildInfo;

        /**
         * Encodes the specified JoinGuildResp message. Does not implicitly {@link gameProto.JoinGuildResp.verify|verify} messages.
         * @param message JoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a JoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns JoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.JoinGuildResp;
    }

    /** Properties of a KickOutGuildReq. */
    interface IKickOutGuildReq {

        /** KickOutGuildReq playerId */
        playerId: number;
    }

    /** Represents a KickOutGuildReq. */
    class KickOutGuildReq implements IKickOutGuildReq {

        /**
         * Constructs a new KickOutGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IKickOutGuildReq);

        /** KickOutGuildReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified KickOutGuildReq message. Does not implicitly {@link gameProto.KickOutGuildReq.verify|verify} messages.
         * @param message KickOutGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IKickOutGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KickOutGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KickOutGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.KickOutGuildReq;
    }

    /** Properties of a KickOutGuildResp. */
    interface IKickOutGuildResp {

        /** KickOutGuildResp playerId */
        playerId: number;
    }

    /** Represents a KickOutGuildResp. */
    class KickOutGuildResp implements IKickOutGuildResp {

        /**
         * Constructs a new KickOutGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IKickOutGuildResp);

        /** KickOutGuildResp playerId. */
        public playerId: number;

        /**
         * Encodes the specified KickOutGuildResp message. Does not implicitly {@link gameProto.KickOutGuildResp.verify|verify} messages.
         * @param message KickOutGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IKickOutGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KickOutGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KickOutGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.KickOutGuildResp;
    }

    /** Properties of a KickOutFromGuildResp. */
    interface IKickOutFromGuildResp {

        /** KickOutFromGuildResp playerId */
        playerId: number;
    }

    /** Represents a KickOutFromGuildResp. */
    class KickOutFromGuildResp implements IKickOutFromGuildResp {

        /**
         * Constructs a new KickOutFromGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IKickOutFromGuildResp);

        /** KickOutFromGuildResp playerId. */
        public playerId: number;

        /**
         * Encodes the specified KickOutFromGuildResp message. Does not implicitly {@link gameProto.KickOutFromGuildResp.verify|verify} messages.
         * @param message KickOutFromGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IKickOutFromGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a KickOutFromGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KickOutFromGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.KickOutFromGuildResp;
    }

    /** Properties of a ChangeGuildLeaderReq. */
    interface IChangeGuildLeaderReq {

        /** ChangeGuildLeaderReq newLeaderId */
        newLeaderId: number;
    }

    /** Represents a ChangeGuildLeaderReq. */
    class ChangeGuildLeaderReq implements IChangeGuildLeaderReq {

        /**
         * Constructs a new ChangeGuildLeaderReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeGuildLeaderReq);

        /** ChangeGuildLeaderReq newLeaderId. */
        public newLeaderId: number;

        /**
         * Encodes the specified ChangeGuildLeaderReq message. Does not implicitly {@link gameProto.ChangeGuildLeaderReq.verify|verify} messages.
         * @param message ChangeGuildLeaderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeGuildLeaderReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeGuildLeaderReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeGuildLeaderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeGuildLeaderReq;
    }

    /** Properties of a ChangeGuildLeaderResp. */
    interface IChangeGuildLeaderResp {

        /** ChangeGuildLeaderResp leaderId */
        leaderId: number;

        /** ChangeGuildLeaderResp newLeaderId */
        newLeaderId: number;
    }

    /** Represents a ChangeGuildLeaderResp. */
    class ChangeGuildLeaderResp implements IChangeGuildLeaderResp {

        /**
         * Constructs a new ChangeGuildLeaderResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeGuildLeaderResp);

        /** ChangeGuildLeaderResp leaderId. */
        public leaderId: number;

        /** ChangeGuildLeaderResp newLeaderId. */
        public newLeaderId: number;

        /**
         * Encodes the specified ChangeGuildLeaderResp message. Does not implicitly {@link gameProto.ChangeGuildLeaderResp.verify|verify} messages.
         * @param message ChangeGuildLeaderResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeGuildLeaderResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeGuildLeaderResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeGuildLeaderResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeGuildLeaderResp;
    }

    /** Properties of a ChangeNameReq. */
    interface IChangeNameReq {

        /** ChangeNameReq newName */
        newName: string;
    }

    /** Represents a ChangeNameReq. */
    class ChangeNameReq implements IChangeNameReq {

        /**
         * Constructs a new ChangeNameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeNameReq);

        /** ChangeNameReq newName. */
        public newName: string;

        /**
         * Encodes the specified ChangeNameReq message. Does not implicitly {@link gameProto.ChangeNameReq.verify|verify} messages.
         * @param message ChangeNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeNameReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeNameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeNameReq;
    }

    /** Properties of a ChangeNameResp. */
    interface IChangeNameResp {

        /** ChangeNameResp newName */
        newName: string;
    }

    /** Represents a ChangeNameResp. */
    class ChangeNameResp implements IChangeNameResp {

        /**
         * Constructs a new ChangeNameResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeNameResp);

        /** ChangeNameResp newName. */
        public newName: string;

        /**
         * Encodes the specified ChangeNameResp message. Does not implicitly {@link gameProto.ChangeNameResp.verify|verify} messages.
         * @param message ChangeNameResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeNameResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeNameResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeNameResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeNameResp;
    }

    /** Properties of a ChangeDeclarationReq. */
    interface IChangeDeclarationReq {

        /** ChangeDeclarationReq newDeclaration */
        newDeclaration: string;
    }

    /** Represents a ChangeDeclarationReq. */
    class ChangeDeclarationReq implements IChangeDeclarationReq {

        /**
         * Constructs a new ChangeDeclarationReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeDeclarationReq);

        /** ChangeDeclarationReq newDeclaration. */
        public newDeclaration: string;

        /**
         * Encodes the specified ChangeDeclarationReq message. Does not implicitly {@link gameProto.ChangeDeclarationReq.verify|verify} messages.
         * @param message ChangeDeclarationReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeDeclarationReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeDeclarationReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeDeclarationReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeDeclarationReq;
    }

    /** Properties of a ChangeDeclarationResp. */
    interface IChangeDeclarationResp {

        /** ChangeDeclarationResp newDeclaration */
        newDeclaration: string;
    }

    /** Represents a ChangeDeclarationResp. */
    class ChangeDeclarationResp implements IChangeDeclarationResp {

        /**
         * Constructs a new ChangeDeclarationResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChangeDeclarationResp);

        /** ChangeDeclarationResp newDeclaration. */
        public newDeclaration: string;

        /**
         * Encodes the specified ChangeDeclarationResp message. Does not implicitly {@link gameProto.ChangeDeclarationResp.verify|verify} messages.
         * @param message ChangeDeclarationResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChangeDeclarationResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeDeclarationResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeDeclarationResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChangeDeclarationResp;
    }

    /** Properties of a GetGuildListByNameReq. */
    interface IGetGuildListByNameReq {

        /** GetGuildListByNameReq name */
        name: string;
    }

    /** Represents a GetGuildListByNameReq. */
    class GetGuildListByNameReq implements IGetGuildListByNameReq {

        /**
         * Constructs a new GetGuildListByNameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetGuildListByNameReq);

        /** GetGuildListByNameReq name. */
        public name: string;

        /**
         * Encodes the specified GetGuildListByNameReq message. Does not implicitly {@link gameProto.GetGuildListByNameReq.verify|verify} messages.
         * @param message GetGuildListByNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetGuildListByNameReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetGuildListByNameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGuildListByNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetGuildListByNameReq;
    }

    /** Properties of a GetGuildListByNameResp. */
    interface IGetGuildListByNameResp {

        /** GetGuildListByNameResp guildData */
        guildData?: (gameProto.IGuildData[]|null);
    }

    /** Represents a GetGuildListByNameResp. */
    class GetGuildListByNameResp implements IGetGuildListByNameResp {

        /**
         * Constructs a new GetGuildListByNameResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetGuildListByNameResp);

        /** GetGuildListByNameResp guildData. */
        public guildData: gameProto.IGuildData[];

        /**
         * Encodes the specified GetGuildListByNameResp message. Does not implicitly {@link gameProto.GetGuildListByNameResp.verify|verify} messages.
         * @param message GetGuildListByNameResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetGuildListByNameResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetGuildListByNameResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGuildListByNameResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetGuildListByNameResp;
    }

    /** Properties of a LeaveGuildReq. */
    interface ILeaveGuildReq {
    }

    /** Represents a LeaveGuildReq. */
    class LeaveGuildReq implements ILeaveGuildReq {

        /**
         * Constructs a new LeaveGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ILeaveGuildReq);

        /**
         * Encodes the specified LeaveGuildReq message. Does not implicitly {@link gameProto.LeaveGuildReq.verify|verify} messages.
         * @param message LeaveGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ILeaveGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LeaveGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeaveGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.LeaveGuildReq;
    }

    /** Properties of a LeaveGuildResp. */
    interface ILeaveGuildResp {
    }

    /** Represents a LeaveGuildResp. */
    class LeaveGuildResp implements ILeaveGuildResp {

        /**
         * Constructs a new LeaveGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ILeaveGuildResp);

        /**
         * Encodes the specified LeaveGuildResp message. Does not implicitly {@link gameProto.LeaveGuildResp.verify|verify} messages.
         * @param message LeaveGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ILeaveGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LeaveGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeaveGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.LeaveGuildResp;
    }

    /** Properties of an ApplyGuildLeaderReq. */
    interface IApplyGuildLeaderReq {
    }

    /** Represents an ApplyGuildLeaderReq. */
    class ApplyGuildLeaderReq implements IApplyGuildLeaderReq {

        /**
         * Constructs a new ApplyGuildLeaderReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApplyGuildLeaderReq);

        /**
         * Encodes the specified ApplyGuildLeaderReq message. Does not implicitly {@link gameProto.ApplyGuildLeaderReq.verify|verify} messages.
         * @param message ApplyGuildLeaderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApplyGuildLeaderReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyGuildLeaderReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyGuildLeaderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApplyGuildLeaderReq;
    }

    /** Properties of an ApplyGuildLeaderResp. */
    interface IApplyGuildLeaderResp {

        /** ApplyGuildLeaderResp oldLeaderId */
        oldLeaderId: number;

        /** ApplyGuildLeaderResp newLeaderId */
        newLeaderId: number;
    }

    /** Represents an ApplyGuildLeaderResp. */
    class ApplyGuildLeaderResp implements IApplyGuildLeaderResp {

        /**
         * Constructs a new ApplyGuildLeaderResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IApplyGuildLeaderResp);

        /** ApplyGuildLeaderResp oldLeaderId. */
        public oldLeaderId: number;

        /** ApplyGuildLeaderResp newLeaderId. */
        public newLeaderId: number;

        /**
         * Encodes the specified ApplyGuildLeaderResp message. Does not implicitly {@link gameProto.ApplyGuildLeaderResp.verify|verify} messages.
         * @param message ApplyGuildLeaderResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IApplyGuildLeaderResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an ApplyGuildLeaderResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplyGuildLeaderResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ApplyGuildLeaderResp;
    }

    /** Properties of an AppointPositionReq. */
    interface IAppointPositionReq {

        /** AppointPositionReq playerId */
        playerId: number;

        /** AppointPositionReq positionId */
        positionId: number;
    }

    /** Represents an AppointPositionReq. */
    class AppointPositionReq implements IAppointPositionReq {

        /**
         * Constructs a new AppointPositionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAppointPositionReq);

        /** AppointPositionReq playerId. */
        public playerId: number;

        /** AppointPositionReq positionId. */
        public positionId: number;

        /**
         * Encodes the specified AppointPositionReq message. Does not implicitly {@link gameProto.AppointPositionReq.verify|verify} messages.
         * @param message AppointPositionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAppointPositionReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AppointPositionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppointPositionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AppointPositionReq;
    }

    /** Properties of an AppointPositionResp. */
    interface IAppointPositionResp {

        /** AppointPositionResp playerId */
        playerId: number;

        /** AppointPositionResp positionId */
        positionId: number;
    }

    /** Represents an AppointPositionResp. */
    class AppointPositionResp implements IAppointPositionResp {

        /**
         * Constructs a new AppointPositionResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAppointPositionResp);

        /** AppointPositionResp playerId. */
        public playerId: number;

        /** AppointPositionResp positionId. */
        public positionId: number;

        /**
         * Encodes the specified AppointPositionResp message. Does not implicitly {@link gameProto.AppointPositionResp.verify|verify} messages.
         * @param message AppointPositionResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAppointPositionResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AppointPositionResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AppointPositionResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AppointPositionResp;
    }

    /** Properties of a BeAppointPositionResp. */
    interface IBeAppointPositionResp {

        /** BeAppointPositionResp playerId */
        playerId: number;

        /** BeAppointPositionResp positionId */
        positionId: number;
    }

    /** Represents a BeAppointPositionResp. */
    class BeAppointPositionResp implements IBeAppointPositionResp {

        /**
         * Constructs a new BeAppointPositionResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBeAppointPositionResp);

        /** BeAppointPositionResp playerId. */
        public playerId: number;

        /** BeAppointPositionResp positionId. */
        public positionId: number;

        /**
         * Encodes the specified BeAppointPositionResp message. Does not implicitly {@link gameProto.BeAppointPositionResp.verify|verify} messages.
         * @param message BeAppointPositionResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBeAppointPositionResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeAppointPositionResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeAppointPositionResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BeAppointPositionResp;
    }

    /** Properties of a CheckPlayerDetailsReq. */
    interface ICheckPlayerDetailsReq {

        /** CheckPlayerDetailsReq playerId */
        playerId: number;
    }

    /** Represents a CheckPlayerDetailsReq. */
    class CheckPlayerDetailsReq implements ICheckPlayerDetailsReq {

        /**
         * Constructs a new CheckPlayerDetailsReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckPlayerDetailsReq);

        /** CheckPlayerDetailsReq playerId. */
        public playerId: number;

        /**
         * Encodes the specified CheckPlayerDetailsReq message. Does not implicitly {@link gameProto.CheckPlayerDetailsReq.verify|verify} messages.
         * @param message CheckPlayerDetailsReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckPlayerDetailsReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckPlayerDetailsReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckPlayerDetailsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckPlayerDetailsReq;
    }

    /** Properties of a CheckPlayerDetailsResp. */
    interface ICheckPlayerDetailsResp {

        /** CheckPlayerDetailsResp checkPlayerInfo */
        checkPlayerInfo: gameProto.ICheckPlayerInfo;
    }

    /** Represents a CheckPlayerDetailsResp. */
    class CheckPlayerDetailsResp implements ICheckPlayerDetailsResp {

        /**
         * Constructs a new CheckPlayerDetailsResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckPlayerDetailsResp);

        /** CheckPlayerDetailsResp checkPlayerInfo. */
        public checkPlayerInfo: gameProto.ICheckPlayerInfo;

        /**
         * Encodes the specified CheckPlayerDetailsResp message. Does not implicitly {@link gameProto.CheckPlayerDetailsResp.verify|verify} messages.
         * @param message CheckPlayerDetailsResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckPlayerDetailsResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckPlayerDetailsResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckPlayerDetailsResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckPlayerDetailsResp;
    }

    /** Properties of an InviteJoinGuildReq. */
    interface IInviteJoinGuildReq {

        /** InviteJoinGuildReq beInvitePlayerId */
        beInvitePlayerId: number;
    }

    /** Represents an InviteJoinGuildReq. */
    class InviteJoinGuildReq implements IInviteJoinGuildReq {

        /**
         * Constructs a new InviteJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IInviteJoinGuildReq);

        /** InviteJoinGuildReq beInvitePlayerId. */
        public beInvitePlayerId: number;

        /**
         * Encodes the specified InviteJoinGuildReq message. Does not implicitly {@link gameProto.InviteJoinGuildReq.verify|verify} messages.
         * @param message InviteJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IInviteJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an InviteJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InviteJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.InviteJoinGuildReq;
    }

    /** Properties of an InviteJoinGuildResp. */
    interface IInviteJoinGuildResp {

        /** InviteJoinGuildResp beInvitePlayerId */
        beInvitePlayerId: number;

        /** InviteJoinGuildResp guildId */
        guildId: number;

        /** InviteJoinGuildResp name */
        name: string;
    }

    /** Represents an InviteJoinGuildResp. */
    class InviteJoinGuildResp implements IInviteJoinGuildResp {

        /**
         * Constructs a new InviteJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IInviteJoinGuildResp);

        /** InviteJoinGuildResp beInvitePlayerId. */
        public beInvitePlayerId: number;

        /** InviteJoinGuildResp guildId. */
        public guildId: number;

        /** InviteJoinGuildResp name. */
        public name: string;

        /**
         * Encodes the specified InviteJoinGuildResp message. Does not implicitly {@link gameProto.InviteJoinGuildResp.verify|verify} messages.
         * @param message InviteJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IInviteJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an InviteJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InviteJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.InviteJoinGuildResp;
    }

    /** Properties of a BeInviteJoinGuildReq. */
    interface IBeInviteJoinGuildReq {
    }

    /** Represents a BeInviteJoinGuildReq. */
    class BeInviteJoinGuildReq implements IBeInviteJoinGuildReq {

        /**
         * Constructs a new BeInviteJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBeInviteJoinGuildReq);

        /**
         * Encodes the specified BeInviteJoinGuildReq message. Does not implicitly {@link gameProto.BeInviteJoinGuildReq.verify|verify} messages.
         * @param message BeInviteJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBeInviteJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeInviteJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeInviteJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BeInviteJoinGuildReq;
    }

    /** Properties of a BeInviteJoinGuildResp. */
    interface IBeInviteJoinGuildResp {

        /** BeInviteJoinGuildResp playerId */
        playerId: number;

        /** BeInviteJoinGuildResp guildId */
        guildId: number;

        /** BeInviteJoinGuildResp name */
        name: string;
    }

    /** Represents a BeInviteJoinGuildResp. */
    class BeInviteJoinGuildResp implements IBeInviteJoinGuildResp {

        /**
         * Constructs a new BeInviteJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBeInviteJoinGuildResp);

        /** BeInviteJoinGuildResp playerId. */
        public playerId: number;

        /** BeInviteJoinGuildResp guildId. */
        public guildId: number;

        /** BeInviteJoinGuildResp name. */
        public name: string;

        /**
         * Encodes the specified BeInviteJoinGuildResp message. Does not implicitly {@link gameProto.BeInviteJoinGuildResp.verify|verify} messages.
         * @param message BeInviteJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBeInviteJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeInviteJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeInviteJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BeInviteJoinGuildResp;
    }

    /** Properties of a SuerInviteJoinGuildReq. */
    interface ISuerInviteJoinGuildReq {
    }

    /** Represents a SuerInviteJoinGuildReq. */
    class SuerInviteJoinGuildReq implements ISuerInviteJoinGuildReq {

        /**
         * Constructs a new SuerInviteJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISuerInviteJoinGuildReq);

        /**
         * Encodes the specified SuerInviteJoinGuildReq message. Does not implicitly {@link gameProto.SuerInviteJoinGuildReq.verify|verify} messages.
         * @param message SuerInviteJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISuerInviteJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SuerInviteJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SuerInviteJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SuerInviteJoinGuildReq;
    }

    /** Properties of a SuerInviteJoinGuildResp. */
    interface ISuerInviteJoinGuildResp {

        /** SuerInviteJoinGuildResp beInvitePlayerId */
        beInvitePlayerId: number;

        /** SuerInviteJoinGuildResp guildId */
        guildId: number;

        /** SuerInviteJoinGuildResp name */
        name: string;
    }

    /** Represents a SuerInviteJoinGuildResp. */
    class SuerInviteJoinGuildResp implements ISuerInviteJoinGuildResp {

        /**
         * Constructs a new SuerInviteJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISuerInviteJoinGuildResp);

        /** SuerInviteJoinGuildResp beInvitePlayerId. */
        public beInvitePlayerId: number;

        /** SuerInviteJoinGuildResp guildId. */
        public guildId: number;

        /** SuerInviteJoinGuildResp name. */
        public name: string;

        /**
         * Encodes the specified SuerInviteJoinGuildResp message. Does not implicitly {@link gameProto.SuerInviteJoinGuildResp.verify|verify} messages.
         * @param message SuerInviteJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISuerInviteJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SuerInviteJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SuerInviteJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SuerInviteJoinGuildResp;
    }

    /** Properties of a BeSuerInviteJoinGuildReq. */
    interface IBeSuerInviteJoinGuildReq {

        /** BeSuerInviteJoinGuildReq playerId */
        playerId: number;

        /** BeSuerInviteJoinGuildReq guildId */
        guildId: number;

        /** BeSuerInviteJoinGuildReq name */
        name: string;
    }

    /** Represents a BeSuerInviteJoinGuildReq. */
    class BeSuerInviteJoinGuildReq implements IBeSuerInviteJoinGuildReq {

        /**
         * Constructs a new BeSuerInviteJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBeSuerInviteJoinGuildReq);

        /** BeSuerInviteJoinGuildReq playerId. */
        public playerId: number;

        /** BeSuerInviteJoinGuildReq guildId. */
        public guildId: number;

        /** BeSuerInviteJoinGuildReq name. */
        public name: string;

        /**
         * Encodes the specified BeSuerInviteJoinGuildReq message. Does not implicitly {@link gameProto.BeSuerInviteJoinGuildReq.verify|verify} messages.
         * @param message BeSuerInviteJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBeSuerInviteJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeSuerInviteJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeSuerInviteJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BeSuerInviteJoinGuildReq;
    }

    /** Properties of a BeSuerInviteJoinGuildResp. */
    interface IBeSuerInviteJoinGuildResp {

        /** BeSuerInviteJoinGuildResp playerId */
        playerId: number;

        /** BeSuerInviteJoinGuildResp guildId */
        guildId: number;

        /** BeSuerInviteJoinGuildResp name */
        name: string;
    }

    /** Represents a BeSuerInviteJoinGuildResp. */
    class BeSuerInviteJoinGuildResp implements IBeSuerInviteJoinGuildResp {

        /**
         * Constructs a new BeSuerInviteJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBeSuerInviteJoinGuildResp);

        /** BeSuerInviteJoinGuildResp playerId. */
        public playerId: number;

        /** BeSuerInviteJoinGuildResp guildId. */
        public guildId: number;

        /** BeSuerInviteJoinGuildResp name. */
        public name: string;

        /**
         * Encodes the specified BeSuerInviteJoinGuildResp message. Does not implicitly {@link gameProto.BeSuerInviteJoinGuildResp.verify|verify} messages.
         * @param message BeSuerInviteJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBeSuerInviteJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BeSuerInviteJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeSuerInviteJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BeSuerInviteJoinGuildResp;
    }

    /** Properties of a JoinGuildStatusReq. */
    interface IJoinGuildStatusReq {

        /** JoinGuildStatusReq buildingLevel */
        buildingLevel: number;

        /** JoinGuildStatusReq joinStatus */
        joinStatus: number;
    }

    /** Represents a JoinGuildStatusReq. */
    class JoinGuildStatusReq implements IJoinGuildStatusReq {

        /**
         * Constructs a new JoinGuildStatusReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IJoinGuildStatusReq);

        /** JoinGuildStatusReq buildingLevel. */
        public buildingLevel: number;

        /** JoinGuildStatusReq joinStatus. */
        public joinStatus: number;

        /**
         * Encodes the specified JoinGuildStatusReq message. Does not implicitly {@link gameProto.JoinGuildStatusReq.verify|verify} messages.
         * @param message JoinGuildStatusReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IJoinGuildStatusReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a JoinGuildStatusReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns JoinGuildStatusReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.JoinGuildStatusReq;
    }

    /** Properties of a JoinGuildStatusResp. */
    interface IJoinGuildStatusResp {

        /** JoinGuildStatusResp buildingLevel */
        buildingLevel: number;

        /** JoinGuildStatusResp joinStatus */
        joinStatus: number;
    }

    /** Represents a JoinGuildStatusResp. */
    class JoinGuildStatusResp implements IJoinGuildStatusResp {

        /**
         * Constructs a new JoinGuildStatusResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IJoinGuildStatusResp);

        /** JoinGuildStatusResp buildingLevel. */
        public buildingLevel: number;

        /** JoinGuildStatusResp joinStatus. */
        public joinStatus: number;

        /**
         * Encodes the specified JoinGuildStatusResp message. Does not implicitly {@link gameProto.JoinGuildStatusResp.verify|verify} messages.
         * @param message JoinGuildStatusResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IJoinGuildStatusResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a JoinGuildStatusResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns JoinGuildStatusResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.JoinGuildStatusResp;
    }

    /** Properties of a GuildIconStatusReq. */
    interface IGuildIconStatusReq {

        /** GuildIconStatusReq iconStatus */
        iconStatus: number;
    }

    /** Represents a GuildIconStatusReq. */
    class GuildIconStatusReq implements IGuildIconStatusReq {

        /**
         * Constructs a new GuildIconStatusReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildIconStatusReq);

        /** GuildIconStatusReq iconStatus. */
        public iconStatus: number;

        /**
         * Encodes the specified GuildIconStatusReq message. Does not implicitly {@link gameProto.GuildIconStatusReq.verify|verify} messages.
         * @param message GuildIconStatusReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildIconStatusReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildIconStatusReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildIconStatusReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildIconStatusReq;
    }

    /** Properties of a GuildIconStatusResp. */
    interface IGuildIconStatusResp {

        /** GuildIconStatusResp iconStatus */
        iconStatus: number;
    }

    /** Represents a GuildIconStatusResp. */
    class GuildIconStatusResp implements IGuildIconStatusResp {

        /**
         * Constructs a new GuildIconStatusResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildIconStatusResp);

        /** GuildIconStatusResp iconStatus. */
        public iconStatus: number;

        /**
         * Encodes the specified GuildIconStatusResp message. Does not implicitly {@link gameProto.GuildIconStatusResp.verify|verify} messages.
         * @param message GuildIconStatusResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildIconStatusResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildIconStatusResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildIconStatusResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildIconStatusResp;
    }

    /** Properties of a GuildInformationReq. */
    interface IGuildInformationReq {

        /** GuildInformationReq giildId */
        giildId: number;

        /** GuildInformationReq page */
        page: number;
    }

    /** Represents a GuildInformationReq. */
    class GuildInformationReq implements IGuildInformationReq {

        /**
         * Constructs a new GuildInformationReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildInformationReq);

        /** GuildInformationReq giildId. */
        public giildId: number;

        /** GuildInformationReq page. */
        public page: number;

        /**
         * Encodes the specified GuildInformationReq message. Does not implicitly {@link gameProto.GuildInformationReq.verify|verify} messages.
         * @param message GuildInformationReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildInformationReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildInformationReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildInformationReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildInformationReq;
    }

    /** Properties of a GuildInformationResp. */
    interface IGuildInformationResp {

        /** GuildInformationResp information */
        information?: (gameProto.IGuildInformationBar[]|null);

        /** GuildInformationResp page */
        page: number;

        /** GuildInformationResp totalPage */
        totalPage: number;
    }

    /** Represents a GuildInformationResp. */
    class GuildInformationResp implements IGuildInformationResp {

        /**
         * Constructs a new GuildInformationResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildInformationResp);

        /** GuildInformationResp information. */
        public information: gameProto.IGuildInformationBar[];

        /** GuildInformationResp page. */
        public page: number;

        /** GuildInformationResp totalPage. */
        public totalPage: number;

        /**
         * Encodes the specified GuildInformationResp message. Does not implicitly {@link gameProto.GuildInformationResp.verify|verify} messages.
         * @param message GuildInformationResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildInformationResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildInformationResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildInformationResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildInformationResp;
    }

    /** Properties of a CheckApplyJoinGuildReq. */
    interface ICheckApplyJoinGuildReq {

        /** CheckApplyJoinGuildReq page */
        page: number;
    }

    /** Represents a CheckApplyJoinGuildReq. */
    class CheckApplyJoinGuildReq implements ICheckApplyJoinGuildReq {

        /**
         * Constructs a new CheckApplyJoinGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckApplyJoinGuildReq);

        /** CheckApplyJoinGuildReq page. */
        public page: number;

        /**
         * Encodes the specified CheckApplyJoinGuildReq message. Does not implicitly {@link gameProto.CheckApplyJoinGuildReq.verify|verify} messages.
         * @param message CheckApplyJoinGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckApplyJoinGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckApplyJoinGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckApplyJoinGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckApplyJoinGuildReq;
    }

    /** Properties of a CheckApplyJoinGuildResp. */
    interface ICheckApplyJoinGuildResp {

        /** CheckApplyJoinGuildResp stayApplyJoin */
        stayApplyJoin?: (gameProto.IStayApplyJoinGuild[]|null);

        /** CheckApplyJoinGuildResp page */
        page: number;

        /** CheckApplyJoinGuildResp totalPage */
        totalPage: number;
    }

    /** Represents a CheckApplyJoinGuildResp. */
    class CheckApplyJoinGuildResp implements ICheckApplyJoinGuildResp {

        /**
         * Constructs a new CheckApplyJoinGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckApplyJoinGuildResp);

        /** CheckApplyJoinGuildResp stayApplyJoin. */
        public stayApplyJoin: gameProto.IStayApplyJoinGuild[];

        /** CheckApplyJoinGuildResp page. */
        public page: number;

        /** CheckApplyJoinGuildResp totalPage. */
        public totalPage: number;

        /**
         * Encodes the specified CheckApplyJoinGuildResp message. Does not implicitly {@link gameProto.CheckApplyJoinGuildResp.verify|verify} messages.
         * @param message CheckApplyJoinGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckApplyJoinGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckApplyJoinGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckApplyJoinGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckApplyJoinGuildResp;
    }

    /** Properties of a DissolveGuildReq. */
    interface IDissolveGuildReq {

        /** DissolveGuildReq giildId */
        giildId: number;
    }

    /** Represents a DissolveGuildReq. */
    class DissolveGuildReq implements IDissolveGuildReq {

        /**
         * Constructs a new DissolveGuildReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IDissolveGuildReq);

        /** DissolveGuildReq giildId. */
        public giildId: number;

        /**
         * Encodes the specified DissolveGuildReq message. Does not implicitly {@link gameProto.DissolveGuildReq.verify|verify} messages.
         * @param message DissolveGuildReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IDissolveGuildReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DissolveGuildReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DissolveGuildReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.DissolveGuildReq;
    }

    /** Properties of a DissolveGuildResp. */
    interface IDissolveGuildResp {

        /** DissolveGuildResp status */
        status: number;
    }

    /** Represents a DissolveGuildResp. */
    class DissolveGuildResp implements IDissolveGuildResp {

        /**
         * Constructs a new DissolveGuildResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IDissolveGuildResp);

        /** DissolveGuildResp status. */
        public status: number;

        /**
         * Encodes the specified DissolveGuildResp message. Does not implicitly {@link gameProto.DissolveGuildResp.verify|verify} messages.
         * @param message DissolveGuildResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IDissolveGuildResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DissolveGuildResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DissolveGuildResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.DissolveGuildResp;
    }

    /** Properties of a GuildTechDonateReq. */
    interface IGuildTechDonateReq {

        /** GuildTechDonateReq techType */
        techType: number;

        /** GuildTechDonateReq valueType */
        valueType: number;
    }

    /** Represents a GuildTechDonateReq. */
    class GuildTechDonateReq implements IGuildTechDonateReq {

        /**
         * Constructs a new GuildTechDonateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechDonateReq);

        /** GuildTechDonateReq techType. */
        public techType: number;

        /** GuildTechDonateReq valueType. */
        public valueType: number;

        /**
         * Encodes the specified GuildTechDonateReq message. Does not implicitly {@link gameProto.GuildTechDonateReq.verify|verify} messages.
         * @param message GuildTechDonateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechDonateReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechDonateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechDonateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechDonateReq;
    }

    /** Properties of a GuildTechDonateResp. */
    interface IGuildTechDonateResp {

        /** GuildTechDonateResp guildTechInfo */
        guildTechInfo: gameProto.IGuildTechInfo;

        /** GuildTechDonateResp donateResourceCount */
        donateResourceCount: number;
    }

    /** Represents a GuildTechDonateResp. */
    class GuildTechDonateResp implements IGuildTechDonateResp {

        /**
         * Constructs a new GuildTechDonateResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechDonateResp);

        /** GuildTechDonateResp guildTechInfo. */
        public guildTechInfo: gameProto.IGuildTechInfo;

        /** GuildTechDonateResp donateResourceCount. */
        public donateResourceCount: number;

        /**
         * Encodes the specified GuildTechDonateResp message. Does not implicitly {@link gameProto.GuildTechDonateResp.verify|verify} messages.
         * @param message GuildTechDonateResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechDonateResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechDonateResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechDonateResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechDonateResp;
    }

    /** Properties of an AccuseReq. */
    interface IAccuseReq {
    }

    /** Represents an AccuseReq. */
    class AccuseReq implements IAccuseReq {

        /**
         * Constructs a new AccuseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAccuseReq);

        /**
         * Encodes the specified AccuseReq message. Does not implicitly {@link gameProto.AccuseReq.verify|verify} messages.
         * @param message AccuseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAccuseReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccuseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccuseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AccuseReq;
    }

    /** Properties of an AccuseResp. */
    interface IAccuseResp {

        /** AccuseResp giildId */
        giildId: number;

        /** AccuseResp newLeaderId */
        newLeaderId: number;
    }

    /** Represents an AccuseResp. */
    class AccuseResp implements IAccuseResp {

        /**
         * Constructs a new AccuseResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAccuseResp);

        /** AccuseResp giildId. */
        public giildId: number;

        /** AccuseResp newLeaderId. */
        public newLeaderId: number;

        /**
         * Encodes the specified AccuseResp message. Does not implicitly {@link gameProto.AccuseResp.verify|verify} messages.
         * @param message AccuseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAccuseResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccuseResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccuseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AccuseResp;
    }

    /** Properties of a C2S_ACCUSE_GUILD. */
    interface IC2S_ACCUSE_GUILD {
    }

    /** Represents a C2S_ACCUSE_GUILD. */
    class C2S_ACCUSE_GUILD implements IC2S_ACCUSE_GUILD {

        /**
         * Constructs a new C2S_ACCUSE_GUILD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACCUSE_GUILD);

        /**
         * Encodes the specified C2S_ACCUSE_GUILD message. Does not implicitly {@link gameProto.C2S_ACCUSE_GUILD.verify|verify} messages.
         * @param message C2S_ACCUSE_GUILD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACCUSE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACCUSE_GUILD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACCUSE_GUILD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACCUSE_GUILD;
    }

    /** Properties of a S2C_ACCUSE_GUILD. */
    interface IS2C_ACCUSE_GUILD {

        /** S2C_ACCUSE_GUILD giildId */
        giildId: number;
    }

    /** Represents a S2C_ACCUSE_GUILD. */
    class S2C_ACCUSE_GUILD implements IS2C_ACCUSE_GUILD {

        /**
         * Constructs a new S2C_ACCUSE_GUILD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACCUSE_GUILD);

        /** S2C_ACCUSE_GUILD giildId. */
        public giildId: number;

        /**
         * Encodes the specified S2C_ACCUSE_GUILD message. Does not implicitly {@link gameProto.S2C_ACCUSE_GUILD.verify|verify} messages.
         * @param message S2C_ACCUSE_GUILD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACCUSE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACCUSE_GUILD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACCUSE_GUILD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACCUSE_GUILD;
    }

    /** Properties of a C2S_RANK_GUILD. */
    interface IC2S_RANK_GUILD {

        /** C2S_RANK_GUILD giildId */
        giildId: number;
    }

    /** Represents a C2S_RANK_GUILD. */
    class C2S_RANK_GUILD implements IC2S_RANK_GUILD {

        /**
         * Constructs a new C2S_RANK_GUILD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RANK_GUILD);

        /** C2S_RANK_GUILD giildId. */
        public giildId: number;

        /**
         * Encodes the specified C2S_RANK_GUILD message. Does not implicitly {@link gameProto.C2S_RANK_GUILD.verify|verify} messages.
         * @param message C2S_RANK_GUILD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RANK_GUILD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RANK_GUILD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RANK_GUILD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RANK_GUILD;
    }

    /** Properties of a S2C_RANK_GUILD. */
    interface IS2C_RANK_GUILD {

        /** S2C_RANK_GUILD rankGuildInfo */
        rankGuildInfo: gameProto.IRankGuildInfo;
    }

    /** Represents a S2C_RANK_GUILD. */
    class S2C_RANK_GUILD implements IS2C_RANK_GUILD {

        /**
         * Constructs a new S2C_RANK_GUILD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RANK_GUILD);

        /** S2C_RANK_GUILD rankGuildInfo. */
        public rankGuildInfo: gameProto.IRankGuildInfo;

        /**
         * Encodes the specified S2C_RANK_GUILD message. Does not implicitly {@link gameProto.S2C_RANK_GUILD.verify|verify} messages.
         * @param message S2C_RANK_GUILD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RANK_GUILD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RANK_GUILD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RANK_GUILD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RANK_GUILD;
    }

    /** Properties of a GuildTechnologyMessage. */
    interface IGuildTechnologyMessage {

        /** GuildTechnologyMessage id */
        id: number;

        /** GuildTechnologyMessage exp */
        exp: number;
    }

    /** Represents a GuildTechnologyMessage. */
    class GuildTechnologyMessage implements IGuildTechnologyMessage {

        /**
         * Constructs a new GuildTechnologyMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyMessage);

        /** GuildTechnologyMessage id. */
        public id: number;

        /** GuildTechnologyMessage exp. */
        public exp: number;

        /**
         * Encodes the specified GuildTechnologyMessage message. Does not implicitly {@link gameProto.GuildTechnologyMessage.verify|verify} messages.
         * @param message GuildTechnologyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyMessage;
    }

    /** Properties of a GuildTechnologyViewReq. */
    interface IGuildTechnologyViewReq {
    }

    /** Represents a GuildTechnologyViewReq. */
    class GuildTechnologyViewReq implements IGuildTechnologyViewReq {

        /**
         * Constructs a new GuildTechnologyViewReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyViewReq);

        /**
         * Encodes the specified GuildTechnologyViewReq message. Does not implicitly {@link gameProto.GuildTechnologyViewReq.verify|verify} messages.
         * @param message GuildTechnologyViewReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyViewReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyViewReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyViewReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyViewReq;
    }

    /** Properties of a GuildTechnologyViewResp. */
    interface IGuildTechnologyViewResp {

        /** GuildTechnologyViewResp techList */
        techList?: (gameProto.IGuildTechnologyMessage[]|null);
    }

    /** Represents a GuildTechnologyViewResp. */
    class GuildTechnologyViewResp implements IGuildTechnologyViewResp {

        /**
         * Constructs a new GuildTechnologyViewResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyViewResp);

        /** GuildTechnologyViewResp techList. */
        public techList: gameProto.IGuildTechnologyMessage[];

        /**
         * Encodes the specified GuildTechnologyViewResp message. Does not implicitly {@link gameProto.GuildTechnologyViewResp.verify|verify} messages.
         * @param message GuildTechnologyViewResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyViewResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyViewResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyViewResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyViewResp;
    }

    /** Properties of a GuildTechnologyDonationReq. */
    interface IGuildTechnologyDonationReq {

        /** GuildTechnologyDonationReq id */
        id: number;

        /** GuildTechnologyDonationReq technologyType */
        technologyType: number;
    }

    /** Represents a GuildTechnologyDonationReq. */
    class GuildTechnologyDonationReq implements IGuildTechnologyDonationReq {

        /**
         * Constructs a new GuildTechnologyDonationReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyDonationReq);

        /** GuildTechnologyDonationReq id. */
        public id: number;

        /** GuildTechnologyDonationReq technologyType. */
        public technologyType: number;

        /**
         * Encodes the specified GuildTechnologyDonationReq message. Does not implicitly {@link gameProto.GuildTechnologyDonationReq.verify|verify} messages.
         * @param message GuildTechnologyDonationReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyDonationReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyDonationReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyDonationReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyDonationReq;
    }

    /** Properties of a GuildTechnologyDonationResp. */
    interface IGuildTechnologyDonationResp {

        /** GuildTechnologyDonationResp id */
        id: number;

        /** GuildTechnologyDonationResp exp */
        exp: number;

        /** GuildTechnologyDonationResp paidCount */
        paidCount: number;

        /** GuildTechnologyDonationResp materialCount */
        materialCount: number;
    }

    /** Represents a GuildTechnologyDonationResp. */
    class GuildTechnologyDonationResp implements IGuildTechnologyDonationResp {

        /**
         * Constructs a new GuildTechnologyDonationResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyDonationResp);

        /** GuildTechnologyDonationResp id. */
        public id: number;

        /** GuildTechnologyDonationResp exp. */
        public exp: number;

        /** GuildTechnologyDonationResp paidCount. */
        public paidCount: number;

        /** GuildTechnologyDonationResp materialCount. */
        public materialCount: number;

        /**
         * Encodes the specified GuildTechnologyDonationResp message. Does not implicitly {@link gameProto.GuildTechnologyDonationResp.verify|verify} messages.
         * @param message GuildTechnologyDonationResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyDonationResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyDonationResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyDonationResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyDonationResp;
    }

    /** Properties of a GuildTechnologyLevelUpResp. */
    interface IGuildTechnologyLevelUpResp {

        /** GuildTechnologyLevelUpResp idBefore */
        idBefore: number;

        /** GuildTechnologyLevelUpResp idAfter */
        idAfter: number;
    }

    /** Represents a GuildTechnologyLevelUpResp. */
    class GuildTechnologyLevelUpResp implements IGuildTechnologyLevelUpResp {

        /**
         * Constructs a new GuildTechnologyLevelUpResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildTechnologyLevelUpResp);

        /** GuildTechnologyLevelUpResp idBefore. */
        public idBefore: number;

        /** GuildTechnologyLevelUpResp idAfter. */
        public idAfter: number;

        /**
         * Encodes the specified GuildTechnologyLevelUpResp message. Does not implicitly {@link gameProto.GuildTechnologyLevelUpResp.verify|verify} messages.
         * @param message GuildTechnologyLevelUpResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildTechnologyLevelUpResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildTechnologyLevelUpResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildTechnologyLevelUpResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildTechnologyLevelUpResp;
    }

    /** Properties of a GuildMaterialDonationCountReq. */
    interface IGuildMaterialDonationCountReq {
    }

    /** Represents a GuildMaterialDonationCountReq. */
    class GuildMaterialDonationCountReq implements IGuildMaterialDonationCountReq {

        /**
         * Constructs a new GuildMaterialDonationCountReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildMaterialDonationCountReq);

        /**
         * Encodes the specified GuildMaterialDonationCountReq message. Does not implicitly {@link gameProto.GuildMaterialDonationCountReq.verify|verify} messages.
         * @param message GuildMaterialDonationCountReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildMaterialDonationCountReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildMaterialDonationCountReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildMaterialDonationCountReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildMaterialDonationCountReq;
    }

    /** Properties of a GuildMaterialDonationCountResp. */
    interface IGuildMaterialDonationCountResp {

        /** GuildMaterialDonationCountResp paidCount */
        paidCount: number;

        /** GuildMaterialDonationCountResp materialCount */
        materialCount: number;
    }

    /** Represents a GuildMaterialDonationCountResp. */
    class GuildMaterialDonationCountResp implements IGuildMaterialDonationCountResp {

        /**
         * Constructs a new GuildMaterialDonationCountResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGuildMaterialDonationCountResp);

        /** GuildMaterialDonationCountResp paidCount. */
        public paidCount: number;

        /** GuildMaterialDonationCountResp materialCount. */
        public materialCount: number;

        /**
         * Encodes the specified GuildMaterialDonationCountResp message. Does not implicitly {@link gameProto.GuildMaterialDonationCountResp.verify|verify} messages.
         * @param message GuildMaterialDonationCountResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGuildMaterialDonationCountResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GuildMaterialDonationCountResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuildMaterialDonationCountResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GuildMaterialDonationCountResp;
    }

    /** Properties of a HQInfo. */
    interface IHQInfo {

        /** HQInfo norCopyId */
        norCopyId?: (number|null);

        /** HQInfo hdCopyId */
        hdCopyId?: (number|null);

        /** HQInfo chapterInfos */
        chapterInfos?: (gameProto.IChapterInfo[]|null);

        /** HQInfo norLastTime */
        norLastTime?: (number|null);

        /** HQInfo hdLastTime */
        hdLastTime?: (number|null);
    }

    /** Represents a HQInfo. */
    class HQInfo implements IHQInfo {

        /**
         * Constructs a new HQInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQInfo);

        /** HQInfo norCopyId. */
        public norCopyId: number;

        /** HQInfo hdCopyId. */
        public hdCopyId: number;

        /** HQInfo chapterInfos. */
        public chapterInfos: gameProto.IChapterInfo[];

        /** HQInfo norLastTime. */
        public norLastTime: number;

        /** HQInfo hdLastTime. */
        public hdLastTime: number;

        /**
         * Encodes the specified HQInfo message. Does not implicitly {@link gameProto.HQInfo.verify|verify} messages.
         * @param message HQInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQInfo;
    }

    /** Properties of a ChapterInfo. */
    interface IChapterInfo {

        /** ChapterInfo chapterId */
        chapterId?: (number|null);

        /** ChapterInfo checkPointInfos */
        checkPointInfos?: (gameProto.ICheckPointInfo[]|null);

        /** ChapterInfo receivedBoxs */
        receivedBoxs?: (number[]|null);

        /** ChapterInfo moduleId */
        moduleId?: (number|null);
    }

    /** Represents a ChapterInfo. */
    class ChapterInfo implements IChapterInfo {

        /**
         * Constructs a new ChapterInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChapterInfo);

        /** ChapterInfo chapterId. */
        public chapterId: number;

        /** ChapterInfo checkPointInfos. */
        public checkPointInfos: gameProto.ICheckPointInfo[];

        /** ChapterInfo receivedBoxs. */
        public receivedBoxs: number[];

        /** ChapterInfo moduleId. */
        public moduleId: number;

        /**
         * Encodes the specified ChapterInfo message. Does not implicitly {@link gameProto.ChapterInfo.verify|verify} messages.
         * @param message ChapterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChapterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChapterInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChapterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChapterInfo;
    }

    /** Properties of a CheckPointInfo. */
    interface ICheckPointInfo {

        /** CheckPointInfo id */
        id?: (number|null);

        /** CheckPointInfo condition */
        condition?: (number[]|null);

        /** CheckPointInfo count */
        count?: (number|null);
    }

    /** Represents a CheckPointInfo. */
    class CheckPointInfo implements ICheckPointInfo {

        /**
         * Constructs a new CheckPointInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICheckPointInfo);

        /** CheckPointInfo id. */
        public id: number;

        /** CheckPointInfo condition. */
        public condition: number[];

        /** CheckPointInfo count. */
        public count: number;

        /**
         * Encodes the specified CheckPointInfo message. Does not implicitly {@link gameProto.CheckPointInfo.verify|verify} messages.
         * @param message CheckPointInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICheckPointInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CheckPointInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckPointInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CheckPointInfo;
    }

    /** Properties of a GetHeadQuartersInfoReq. */
    interface IGetHeadQuartersInfoReq {

        /** GetHeadQuartersInfoReq info */
        info?: (gameProto.IHQInfo|null);

        /** GetHeadQuartersInfoReq chapterId */
        chapterId?: (number|null);
    }

    /** Represents a GetHeadQuartersInfoReq. */
    class GetHeadQuartersInfoReq implements IGetHeadQuartersInfoReq {

        /**
         * Constructs a new GetHeadQuartersInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetHeadQuartersInfoReq);

        /** GetHeadQuartersInfoReq info. */
        public info?: (gameProto.IHQInfo|null);

        /** GetHeadQuartersInfoReq chapterId. */
        public chapterId: number;

        /**
         * Encodes the specified GetHeadQuartersInfoReq message. Does not implicitly {@link gameProto.GetHeadQuartersInfoReq.verify|verify} messages.
         * @param message GetHeadQuartersInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetHeadQuartersInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetHeadQuartersInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetHeadQuartersInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetHeadQuartersInfoReq;
    }

    /** Properties of a GetHeadQuartersInfoResp. */
    interface IGetHeadQuartersInfoResp {

        /** GetHeadQuartersInfoResp info */
        info?: (gameProto.IHQInfo|null);
    }

    /** Represents a GetHeadQuartersInfoResp. */
    class GetHeadQuartersInfoResp implements IGetHeadQuartersInfoResp {

        /**
         * Constructs a new GetHeadQuartersInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetHeadQuartersInfoResp);

        /** GetHeadQuartersInfoResp info. */
        public info?: (gameProto.IHQInfo|null);

        /**
         * Encodes the specified GetHeadQuartersInfoResp message. Does not implicitly {@link gameProto.GetHeadQuartersInfoResp.verify|verify} messages.
         * @param message GetHeadQuartersInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetHeadQuartersInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetHeadQuartersInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetHeadQuartersInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetHeadQuartersInfoResp;
    }

    /** Properties of a CleanUpHQReq. */
    interface ICleanUpHQReq {

        /** CleanUpHQReq id */
        id?: (number|null);
    }

    /** Represents a CleanUpHQReq. */
    class CleanUpHQReq implements ICleanUpHQReq {

        /**
         * Constructs a new CleanUpHQReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICleanUpHQReq);

        /** CleanUpHQReq id. */
        public id: number;

        /**
         * Encodes the specified CleanUpHQReq message. Does not implicitly {@link gameProto.CleanUpHQReq.verify|verify} messages.
         * @param message CleanUpHQReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICleanUpHQReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CleanUpHQReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CleanUpHQReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CleanUpHQReq;
    }

    /** Properties of a CleanUpHQResp. */
    interface ICleanUpHQResp {

        /** CleanUpHQResp resetCount */
        resetCount: number;

        /** CleanUpHQResp valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** CleanUpHQResp bossCount */
        bossCount: number;
    }

    /** Represents a CleanUpHQResp. */
    class CleanUpHQResp implements ICleanUpHQResp {

        /**
         * Constructs a new CleanUpHQResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICleanUpHQResp);

        /** CleanUpHQResp resetCount. */
        public resetCount: number;

        /** CleanUpHQResp valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** CleanUpHQResp bossCount. */
        public bossCount: number;

        /**
         * Encodes the specified CleanUpHQResp message. Does not implicitly {@link gameProto.CleanUpHQResp.verify|verify} messages.
         * @param message CleanUpHQResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICleanUpHQResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CleanUpHQResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CleanUpHQResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CleanUpHQResp;
    }

    /** Properties of a ChallengesHQReq. */
    interface IChallengesHQReq {

        /** ChallengesHQReq id */
        id: number;

        /** ChallengesHQReq armyId */
        armyId: number;
    }

    /** Represents a ChallengesHQReq. */
    class ChallengesHQReq implements IChallengesHQReq {

        /**
         * Constructs a new ChallengesHQReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengesHQReq);

        /** ChallengesHQReq id. */
        public id: number;

        /** ChallengesHQReq armyId. */
        public armyId: number;

        /**
         * Encodes the specified ChallengesHQReq message. Does not implicitly {@link gameProto.ChallengesHQReq.verify|verify} messages.
         * @param message ChallengesHQReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengesHQReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengesHQReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengesHQReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengesHQReq;
    }

    /** Properties of a ChallengesHQResp. */
    interface IChallengesHQResp {

        /** ChallengesHQResp battleId */
        battleId: number;

        /** ChallengesHQResp bossCount */
        bossCount: number;
    }

    /** Represents a ChallengesHQResp. */
    class ChallengesHQResp implements IChallengesHQResp {

        /**
         * Constructs a new ChallengesHQResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IChallengesHQResp);

        /** ChallengesHQResp battleId. */
        public battleId: number;

        /** ChallengesHQResp bossCount. */
        public bossCount: number;

        /**
         * Encodes the specified ChallengesHQResp message. Does not implicitly {@link gameProto.ChallengesHQResp.verify|verify} messages.
         * @param message ChallengesHQResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IChallengesHQResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChallengesHQResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChallengesHQResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ChallengesHQResp;
    }

    /** Properties of a HQReceiveBoxReq. */
    interface IHQReceiveBoxReq {

        /** HQReceiveBoxReq starRewardId */
        starRewardId: number;
    }

    /** Represents a HQReceiveBoxReq. */
    class HQReceiveBoxReq implements IHQReceiveBoxReq {

        /**
         * Constructs a new HQReceiveBoxReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQReceiveBoxReq);

        /** HQReceiveBoxReq starRewardId. */
        public starRewardId: number;

        /**
         * Encodes the specified HQReceiveBoxReq message. Does not implicitly {@link gameProto.HQReceiveBoxReq.verify|verify} messages.
         * @param message HQReceiveBoxReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQReceiveBoxReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQReceiveBoxReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQReceiveBoxReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQReceiveBoxReq;
    }

    /** Properties of a HQReceiveBoxResp. */
    interface IHQReceiveBoxResp {

        /** HQReceiveBoxResp valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** HQReceiveBoxResp info */
        info: gameProto.IChapterInfo;
    }

    /** Represents a HQReceiveBoxResp. */
    class HQReceiveBoxResp implements IHQReceiveBoxResp {

        /**
         * Constructs a new HQReceiveBoxResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQReceiveBoxResp);

        /** HQReceiveBoxResp valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** HQReceiveBoxResp info. */
        public info: gameProto.IChapterInfo;

        /**
         * Encodes the specified HQReceiveBoxResp message. Does not implicitly {@link gameProto.HQReceiveBoxResp.verify|verify} messages.
         * @param message HQReceiveBoxResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQReceiveBoxResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQReceiveBoxResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQReceiveBoxResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQReceiveBoxResp;
    }

    /** Properties of a HQChanllngesRewardResp. */
    interface IHQChanllngesRewardResp {

        /** HQChanllngesRewardResp valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** HQChanllngesRewardResp star */
        star?: (number|null);

        /** HQChanllngesRewardResp condition */
        condition?: (number[]|null);

        /** HQChanllngesRewardResp result */
        result: boolean;

        /** HQChanllngesRewardResp id */
        id: number;

        /** HQChanllngesRewardResp battleId */
        battleId: number;
    }

    /** Represents a HQChanllngesRewardResp. */
    class HQChanllngesRewardResp implements IHQChanllngesRewardResp {

        /**
         * Constructs a new HQChanllngesRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQChanllngesRewardResp);

        /** HQChanllngesRewardResp valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** HQChanllngesRewardResp star. */
        public star: number;

        /** HQChanllngesRewardResp condition. */
        public condition: number[];

        /** HQChanllngesRewardResp result. */
        public result: boolean;

        /** HQChanllngesRewardResp id. */
        public id: number;

        /** HQChanllngesRewardResp battleId. */
        public battleId: number;

        /**
         * Encodes the specified HQChanllngesRewardResp message. Does not implicitly {@link gameProto.HQChanllngesRewardResp.verify|verify} messages.
         * @param message HQChanllngesRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQChanllngesRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQChanllngesRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQChanllngesRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQChanllngesRewardResp;
    }

    /** Properties of a HQBuyResetCountReq. */
    interface IHQBuyResetCountReq {

        /** HQBuyResetCountReq moduleId */
        moduleId?: (number|null);
    }

    /** Represents a HQBuyResetCountReq. */
    class HQBuyResetCountReq implements IHQBuyResetCountReq {

        /**
         * Constructs a new HQBuyResetCountReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQBuyResetCountReq);

        /** HQBuyResetCountReq moduleId. */
        public moduleId: number;

        /**
         * Encodes the specified HQBuyResetCountReq message. Does not implicitly {@link gameProto.HQBuyResetCountReq.verify|verify} messages.
         * @param message HQBuyResetCountReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQBuyResetCountReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQBuyResetCountReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQBuyResetCountReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQBuyResetCountReq;
    }

    /** Properties of a HQBuyResetCountResp. */
    interface IHQBuyResetCountResp {

        /** HQBuyResetCountResp resetCount */
        resetCount?: (number|null);

        /** HQBuyResetCountResp buyCount */
        buyCount?: (number|null);

        /** HQBuyResetCountResp moduleId */
        moduleId?: (number|null);
    }

    /** Represents a HQBuyResetCountResp. */
    class HQBuyResetCountResp implements IHQBuyResetCountResp {

        /**
         * Constructs a new HQBuyResetCountResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQBuyResetCountResp);

        /** HQBuyResetCountResp resetCount. */
        public resetCount: number;

        /** HQBuyResetCountResp buyCount. */
        public buyCount: number;

        /** HQBuyResetCountResp moduleId. */
        public moduleId: number;

        /**
         * Encodes the specified HQBuyResetCountResp message. Does not implicitly {@link gameProto.HQBuyResetCountResp.verify|verify} messages.
         * @param message HQBuyResetCountResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQBuyResetCountResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQBuyResetCountResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQBuyResetCountResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQBuyResetCountResp;
    }

    /** Properties of a HQUpdateChapter. */
    interface IHQUpdateChapter {

        /** HQUpdateChapter info */
        info?: (gameProto.IHQInfo|null);
    }

    /** Represents a HQUpdateChapter. */
    class HQUpdateChapter implements IHQUpdateChapter {

        /**
         * Constructs a new HQUpdateChapter.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQUpdateChapter);

        /** HQUpdateChapter info. */
        public info?: (gameProto.IHQInfo|null);

        /**
         * Encodes the specified HQUpdateChapter message. Does not implicitly {@link gameProto.HQUpdateChapter.verify|verify} messages.
         * @param message HQUpdateChapter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQUpdateChapter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQUpdateChapter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQUpdateChapter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQUpdateChapter;
    }

    /** Properties of a GetHeadQuarterChapterInfoReq. */
    interface IGetHeadQuarterChapterInfoReq {

        /** GetHeadQuarterChapterInfoReq chapterId */
        chapterId?: (number|null);
    }

    /** Represents a GetHeadQuarterChapterInfoReq. */
    class GetHeadQuarterChapterInfoReq implements IGetHeadQuarterChapterInfoReq {

        /**
         * Constructs a new GetHeadQuarterChapterInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetHeadQuarterChapterInfoReq);

        /** GetHeadQuarterChapterInfoReq chapterId. */
        public chapterId: number;

        /**
         * Encodes the specified GetHeadQuarterChapterInfoReq message. Does not implicitly {@link gameProto.GetHeadQuarterChapterInfoReq.verify|verify} messages.
         * @param message GetHeadQuarterChapterInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetHeadQuarterChapterInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetHeadQuarterChapterInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetHeadQuarterChapterInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetHeadQuarterChapterInfoReq;
    }

    /** Properties of a GetHeadQuarterChapterInfoResp. */
    interface IGetHeadQuarterChapterInfoResp {

        /** GetHeadQuarterChapterInfoResp chapterInfo */
        chapterInfo?: (gameProto.IChapterInfo|null);
    }

    /** Represents a GetHeadQuarterChapterInfoResp. */
    class GetHeadQuarterChapterInfoResp implements IGetHeadQuarterChapterInfoResp {

        /**
         * Constructs a new GetHeadQuarterChapterInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetHeadQuarterChapterInfoResp);

        /** GetHeadQuarterChapterInfoResp chapterInfo. */
        public chapterInfo?: (gameProto.IChapterInfo|null);

        /**
         * Encodes the specified GetHeadQuarterChapterInfoResp message. Does not implicitly {@link gameProto.GetHeadQuarterChapterInfoResp.verify|verify} messages.
         * @param message GetHeadQuarterChapterInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetHeadQuarterChapterInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetHeadQuarterChapterInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetHeadQuarterChapterInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetHeadQuarterChapterInfoResp;
    }

    /** Properties of a HQBuyChallengeReq. */
    interface IHQBuyChallengeReq {

        /** HQBuyChallengeReq moduleId */
        moduleId?: (number|null);
    }

    /** Represents a HQBuyChallengeReq. */
    class HQBuyChallengeReq implements IHQBuyChallengeReq {

        /**
         * Constructs a new HQBuyChallengeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQBuyChallengeReq);

        /** HQBuyChallengeReq moduleId. */
        public moduleId: number;

        /**
         * Encodes the specified HQBuyChallengeReq message. Does not implicitly {@link gameProto.HQBuyChallengeReq.verify|verify} messages.
         * @param message HQBuyChallengeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQBuyChallengeReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQBuyChallengeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQBuyChallengeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQBuyChallengeReq;
    }

    /** Properties of a HQBuyChallengeResp. */
    interface IHQBuyChallengeResp {

        /** HQBuyChallengeResp moduleId */
        moduleId?: (number|null);

        /** HQBuyChallengeResp buyCount */
        buyCount?: (number|null);

        /** HQBuyChallengeResp availCount */
        availCount?: (number|null);
    }

    /** Represents a HQBuyChallengeResp. */
    class HQBuyChallengeResp implements IHQBuyChallengeResp {

        /**
         * Constructs a new HQBuyChallengeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHQBuyChallengeResp);

        /** HQBuyChallengeResp moduleId. */
        public moduleId: number;

        /** HQBuyChallengeResp buyCount. */
        public buyCount: number;

        /** HQBuyChallengeResp availCount. */
        public availCount: number;

        /**
         * Encodes the specified HQBuyChallengeResp message. Does not implicitly {@link gameProto.HQBuyChallengeResp.verify|verify} messages.
         * @param message HQBuyChallengeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHQBuyChallengeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HQBuyChallengeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HQBuyChallengeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HQBuyChallengeResp;
    }

    /** Properties of a HisChapterInfo. */
    interface IHisChapterInfo {

        /** HisChapterInfo chapterId */
        chapterId: number;

        /** HisChapterInfo LevelInfos */
        LevelInfos?: (gameProto.IHisLevelInfo[]|null);

        /** HisChapterInfo receivedBoxs */
        receivedBoxs?: (number[]|null);
    }

    /** Represents a HisChapterInfo. */
    class HisChapterInfo implements IHisChapterInfo {

        /**
         * Constructs a new HisChapterInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHisChapterInfo);

        /** HisChapterInfo chapterId. */
        public chapterId: number;

        /** HisChapterInfo LevelInfos. */
        public LevelInfos: gameProto.IHisLevelInfo[];

        /** HisChapterInfo receivedBoxs. */
        public receivedBoxs: number[];

        /**
         * Encodes the specified HisChapterInfo message. Does not implicitly {@link gameProto.HisChapterInfo.verify|verify} messages.
         * @param message HisChapterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHisChapterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HisChapterInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HisChapterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HisChapterInfo;
    }

    /** Properties of a HisLevelInfo. */
    interface IHisLevelInfo {

        /** HisLevelInfo id */
        id: number;

        /** HisLevelInfo star */
        star: number;

        /** HisLevelInfo fightNum */
        fightNum: number;
    }

    /** Represents a HisLevelInfo. */
    class HisLevelInfo implements IHisLevelInfo {

        /**
         * Constructs a new HisLevelInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHisLevelInfo);

        /** HisLevelInfo id. */
        public id: number;

        /** HisLevelInfo star. */
        public star: number;

        /** HisLevelInfo fightNum. */
        public fightNum: number;

        /**
         * Encodes the specified HisLevelInfo message. Does not implicitly {@link gameProto.HisLevelInfo.verify|verify} messages.
         * @param message HisLevelInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHisLevelInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HisLevelInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HisLevelInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HisLevelInfo;
    }

    /** Properties of a C2S_GET_HISTORY_WAR_INFO. */
    interface IC2S_GET_HISTORY_WAR_INFO {
    }

    /** Represents a C2S_GET_HISTORY_WAR_INFO. */
    class C2S_GET_HISTORY_WAR_INFO implements IC2S_GET_HISTORY_WAR_INFO {

        /**
         * Constructs a new C2S_GET_HISTORY_WAR_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_HISTORY_WAR_INFO);

        /**
         * Encodes the specified C2S_GET_HISTORY_WAR_INFO message. Does not implicitly {@link gameProto.C2S_GET_HISTORY_WAR_INFO.verify|verify} messages.
         * @param message C2S_GET_HISTORY_WAR_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_HISTORY_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_HISTORY_WAR_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_HISTORY_WAR_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_HISTORY_WAR_INFO;
    }

    /** Properties of a S2C_GET_HISTORY_WAR_INFO. */
    interface IS2C_GET_HISTORY_WAR_INFO {

        /** S2C_GET_HISTORY_WAR_INFO chapterInfos */
        chapterInfos?: (gameProto.IHisChapterInfo[]|null);
    }

    /** Represents a S2C_GET_HISTORY_WAR_INFO. */
    class S2C_GET_HISTORY_WAR_INFO implements IS2C_GET_HISTORY_WAR_INFO {

        /**
         * Constructs a new S2C_GET_HISTORY_WAR_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_HISTORY_WAR_INFO);

        /** S2C_GET_HISTORY_WAR_INFO chapterInfos. */
        public chapterInfos: gameProto.IHisChapterInfo[];

        /**
         * Encodes the specified S2C_GET_HISTORY_WAR_INFO message. Does not implicitly {@link gameProto.S2C_GET_HISTORY_WAR_INFO.verify|verify} messages.
         * @param message S2C_GET_HISTORY_WAR_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_HISTORY_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_HISTORY_WAR_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_HISTORY_WAR_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_HISTORY_WAR_INFO;
    }

    /** Properties of a C2S_HISTORY_WAR_CLEAN_UP. */
    interface IC2S_HISTORY_WAR_CLEAN_UP {

        /** C2S_HISTORY_WAR_CLEAN_UP levelId */
        levelId: number;
    }

    /** Represents a C2S_HISTORY_WAR_CLEAN_UP. */
    class C2S_HISTORY_WAR_CLEAN_UP implements IC2S_HISTORY_WAR_CLEAN_UP {

        /**
         * Constructs a new C2S_HISTORY_WAR_CLEAN_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_HISTORY_WAR_CLEAN_UP);

        /** C2S_HISTORY_WAR_CLEAN_UP levelId. */
        public levelId: number;

        /**
         * Encodes the specified C2S_HISTORY_WAR_CLEAN_UP message. Does not implicitly {@link gameProto.C2S_HISTORY_WAR_CLEAN_UP.verify|verify} messages.
         * @param message C2S_HISTORY_WAR_CLEAN_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_HISTORY_WAR_CLEAN_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_HISTORY_WAR_CLEAN_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_HISTORY_WAR_CLEAN_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_HISTORY_WAR_CLEAN_UP;
    }

    /** Properties of a S2C_HISTORY_WAR_CLEAN_UP. */
    interface IS2C_HISTORY_WAR_CLEAN_UP {

        /** S2C_HISTORY_WAR_CLEAN_UP levelId */
        levelId: number;

        /** S2C_HISTORY_WAR_CLEAN_UP fightNum */
        fightNum: number;

        /** S2C_HISTORY_WAR_CLEAN_UP valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_HISTORY_WAR_CLEAN_UP. */
    class S2C_HISTORY_WAR_CLEAN_UP implements IS2C_HISTORY_WAR_CLEAN_UP {

        /**
         * Constructs a new S2C_HISTORY_WAR_CLEAN_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_HISTORY_WAR_CLEAN_UP);

        /** S2C_HISTORY_WAR_CLEAN_UP levelId. */
        public levelId: number;

        /** S2C_HISTORY_WAR_CLEAN_UP fightNum. */
        public fightNum: number;

        /** S2C_HISTORY_WAR_CLEAN_UP valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_HISTORY_WAR_CLEAN_UP message. Does not implicitly {@link gameProto.S2C_HISTORY_WAR_CLEAN_UP.verify|verify} messages.
         * @param message S2C_HISTORY_WAR_CLEAN_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_HISTORY_WAR_CLEAN_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_HISTORY_WAR_CLEAN_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_HISTORY_WAR_CLEAN_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_HISTORY_WAR_CLEAN_UP;
    }

    /** Properties of a C2S_HISTORY_WAR_FIGHT. */
    interface IC2S_HISTORY_WAR_FIGHT {

        /** C2S_HISTORY_WAR_FIGHT levelId */
        levelId: number;
    }

    /** Represents a C2S_HISTORY_WAR_FIGHT. */
    class C2S_HISTORY_WAR_FIGHT implements IC2S_HISTORY_WAR_FIGHT {

        /**
         * Constructs a new C2S_HISTORY_WAR_FIGHT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_HISTORY_WAR_FIGHT);

        /** C2S_HISTORY_WAR_FIGHT levelId. */
        public levelId: number;

        /**
         * Encodes the specified C2S_HISTORY_WAR_FIGHT message. Does not implicitly {@link gameProto.C2S_HISTORY_WAR_FIGHT.verify|verify} messages.
         * @param message C2S_HISTORY_WAR_FIGHT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_HISTORY_WAR_FIGHT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_HISTORY_WAR_FIGHT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_HISTORY_WAR_FIGHT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_HISTORY_WAR_FIGHT;
    }

    /** Properties of a S2C_HISTROY_WAR_BATTLE_INFO. */
    interface IS2C_HISTROY_WAR_BATTLE_INFO {

        /** S2C_HISTROY_WAR_BATTLE_INFO result */
        result?: (boolean|null);

        /** S2C_HISTROY_WAR_BATTLE_INFO battleId */
        battleId?: (number|null);

        /** S2C_HISTROY_WAR_BATTLE_INFO levelInfo */
        levelInfo?: (gameProto.IHisLevelInfo|null);

        /** S2C_HISTROY_WAR_BATTLE_INFO valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** S2C_HISTROY_WAR_BATTLE_INFO chapterInfo */
        chapterInfo?: (gameProto.IHisChapterInfo|null);
    }

    /** Represents a S2C_HISTROY_WAR_BATTLE_INFO. */
    class S2C_HISTROY_WAR_BATTLE_INFO implements IS2C_HISTROY_WAR_BATTLE_INFO {

        /**
         * Constructs a new S2C_HISTROY_WAR_BATTLE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_HISTROY_WAR_BATTLE_INFO);

        /** S2C_HISTROY_WAR_BATTLE_INFO result. */
        public result: boolean;

        /** S2C_HISTROY_WAR_BATTLE_INFO battleId. */
        public battleId: number;

        /** S2C_HISTROY_WAR_BATTLE_INFO levelInfo. */
        public levelInfo?: (gameProto.IHisLevelInfo|null);

        /** S2C_HISTROY_WAR_BATTLE_INFO valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** S2C_HISTROY_WAR_BATTLE_INFO chapterInfo. */
        public chapterInfo?: (gameProto.IHisChapterInfo|null);

        /**
         * Encodes the specified S2C_HISTROY_WAR_BATTLE_INFO message. Does not implicitly {@link gameProto.S2C_HISTROY_WAR_BATTLE_INFO.verify|verify} messages.
         * @param message S2C_HISTROY_WAR_BATTLE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_HISTROY_WAR_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_HISTROY_WAR_BATTLE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_HISTROY_WAR_BATTLE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_HISTROY_WAR_BATTLE_INFO;
    }

    /** Properties of a C2S_HISTORY_WAR_GET_BOX. */
    interface IC2S_HISTORY_WAR_GET_BOX {

        /** C2S_HISTORY_WAR_GET_BOX starRewardId */
        starRewardId: number;
    }

    /** Represents a C2S_HISTORY_WAR_GET_BOX. */
    class C2S_HISTORY_WAR_GET_BOX implements IC2S_HISTORY_WAR_GET_BOX {

        /**
         * Constructs a new C2S_HISTORY_WAR_GET_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_HISTORY_WAR_GET_BOX);

        /** C2S_HISTORY_WAR_GET_BOX starRewardId. */
        public starRewardId: number;

        /**
         * Encodes the specified C2S_HISTORY_WAR_GET_BOX message. Does not implicitly {@link gameProto.C2S_HISTORY_WAR_GET_BOX.verify|verify} messages.
         * @param message C2S_HISTORY_WAR_GET_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_HISTORY_WAR_GET_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_HISTORY_WAR_GET_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_HISTORY_WAR_GET_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_HISTORY_WAR_GET_BOX;
    }

    /** Properties of a S2C_HISTORY_WAR_GET_BOX. */
    interface IS2C_HISTORY_WAR_GET_BOX {

        /** S2C_HISTORY_WAR_GET_BOX chapterId */
        chapterId: number;

        /** S2C_HISTORY_WAR_GET_BOX receivedBoxs */
        receivedBoxs?: (number[]|null);

        /** S2C_HISTORY_WAR_GET_BOX valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_HISTORY_WAR_GET_BOX. */
    class S2C_HISTORY_WAR_GET_BOX implements IS2C_HISTORY_WAR_GET_BOX {

        /**
         * Constructs a new S2C_HISTORY_WAR_GET_BOX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_HISTORY_WAR_GET_BOX);

        /** S2C_HISTORY_WAR_GET_BOX chapterId. */
        public chapterId: number;

        /** S2C_HISTORY_WAR_GET_BOX receivedBoxs. */
        public receivedBoxs: number[];

        /** S2C_HISTORY_WAR_GET_BOX valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_HISTORY_WAR_GET_BOX message. Does not implicitly {@link gameProto.S2C_HISTORY_WAR_GET_BOX.verify|verify} messages.
         * @param message S2C_HISTORY_WAR_GET_BOX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_HISTORY_WAR_GET_BOX, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_HISTORY_WAR_GET_BOX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_HISTORY_WAR_GET_BOX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_HISTORY_WAR_GET_BOX;
    }

    /** Properties of a C2S_HISTORY_WAR_CLEAN_UP_COUNT. */
    interface IC2S_HISTORY_WAR_CLEAN_UP_COUNT {
    }

    /** Represents a C2S_HISTORY_WAR_CLEAN_UP_COUNT. */
    class C2S_HISTORY_WAR_CLEAN_UP_COUNT implements IC2S_HISTORY_WAR_CLEAN_UP_COUNT {

        /**
         * Constructs a new C2S_HISTORY_WAR_CLEAN_UP_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_HISTORY_WAR_CLEAN_UP_COUNT);

        /**
         * Encodes the specified C2S_HISTORY_WAR_CLEAN_UP_COUNT message. Does not implicitly {@link gameProto.C2S_HISTORY_WAR_CLEAN_UP_COUNT.verify|verify} messages.
         * @param message C2S_HISTORY_WAR_CLEAN_UP_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_HISTORY_WAR_CLEAN_UP_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_HISTORY_WAR_CLEAN_UP_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_HISTORY_WAR_CLEAN_UP_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_HISTORY_WAR_CLEAN_UP_COUNT;
    }

    /** Properties of a S2C_HISTORY_WAR_RESET. */
    interface IS2C_HISTORY_WAR_RESET {
    }

    /** Represents a S2C_HISTORY_WAR_RESET. */
    class S2C_HISTORY_WAR_RESET implements IS2C_HISTORY_WAR_RESET {

        /**
         * Constructs a new S2C_HISTORY_WAR_RESET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_HISTORY_WAR_RESET);

        /**
         * Encodes the specified S2C_HISTORY_WAR_RESET message. Does not implicitly {@link gameProto.S2C_HISTORY_WAR_RESET.verify|verify} messages.
         * @param message S2C_HISTORY_WAR_RESET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_HISTORY_WAR_RESET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_HISTORY_WAR_RESET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_HISTORY_WAR_RESET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_HISTORY_WAR_RESET;
    }

    /** Properties of a C2S_TREASURE_WASHBOWL_USE. */
    interface IC2S_TREASURE_WASHBOWL_USE {
    }

    /** Represents a C2S_TREASURE_WASHBOWL_USE. */
    class C2S_TREASURE_WASHBOWL_USE implements IC2S_TREASURE_WASHBOWL_USE {

        /**
         * Constructs a new C2S_TREASURE_WASHBOWL_USE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TREASURE_WASHBOWL_USE);

        /**
         * Encodes the specified C2S_TREASURE_WASHBOWL_USE message. Does not implicitly {@link gameProto.C2S_TREASURE_WASHBOWL_USE.verify|verify} messages.
         * @param message C2S_TREASURE_WASHBOWL_USE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TREASURE_WASHBOWL_USE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TREASURE_WASHBOWL_USE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TREASURE_WASHBOWL_USE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TREASURE_WASHBOWL_USE;
    }

    /** Properties of a S2C_TREASURE_WASHBOWL_USE. */
    interface IS2C_TREASURE_WASHBOWL_USE {

        /** S2C_TREASURE_WASHBOWL_USE coin */
        coin: number;
    }

    /** Represents a S2C_TREASURE_WASHBOWL_USE. */
    class S2C_TREASURE_WASHBOWL_USE implements IS2C_TREASURE_WASHBOWL_USE {

        /**
         * Constructs a new S2C_TREASURE_WASHBOWL_USE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TREASURE_WASHBOWL_USE);

        /** S2C_TREASURE_WASHBOWL_USE coin. */
        public coin: number;

        /**
         * Encodes the specified S2C_TREASURE_WASHBOWL_USE message. Does not implicitly {@link gameProto.S2C_TREASURE_WASHBOWL_USE.verify|verify} messages.
         * @param message S2C_TREASURE_WASHBOWL_USE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TREASURE_WASHBOWL_USE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TREASURE_WASHBOWL_USE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TREASURE_WASHBOWL_USE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TREASURE_WASHBOWL_USE;
    }

    /** Properties of a C2S_TREASURE_WASHBOWL_EXTRAGOLD. */
    interface IC2S_TREASURE_WASHBOWL_EXTRAGOLD {
    }

    /** Represents a C2S_TREASURE_WASHBOWL_EXTRAGOLD. */
    class C2S_TREASURE_WASHBOWL_EXTRAGOLD implements IC2S_TREASURE_WASHBOWL_EXTRAGOLD {

        /**
         * Constructs a new C2S_TREASURE_WASHBOWL_EXTRAGOLD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TREASURE_WASHBOWL_EXTRAGOLD);

        /**
         * Encodes the specified C2S_TREASURE_WASHBOWL_EXTRAGOLD message. Does not implicitly {@link gameProto.C2S_TREASURE_WASHBOWL_EXTRAGOLD.verify|verify} messages.
         * @param message C2S_TREASURE_WASHBOWL_EXTRAGOLD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TREASURE_WASHBOWL_EXTRAGOLD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TREASURE_WASHBOWL_EXTRAGOLD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TREASURE_WASHBOWL_EXTRAGOLD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TREASURE_WASHBOWL_EXTRAGOLD;
    }

    /** Properties of a S2C_TREASURE_WASHBOWL_EXTRAGOLD. */
    interface IS2C_TREASURE_WASHBOWL_EXTRAGOLD {

        /** S2C_TREASURE_WASHBOWL_EXTRAGOLD refreshTime */
        refreshTime: number;
    }

    /** Represents a S2C_TREASURE_WASHBOWL_EXTRAGOLD. */
    class S2C_TREASURE_WASHBOWL_EXTRAGOLD implements IS2C_TREASURE_WASHBOWL_EXTRAGOLD {

        /**
         * Constructs a new S2C_TREASURE_WASHBOWL_EXTRAGOLD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TREASURE_WASHBOWL_EXTRAGOLD);

        /** S2C_TREASURE_WASHBOWL_EXTRAGOLD refreshTime. */
        public refreshTime: number;

        /**
         * Encodes the specified S2C_TREASURE_WASHBOWL_EXTRAGOLD message. Does not implicitly {@link gameProto.S2C_TREASURE_WASHBOWL_EXTRAGOLD.verify|verify} messages.
         * @param message S2C_TREASURE_WASHBOWL_EXTRAGOLD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TREASURE_WASHBOWL_EXTRAGOLD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TREASURE_WASHBOWL_EXTRAGOLD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TREASURE_WASHBOWL_EXTRAGOLD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TREASURE_WASHBOWL_EXTRAGOLD;
    }

    /** Properties of a C2S_TREASURE_WASHBOWL_INFO. */
    interface IC2S_TREASURE_WASHBOWL_INFO {
    }

    /** Represents a C2S_TREASURE_WASHBOWL_INFO. */
    class C2S_TREASURE_WASHBOWL_INFO implements IC2S_TREASURE_WASHBOWL_INFO {

        /**
         * Constructs a new C2S_TREASURE_WASHBOWL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TREASURE_WASHBOWL_INFO);

        /**
         * Encodes the specified C2S_TREASURE_WASHBOWL_INFO message. Does not implicitly {@link gameProto.C2S_TREASURE_WASHBOWL_INFO.verify|verify} messages.
         * @param message C2S_TREASURE_WASHBOWL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TREASURE_WASHBOWL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TREASURE_WASHBOWL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TREASURE_WASHBOWL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TREASURE_WASHBOWL_INFO;
    }

    /** Properties of a S2C_TREASURE_WASHBOWL_INFO. */
    interface IS2C_TREASURE_WASHBOWL_INFO {

        /** S2C_TREASURE_WASHBOWL_INFO refreshTime */
        refreshTime?: (number|null);
    }

    /** Represents a S2C_TREASURE_WASHBOWL_INFO. */
    class S2C_TREASURE_WASHBOWL_INFO implements IS2C_TREASURE_WASHBOWL_INFO {

        /**
         * Constructs a new S2C_TREASURE_WASHBOWL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TREASURE_WASHBOWL_INFO);

        /** S2C_TREASURE_WASHBOWL_INFO refreshTime. */
        public refreshTime: number;

        /**
         * Encodes the specified S2C_TREASURE_WASHBOWL_INFO message. Does not implicitly {@link gameProto.S2C_TREASURE_WASHBOWL_INFO.verify|verify} messages.
         * @param message S2C_TREASURE_WASHBOWL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TREASURE_WASHBOWL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TREASURE_WASHBOWL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TREASURE_WASHBOWL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TREASURE_WASHBOWL_INFO;
    }

    /** Properties of a MailInfo. */
    interface IMailInfo {

        /** MailInfo id */
        id: number;

        /** MailInfo title */
        title: string;

        /** MailInfo configId */
        configId?: (number|null);

        /** MailInfo param */
        param?: (string[]|null);

        /** MailInfo sendTime */
        sendTime: number;

        /** MailInfo read */
        read: boolean;

        /** MailInfo attachment */
        attachment?: (string|null);

        /** MailInfo recieved */
        recieved?: (boolean|null);

        /** MailInfo custom */
        custom: boolean;

        /** MailInfo text */
        text?: (string|null);
    }

    /** Represents a MailInfo. */
    class MailInfo implements IMailInfo {

        /**
         * Constructs a new MailInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailInfo);

        /** MailInfo id. */
        public id: number;

        /** MailInfo title. */
        public title: string;

        /** MailInfo configId. */
        public configId: number;

        /** MailInfo param. */
        public param: string[];

        /** MailInfo sendTime. */
        public sendTime: number;

        /** MailInfo read. */
        public read: boolean;

        /** MailInfo attachment. */
        public attachment: string;

        /** MailInfo recieved. */
        public recieved: boolean;

        /** MailInfo custom. */
        public custom: boolean;

        /** MailInfo text. */
        public text: string;

        /**
         * Encodes the specified MailInfo message. Does not implicitly {@link gameProto.MailInfo.verify|verify} messages.
         * @param message MailInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailInfo;
    }

    /** Properties of a MailTitle. */
    interface IMailTitle {

        /** MailTitle type */
        type: number;

        /** MailTitle id */
        id: number;

        /** MailTitle title */
        title: string;

        /** MailTitle sendTime */
        sendTime: number;

        /** MailTitle isRead */
        isRead: boolean;

        /** MailTitle isAttachmentState */
        isAttachmentState: boolean;

        /** MailTitle attachmentType */
        attachmentType?: (number|null);

        /** MailTitle titleInfo */
        titleInfo?: (string|null);
    }

    /** Represents a MailTitle. */
    class MailTitle implements IMailTitle {

        /**
         * Constructs a new MailTitle.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailTitle);

        /** MailTitle type. */
        public type: number;

        /** MailTitle id. */
        public id: number;

        /** MailTitle title. */
        public title: string;

        /** MailTitle sendTime. */
        public sendTime: number;

        /** MailTitle isRead. */
        public isRead: boolean;

        /** MailTitle isAttachmentState. */
        public isAttachmentState: boolean;

        /** MailTitle attachmentType. */
        public attachmentType: number;

        /** MailTitle titleInfo. */
        public titleInfo: string;

        /**
         * Encodes the specified MailTitle message. Does not implicitly {@link gameProto.MailTitle.verify|verify} messages.
         * @param message MailTitle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailTitle, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailTitle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailTitle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailTitle;
    }

    /** Properties of a C2S_MAILBOX_TITLE_LSIT. */
    interface IC2S_MAILBOX_TITLE_LSIT {
    }

    /** Represents a C2S_MAILBOX_TITLE_LSIT. */
    class C2S_MAILBOX_TITLE_LSIT implements IC2S_MAILBOX_TITLE_LSIT {

        /**
         * Constructs a new C2S_MAILBOX_TITLE_LSIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_TITLE_LSIT);

        /**
         * Encodes the specified C2S_MAILBOX_TITLE_LSIT message. Does not implicitly {@link gameProto.C2S_MAILBOX_TITLE_LSIT.verify|verify} messages.
         * @param message C2S_MAILBOX_TITLE_LSIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_TITLE_LSIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_TITLE_LSIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_TITLE_LSIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_TITLE_LSIT;
    }

    /** Properties of a S2C_MAILBOX_TITLE_LSIT. */
    interface IS2C_MAILBOX_TITLE_LSIT {

        /** S2C_MAILBOX_TITLE_LSIT mailTitle */
        mailTitle?: (gameProto.IMailTitle[]|null);
    }

    /** Represents a S2C_MAILBOX_TITLE_LSIT. */
    class S2C_MAILBOX_TITLE_LSIT implements IS2C_MAILBOX_TITLE_LSIT {

        /**
         * Constructs a new S2C_MAILBOX_TITLE_LSIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_TITLE_LSIT);

        /** S2C_MAILBOX_TITLE_LSIT mailTitle. */
        public mailTitle: gameProto.IMailTitle[];

        /**
         * Encodes the specified S2C_MAILBOX_TITLE_LSIT message. Does not implicitly {@link gameProto.S2C_MAILBOX_TITLE_LSIT.verify|verify} messages.
         * @param message S2C_MAILBOX_TITLE_LSIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_TITLE_LSIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_TITLE_LSIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_TITLE_LSIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_TITLE_LSIT;
    }

    /** Properties of a S2C_MAILBOX_TITLE_UP. */
    interface IS2C_MAILBOX_TITLE_UP {

        /** S2C_MAILBOX_TITLE_UP mailTitle */
        mailTitle?: (gameProto.IMailTitle[]|null);
    }

    /** Represents a S2C_MAILBOX_TITLE_UP. */
    class S2C_MAILBOX_TITLE_UP implements IS2C_MAILBOX_TITLE_UP {

        /**
         * Constructs a new S2C_MAILBOX_TITLE_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_TITLE_UP);

        /** S2C_MAILBOX_TITLE_UP mailTitle. */
        public mailTitle: gameProto.IMailTitle[];

        /**
         * Encodes the specified S2C_MAILBOX_TITLE_UP message. Does not implicitly {@link gameProto.S2C_MAILBOX_TITLE_UP.verify|verify} messages.
         * @param message S2C_MAILBOX_TITLE_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_TITLE_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_TITLE_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_TITLE_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_TITLE_UP;
    }

    /** Properties of a C2S_MAILBOX_INFO. */
    interface IC2S_MAILBOX_INFO {

        /** C2S_MAILBOX_INFO id */
        id: number;
    }

    /** Represents a C2S_MAILBOX_INFO. */
    class C2S_MAILBOX_INFO implements IC2S_MAILBOX_INFO {

        /**
         * Constructs a new C2S_MAILBOX_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_INFO);

        /** C2S_MAILBOX_INFO id. */
        public id: number;

        /**
         * Encodes the specified C2S_MAILBOX_INFO message. Does not implicitly {@link gameProto.C2S_MAILBOX_INFO.verify|verify} messages.
         * @param message C2S_MAILBOX_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_INFO;
    }

    /** Properties of a S2C_MAILBOX_INFO. */
    interface IS2C_MAILBOX_INFO {

        /** S2C_MAILBOX_INFO id */
        id: number;

        /** S2C_MAILBOX_INFO textType */
        textType: number;

        /** S2C_MAILBOX_INFO text */
        text: string;

        /** S2C_MAILBOX_INFO attachmentType */
        attachmentType?: (number|null);

        /** S2C_MAILBOX_INFO attachment */
        attachment?: (string|null);
    }

    /** Represents a S2C_MAILBOX_INFO. */
    class S2C_MAILBOX_INFO implements IS2C_MAILBOX_INFO {

        /**
         * Constructs a new S2C_MAILBOX_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_INFO);

        /** S2C_MAILBOX_INFO id. */
        public id: number;

        /** S2C_MAILBOX_INFO textType. */
        public textType: number;

        /** S2C_MAILBOX_INFO text. */
        public text: string;

        /** S2C_MAILBOX_INFO attachmentType. */
        public attachmentType: number;

        /** S2C_MAILBOX_INFO attachment. */
        public attachment: string;

        /**
         * Encodes the specified S2C_MAILBOX_INFO message. Does not implicitly {@link gameProto.S2C_MAILBOX_INFO.verify|verify} messages.
         * @param message S2C_MAILBOX_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_INFO;
    }

    /** Properties of a C2S_MAILBOX_DEL. */
    interface IC2S_MAILBOX_DEL {

        /** C2S_MAILBOX_DEL id */
        id: number;
    }

    /** Represents a C2S_MAILBOX_DEL. */
    class C2S_MAILBOX_DEL implements IC2S_MAILBOX_DEL {

        /**
         * Constructs a new C2S_MAILBOX_DEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_DEL);

        /** C2S_MAILBOX_DEL id. */
        public id: number;

        /**
         * Encodes the specified C2S_MAILBOX_DEL message. Does not implicitly {@link gameProto.C2S_MAILBOX_DEL.verify|verify} messages.
         * @param message C2S_MAILBOX_DEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_DEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_DEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_DEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_DEL;
    }

    /** Properties of a S2C_MAILBOX_DEL. */
    interface IS2C_MAILBOX_DEL {

        /** S2C_MAILBOX_DEL status */
        status: number;

        /** S2C_MAILBOX_DEL id */
        id?: (number|null);

        /** S2C_MAILBOX_DEL attachment */
        attachment?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_MAILBOX_DEL. */
    class S2C_MAILBOX_DEL implements IS2C_MAILBOX_DEL {

        /**
         * Constructs a new S2C_MAILBOX_DEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_DEL);

        /** S2C_MAILBOX_DEL status. */
        public status: number;

        /** S2C_MAILBOX_DEL id. */
        public id: number;

        /** S2C_MAILBOX_DEL attachment. */
        public attachment: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_MAILBOX_DEL message. Does not implicitly {@link gameProto.S2C_MAILBOX_DEL.verify|verify} messages.
         * @param message S2C_MAILBOX_DEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_DEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_DEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_DEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_DEL;
    }

    /** Properties of a C2S_MAILBOX_ALLDEL. */
    interface IC2S_MAILBOX_ALLDEL {

        /** C2S_MAILBOX_ALLDEL type */
        type: number;
    }

    /** Represents a C2S_MAILBOX_ALLDEL. */
    class C2S_MAILBOX_ALLDEL implements IC2S_MAILBOX_ALLDEL {

        /**
         * Constructs a new C2S_MAILBOX_ALLDEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_ALLDEL);

        /** C2S_MAILBOX_ALLDEL type. */
        public type: number;

        /**
         * Encodes the specified C2S_MAILBOX_ALLDEL message. Does not implicitly {@link gameProto.C2S_MAILBOX_ALLDEL.verify|verify} messages.
         * @param message C2S_MAILBOX_ALLDEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_ALLDEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_ALLDEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_ALLDEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_ALLDEL;
    }

    /** Properties of a S2C_MAILBOX_ALLDEL. */
    interface IS2C_MAILBOX_ALLDEL {

        /** S2C_MAILBOX_ALLDEL status */
        status: number;

        /** S2C_MAILBOX_ALLDEL delId */
        delId?: (number[]|null);

        /** S2C_MAILBOX_ALLDEL attachment */
        attachment?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_MAILBOX_ALLDEL. */
    class S2C_MAILBOX_ALLDEL implements IS2C_MAILBOX_ALLDEL {

        /**
         * Constructs a new S2C_MAILBOX_ALLDEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_ALLDEL);

        /** S2C_MAILBOX_ALLDEL status. */
        public status: number;

        /** S2C_MAILBOX_ALLDEL delId. */
        public delId: number[];

        /** S2C_MAILBOX_ALLDEL attachment. */
        public attachment: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_MAILBOX_ALLDEL message. Does not implicitly {@link gameProto.S2C_MAILBOX_ALLDEL.verify|verify} messages.
         * @param message S2C_MAILBOX_ALLDEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_ALLDEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_ALLDEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_ALLDEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_ALLDEL;
    }

    /** Properties of a C2S_MAILBOX_ALLREAD. */
    interface IC2S_MAILBOX_ALLREAD {

        /** C2S_MAILBOX_ALLREAD type */
        type: number;
    }

    /** Represents a C2S_MAILBOX_ALLREAD. */
    class C2S_MAILBOX_ALLREAD implements IC2S_MAILBOX_ALLREAD {

        /**
         * Constructs a new C2S_MAILBOX_ALLREAD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_ALLREAD);

        /** C2S_MAILBOX_ALLREAD type. */
        public type: number;

        /**
         * Encodes the specified C2S_MAILBOX_ALLREAD message. Does not implicitly {@link gameProto.C2S_MAILBOX_ALLREAD.verify|verify} messages.
         * @param message C2S_MAILBOX_ALLREAD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_ALLREAD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_ALLREAD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_ALLREAD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_ALLREAD;
    }

    /** Properties of a S2C_MAILBOX_ALLREAD. */
    interface IS2C_MAILBOX_ALLREAD {

        /** S2C_MAILBOX_ALLREAD status */
        status: number;

        /** S2C_MAILBOX_ALLREAD attachment */
        attachment?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_MAILBOX_ALLREAD. */
    class S2C_MAILBOX_ALLREAD implements IS2C_MAILBOX_ALLREAD {

        /**
         * Constructs a new S2C_MAILBOX_ALLREAD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_ALLREAD);

        /** S2C_MAILBOX_ALLREAD status. */
        public status: number;

        /** S2C_MAILBOX_ALLREAD attachment. */
        public attachment: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_MAILBOX_ALLREAD message. Does not implicitly {@link gameProto.S2C_MAILBOX_ALLREAD.verify|verify} messages.
         * @param message S2C_MAILBOX_ALLREAD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_ALLREAD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_ALLREAD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_ALLREAD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_ALLREAD;
    }

    /** Properties of a S2C_MAILBOX_NOTICE. */
    interface IS2C_MAILBOX_NOTICE {

        /** S2C_MAILBOX_NOTICE mailTitle */
        mailTitle: gameProto.IMailTitle;
    }

    /** Represents a S2C_MAILBOX_NOTICE. */
    class S2C_MAILBOX_NOTICE implements IS2C_MAILBOX_NOTICE {

        /**
         * Constructs a new S2C_MAILBOX_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_NOTICE);

        /** S2C_MAILBOX_NOTICE mailTitle. */
        public mailTitle: gameProto.IMailTitle;

        /**
         * Encodes the specified S2C_MAILBOX_NOTICE message. Does not implicitly {@link gameProto.S2C_MAILBOX_NOTICE.verify|verify} messages.
         * @param message S2C_MAILBOX_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_NOTICE;
    }

    /** Properties of a C2S_MAILBOX_ATTACHMENT. */
    interface IC2S_MAILBOX_ATTACHMENT {

        /** C2S_MAILBOX_ATTACHMENT id */
        id: number;
    }

    /** Represents a C2S_MAILBOX_ATTACHMENT. */
    class C2S_MAILBOX_ATTACHMENT implements IC2S_MAILBOX_ATTACHMENT {

        /**
         * Constructs a new C2S_MAILBOX_ATTACHMENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAILBOX_ATTACHMENT);

        /** C2S_MAILBOX_ATTACHMENT id. */
        public id: number;

        /**
         * Encodes the specified C2S_MAILBOX_ATTACHMENT message. Does not implicitly {@link gameProto.C2S_MAILBOX_ATTACHMENT.verify|verify} messages.
         * @param message C2S_MAILBOX_ATTACHMENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAILBOX_ATTACHMENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAILBOX_ATTACHMENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAILBOX_ATTACHMENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAILBOX_ATTACHMENT;
    }

    /** Properties of a S2C_MAILBOX_ATTACHMENT. */
    interface IS2C_MAILBOX_ATTACHMENT {

        /** S2C_MAILBOX_ATTACHMENT status */
        status: number;

        /** S2C_MAILBOX_ATTACHMENT attachment */
        attachment?: (gameProto.IValuesMessage[]|null);

        /** S2C_MAILBOX_ATTACHMENT mailId */
        mailId?: (number|null);
    }

    /** Represents a S2C_MAILBOX_ATTACHMENT. */
    class S2C_MAILBOX_ATTACHMENT implements IS2C_MAILBOX_ATTACHMENT {

        /**
         * Constructs a new S2C_MAILBOX_ATTACHMENT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAILBOX_ATTACHMENT);

        /** S2C_MAILBOX_ATTACHMENT status. */
        public status: number;

        /** S2C_MAILBOX_ATTACHMENT attachment. */
        public attachment: gameProto.IValuesMessage[];

        /** S2C_MAILBOX_ATTACHMENT mailId. */
        public mailId: number;

        /**
         * Encodes the specified S2C_MAILBOX_ATTACHMENT message. Does not implicitly {@link gameProto.S2C_MAILBOX_ATTACHMENT.verify|verify} messages.
         * @param message S2C_MAILBOX_ATTACHMENT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAILBOX_ATTACHMENT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAILBOX_ATTACHMENT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAILBOX_ATTACHMENT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAILBOX_ATTACHMENT;
    }

    /** Properties of a MailBoxListReq. */
    interface IMailBoxListReq {

        /** MailBoxListReq minId */
        minId: number;
    }

    /** Represents a MailBoxListReq. */
    class MailBoxListReq implements IMailBoxListReq {

        /**
         * Constructs a new MailBoxListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxListReq);

        /** MailBoxListReq minId. */
        public minId: number;

        /**
         * Encodes the specified MailBoxListReq message. Does not implicitly {@link gameProto.MailBoxListReq.verify|verify} messages.
         * @param message MailBoxListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxListReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxListReq;
    }

    /** Properties of a MailBoxListResp. */
    interface IMailBoxListResp {

        /** MailBoxListResp mail */
        mail?: (gameProto.IMailInfo[]|null);
    }

    /** Represents a MailBoxListResp. */
    class MailBoxListResp implements IMailBoxListResp {

        /**
         * Constructs a new MailBoxListResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxListResp);

        /** MailBoxListResp mail. */
        public mail: gameProto.IMailInfo[];

        /**
         * Encodes the specified MailBoxListResp message. Does not implicitly {@link gameProto.MailBoxListResp.verify|verify} messages.
         * @param message MailBoxListResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxListResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxListResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxListResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxListResp;
    }

    /** Properties of a MailBoxDeleteReq. */
    interface IMailBoxDeleteReq {

        /** MailBoxDeleteReq ids */
        ids?: (number[]|null);
    }

    /** Represents a MailBoxDeleteReq. */
    class MailBoxDeleteReq implements IMailBoxDeleteReq {

        /**
         * Constructs a new MailBoxDeleteReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxDeleteReq);

        /** MailBoxDeleteReq ids. */
        public ids: number[];

        /**
         * Encodes the specified MailBoxDeleteReq message. Does not implicitly {@link gameProto.MailBoxDeleteReq.verify|verify} messages.
         * @param message MailBoxDeleteReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxDeleteReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxDeleteReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxDeleteReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxDeleteReq;
    }

    /** Properties of a MailBoxDeleteResp. */
    interface IMailBoxDeleteResp {

        /** MailBoxDeleteResp ids */
        ids?: (number[]|null);
    }

    /** Represents a MailBoxDeleteResp. */
    class MailBoxDeleteResp implements IMailBoxDeleteResp {

        /**
         * Constructs a new MailBoxDeleteResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxDeleteResp);

        /** MailBoxDeleteResp ids. */
        public ids: number[];

        /**
         * Encodes the specified MailBoxDeleteResp message. Does not implicitly {@link gameProto.MailBoxDeleteResp.verify|verify} messages.
         * @param message MailBoxDeleteResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxDeleteResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxDeleteResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxDeleteResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxDeleteResp;
    }

    /** Properties of a MailBoxGetAttachmentReq. */
    interface IMailBoxGetAttachmentReq {

        /** MailBoxGetAttachmentReq id */
        id: number;
    }

    /** Represents a MailBoxGetAttachmentReq. */
    class MailBoxGetAttachmentReq implements IMailBoxGetAttachmentReq {

        /**
         * Constructs a new MailBoxGetAttachmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxGetAttachmentReq);

        /** MailBoxGetAttachmentReq id. */
        public id: number;

        /**
         * Encodes the specified MailBoxGetAttachmentReq message. Does not implicitly {@link gameProto.MailBoxGetAttachmentReq.verify|verify} messages.
         * @param message MailBoxGetAttachmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxGetAttachmentReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxGetAttachmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxGetAttachmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxGetAttachmentReq;
    }

    /** Properties of a MailBoxGetAttachmentResp. */
    interface IMailBoxGetAttachmentResp {

        /** MailBoxGetAttachmentResp ids */
        ids?: (number[]|null);
    }

    /** Represents a MailBoxGetAttachmentResp. */
    class MailBoxGetAttachmentResp implements IMailBoxGetAttachmentResp {

        /**
         * Constructs a new MailBoxGetAttachmentResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxGetAttachmentResp);

        /** MailBoxGetAttachmentResp ids. */
        public ids: number[];

        /**
         * Encodes the specified MailBoxGetAttachmentResp message. Does not implicitly {@link gameProto.MailBoxGetAttachmentResp.verify|verify} messages.
         * @param message MailBoxGetAttachmentResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxGetAttachmentResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxGetAttachmentResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxGetAttachmentResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxGetAttachmentResp;
    }

    /** Properties of a MailBoxNewResp. */
    interface IMailBoxNewResp {

        /** MailBoxNewResp mail */
        mail: gameProto.IMailInfo;
    }

    /** Represents a MailBoxNewResp. */
    class MailBoxNewResp implements IMailBoxNewResp {

        /**
         * Constructs a new MailBoxNewResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxNewResp);

        /** MailBoxNewResp mail. */
        public mail: gameProto.IMailInfo;

        /**
         * Encodes the specified MailBoxNewResp message. Does not implicitly {@link gameProto.MailBoxNewResp.verify|verify} messages.
         * @param message MailBoxNewResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxNewResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxNewResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxNewResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxNewResp;
    }

    /** Properties of a MailBoxReadReq. */
    interface IMailBoxReadReq {

        /** MailBoxReadReq id */
        id: number;
    }

    /** Represents a MailBoxReadReq. */
    class MailBoxReadReq implements IMailBoxReadReq {

        /**
         * Constructs a new MailBoxReadReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxReadReq);

        /** MailBoxReadReq id. */
        public id: number;

        /**
         * Encodes the specified MailBoxReadReq message. Does not implicitly {@link gameProto.MailBoxReadReq.verify|verify} messages.
         * @param message MailBoxReadReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxReadReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxReadReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxReadReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxReadReq;
    }

    /** Properties of a MailBoxReadResp. */
    interface IMailBoxReadResp {

        /** MailBoxReadResp ids */
        ids?: (number[]|null);
    }

    /** Represents a MailBoxReadResp. */
    class MailBoxReadResp implements IMailBoxReadResp {

        /**
         * Constructs a new MailBoxReadResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMailBoxReadResp);

        /** MailBoxReadResp ids. */
        public ids: number[];

        /**
         * Encodes the specified MailBoxReadResp message. Does not implicitly {@link gameProto.MailBoxReadResp.verify|verify} messages.
         * @param message MailBoxReadResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMailBoxReadResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MailBoxReadResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailBoxReadResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MailBoxReadResp;
    }

    /** Properties of a MaterialType. */
    interface IMaterialType {

        /** MaterialType type */
        type?: (number|null);

        /** MaterialType used */
        used?: (number|null);

        /** MaterialType bought */
        bought?: (number|null);
    }

    /** Represents a MaterialType. */
    class MaterialType implements IMaterialType {

        /**
         * Constructs a new MaterialType.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMaterialType);

        /** MaterialType type. */
        public type: number;

        /** MaterialType used. */
        public used: number;

        /** MaterialType bought. */
        public bought: number;

        /**
         * Encodes the specified MaterialType message. Does not implicitly {@link gameProto.MaterialType.verify|verify} messages.
         * @param message MaterialType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMaterialType, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MaterialType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MaterialType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MaterialType;
    }

    /** Properties of a C2S_MATERIAL_INFO. */
    interface IC2S_MATERIAL_INFO {
    }

    /** Represents a C2S_MATERIAL_INFO. */
    class C2S_MATERIAL_INFO implements IC2S_MATERIAL_INFO {

        /**
         * Constructs a new C2S_MATERIAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MATERIAL_INFO);

        /**
         * Encodes the specified C2S_MATERIAL_INFO message. Does not implicitly {@link gameProto.C2S_MATERIAL_INFO.verify|verify} messages.
         * @param message C2S_MATERIAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MATERIAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MATERIAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MATERIAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MATERIAL_INFO;
    }

    /** Properties of a S2C_MATERIAL_INFO. */
    interface IS2C_MATERIAL_INFO {

        /** S2C_MATERIAL_INFO metrialType */
        metrialType?: (gameProto.IMaterialType[]|null);

        /** S2C_MATERIAL_INFO passed */
        passed?: (number[]|null);
    }

    /** Represents a S2C_MATERIAL_INFO. */
    class S2C_MATERIAL_INFO implements IS2C_MATERIAL_INFO {

        /**
         * Constructs a new S2C_MATERIAL_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MATERIAL_INFO);

        /** S2C_MATERIAL_INFO metrialType. */
        public metrialType: gameProto.IMaterialType[];

        /** S2C_MATERIAL_INFO passed. */
        public passed: number[];

        /**
         * Encodes the specified S2C_MATERIAL_INFO message. Does not implicitly {@link gameProto.S2C_MATERIAL_INFO.verify|verify} messages.
         * @param message S2C_MATERIAL_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MATERIAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MATERIAL_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MATERIAL_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MATERIAL_INFO;
    }

    /** Properties of a C2S_MATERIAL_CHALLENGE. */
    interface IC2S_MATERIAL_CHALLENGE {

        /** C2S_MATERIAL_CHALLENGE id */
        id?: (number|null);

        /** C2S_MATERIAL_CHALLENGE sweep */
        sweep?: (boolean|null);
    }

    /** Represents a C2S_MATERIAL_CHALLENGE. */
    class C2S_MATERIAL_CHALLENGE implements IC2S_MATERIAL_CHALLENGE {

        /**
         * Constructs a new C2S_MATERIAL_CHALLENGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MATERIAL_CHALLENGE);

        /** C2S_MATERIAL_CHALLENGE id. */
        public id: number;

        /** C2S_MATERIAL_CHALLENGE sweep. */
        public sweep: boolean;

        /**
         * Encodes the specified C2S_MATERIAL_CHALLENGE message. Does not implicitly {@link gameProto.C2S_MATERIAL_CHALLENGE.verify|verify} messages.
         * @param message C2S_MATERIAL_CHALLENGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MATERIAL_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MATERIAL_CHALLENGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MATERIAL_CHALLENGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MATERIAL_CHALLENGE;
    }

    /** Properties of a S2C_MATERIAL_CHALLENGE. */
    interface IS2C_MATERIAL_CHALLENGE {

        /** S2C_MATERIAL_CHALLENGE success */
        success?: (boolean|null);

        /** S2C_MATERIAL_CHALLENGE valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** S2C_MATERIAL_CHALLENGE battleId */
        battleId?: (number|null);

        /** S2C_MATERIAL_CHALLENGE type */
        type?: (gameProto.IMaterialType|null);

        /** S2C_MATERIAL_CHALLENGE sweep */
        sweep?: (boolean|null);
    }

    /** Represents a S2C_MATERIAL_CHALLENGE. */
    class S2C_MATERIAL_CHALLENGE implements IS2C_MATERIAL_CHALLENGE {

        /**
         * Constructs a new S2C_MATERIAL_CHALLENGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MATERIAL_CHALLENGE);

        /** S2C_MATERIAL_CHALLENGE success. */
        public success: boolean;

        /** S2C_MATERIAL_CHALLENGE valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** S2C_MATERIAL_CHALLENGE battleId. */
        public battleId: number;

        /** S2C_MATERIAL_CHALLENGE type. */
        public type?: (gameProto.IMaterialType|null);

        /** S2C_MATERIAL_CHALLENGE sweep. */
        public sweep: boolean;

        /**
         * Encodes the specified S2C_MATERIAL_CHALLENGE message. Does not implicitly {@link gameProto.S2C_MATERIAL_CHALLENGE.verify|verify} messages.
         * @param message S2C_MATERIAL_CHALLENGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MATERIAL_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MATERIAL_CHALLENGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MATERIAL_CHALLENGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MATERIAL_CHALLENGE;
    }

    /** Properties of a C2S_MATERIAL_BUY. */
    interface IC2S_MATERIAL_BUY {

        /** C2S_MATERIAL_BUY type */
        type?: (number|null);

        /** C2S_MATERIAL_BUY count */
        count?: (number|null);
    }

    /** Represents a C2S_MATERIAL_BUY. */
    class C2S_MATERIAL_BUY implements IC2S_MATERIAL_BUY {

        /**
         * Constructs a new C2S_MATERIAL_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MATERIAL_BUY);

        /** C2S_MATERIAL_BUY type. */
        public type: number;

        /** C2S_MATERIAL_BUY count. */
        public count: number;

        /**
         * Encodes the specified C2S_MATERIAL_BUY message. Does not implicitly {@link gameProto.C2S_MATERIAL_BUY.verify|verify} messages.
         * @param message C2S_MATERIAL_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MATERIAL_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MATERIAL_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MATERIAL_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MATERIAL_BUY;
    }

    /** Properties of a S2C_MATERIAL_BUY. */
    interface IS2C_MATERIAL_BUY {

        /** S2C_MATERIAL_BUY materialType */
        materialType?: (gameProto.IMaterialType|null);
    }

    /** Represents a S2C_MATERIAL_BUY. */
    class S2C_MATERIAL_BUY implements IS2C_MATERIAL_BUY {

        /**
         * Constructs a new S2C_MATERIAL_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MATERIAL_BUY);

        /** S2C_MATERIAL_BUY materialType. */
        public materialType?: (gameProto.IMaterialType|null);

        /**
         * Encodes the specified S2C_MATERIAL_BUY message. Does not implicitly {@link gameProto.S2C_MATERIAL_BUY.verify|verify} messages.
         * @param message S2C_MATERIAL_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MATERIAL_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MATERIAL_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MATERIAL_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MATERIAL_BUY;
    }

    /** Properties of a GetMerchantReq. */
    interface IGetMerchantReq {

        /** GetMerchantReq storeId */
        storeId: number;
    }

    /** Represents a GetMerchantReq. */
    class GetMerchantReq implements IGetMerchantReq {

        /**
         * Constructs a new GetMerchantReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetMerchantReq);

        /** GetMerchantReq storeId. */
        public storeId: number;

        /**
         * Encodes the specified GetMerchantReq message. Does not implicitly {@link gameProto.GetMerchantReq.verify|verify} messages.
         * @param message GetMerchantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetMerchantReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMerchantReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMerchantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetMerchantReq;
    }

    /** Properties of a GetMerchantResp. */
    interface IGetMerchantResp {

        /** GetMerchantResp info */
        info: gameProto.IMerchantInfo;
    }

    /** Represents a GetMerchantResp. */
    class GetMerchantResp implements IGetMerchantResp {

        /**
         * Constructs a new GetMerchantResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetMerchantResp);

        /** GetMerchantResp info. */
        public info: gameProto.IMerchantInfo;

        /**
         * Encodes the specified GetMerchantResp message. Does not implicitly {@link gameProto.GetMerchantResp.verify|verify} messages.
         * @param message GetMerchantResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetMerchantResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetMerchantResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMerchantResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetMerchantResp;
    }

    /** Properties of a HandRefreshMerchantReq. */
    interface IHandRefreshMerchantReq {

        /** HandRefreshMerchantReq storeId */
        storeId: number;
    }

    /** Represents a HandRefreshMerchantReq. */
    class HandRefreshMerchantReq implements IHandRefreshMerchantReq {

        /**
         * Constructs a new HandRefreshMerchantReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHandRefreshMerchantReq);

        /** HandRefreshMerchantReq storeId. */
        public storeId: number;

        /**
         * Encodes the specified HandRefreshMerchantReq message. Does not implicitly {@link gameProto.HandRefreshMerchantReq.verify|verify} messages.
         * @param message HandRefreshMerchantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHandRefreshMerchantReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HandRefreshMerchantReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HandRefreshMerchantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HandRefreshMerchantReq;
    }

    /** Properties of a HandRefreshMerchantResp. */
    interface IHandRefreshMerchantResp {

        /** HandRefreshMerchantResp info */
        info: gameProto.IMerchantInfo;
    }

    /** Represents a HandRefreshMerchantResp. */
    class HandRefreshMerchantResp implements IHandRefreshMerchantResp {

        /**
         * Constructs a new HandRefreshMerchantResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHandRefreshMerchantResp);

        /** HandRefreshMerchantResp info. */
        public info: gameProto.IMerchantInfo;

        /**
         * Encodes the specified HandRefreshMerchantResp message. Does not implicitly {@link gameProto.HandRefreshMerchantResp.verify|verify} messages.
         * @param message HandRefreshMerchantResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHandRefreshMerchantResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HandRefreshMerchantResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HandRefreshMerchantResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HandRefreshMerchantResp;
    }

    /** Properties of a MerchantBuyGoodsReq. */
    interface IMerchantBuyGoodsReq {

        /** MerchantBuyGoodsReq storeId */
        storeId: number;

        /** MerchantBuyGoodsReq id */
        id: number;

        /** MerchantBuyGoodsReq num */
        num: number;
    }

    /** Represents a MerchantBuyGoodsReq. */
    class MerchantBuyGoodsReq implements IMerchantBuyGoodsReq {

        /**
         * Constructs a new MerchantBuyGoodsReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMerchantBuyGoodsReq);

        /** MerchantBuyGoodsReq storeId. */
        public storeId: number;

        /** MerchantBuyGoodsReq id. */
        public id: number;

        /** MerchantBuyGoodsReq num. */
        public num: number;

        /**
         * Encodes the specified MerchantBuyGoodsReq message. Does not implicitly {@link gameProto.MerchantBuyGoodsReq.verify|verify} messages.
         * @param message MerchantBuyGoodsReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMerchantBuyGoodsReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MerchantBuyGoodsReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MerchantBuyGoodsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MerchantBuyGoodsReq;
    }

    /** Properties of a MerchantBuyGoodsResp. */
    interface IMerchantBuyGoodsResp {

        /** MerchantBuyGoodsResp storeId */
        storeId: number;

        /** MerchantBuyGoodsResp goodsInfo */
        goodsInfo: gameProto.IGoodsInfo;

        /** MerchantBuyGoodsResp message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a MerchantBuyGoodsResp. */
    class MerchantBuyGoodsResp implements IMerchantBuyGoodsResp {

        /**
         * Constructs a new MerchantBuyGoodsResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMerchantBuyGoodsResp);

        /** MerchantBuyGoodsResp storeId. */
        public storeId: number;

        /** MerchantBuyGoodsResp goodsInfo. */
        public goodsInfo: gameProto.IGoodsInfo;

        /** MerchantBuyGoodsResp message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified MerchantBuyGoodsResp message. Does not implicitly {@link gameProto.MerchantBuyGoodsResp.verify|verify} messages.
         * @param message MerchantBuyGoodsResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMerchantBuyGoodsResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MerchantBuyGoodsResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MerchantBuyGoodsResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MerchantBuyGoodsResp;
    }

    /** Properties of a MerchantFreeResp. */
    interface IMerchantFreeResp {

        /** MerchantFreeResp valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a MerchantFreeResp. */
    class MerchantFreeResp implements IMerchantFreeResp {

        /**
         * Constructs a new MerchantFreeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMerchantFreeResp);

        /** MerchantFreeResp valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /**
         * Encodes the specified MerchantFreeResp message. Does not implicitly {@link gameProto.MerchantFreeResp.verify|verify} messages.
         * @param message MerchantFreeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMerchantFreeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MerchantFreeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MerchantFreeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MerchantFreeResp;
    }

    /** Properties of a NoviceViewReq. */
    interface INoviceViewReq {
    }

    /** Represents a NoviceViewReq. */
    class NoviceViewReq implements INoviceViewReq {

        /**
         * Constructs a new NoviceViewReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceViewReq);

        /**
         * Encodes the specified NoviceViewReq message. Does not implicitly {@link gameProto.NoviceViewReq.verify|verify} messages.
         * @param message NoviceViewReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceViewReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceViewReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceViewReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceViewReq;
    }

    /** Properties of a NoviceViewResp. */
    interface INoviceViewResp {

        /** NoviceViewResp guideId */
        guideId?: (number[]|null);
    }

    /** Represents a NoviceViewResp. */
    class NoviceViewResp implements INoviceViewResp {

        /**
         * Constructs a new NoviceViewResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceViewResp);

        /** NoviceViewResp guideId. */
        public guideId: number[];

        /**
         * Encodes the specified NoviceViewResp message. Does not implicitly {@link gameProto.NoviceViewResp.verify|verify} messages.
         * @param message NoviceViewResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceViewResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceViewResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceViewResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceViewResp;
    }

    /** Properties of a NoviceCommitReq. */
    interface INoviceCommitReq {

        /** NoviceCommitReq guideId */
        guideId: number;

        /** NoviceCommitReq stepId */
        stepId?: (number|null);
    }

    /** Represents a NoviceCommitReq. */
    class NoviceCommitReq implements INoviceCommitReq {

        /**
         * Constructs a new NoviceCommitReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceCommitReq);

        /** NoviceCommitReq guideId. */
        public guideId: number;

        /** NoviceCommitReq stepId. */
        public stepId: number;

        /**
         * Encodes the specified NoviceCommitReq message. Does not implicitly {@link gameProto.NoviceCommitReq.verify|verify} messages.
         * @param message NoviceCommitReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceCommitReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceCommitReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceCommitReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceCommitReq;
    }

    /** Properties of a NoviceCommitResp. */
    interface INoviceCommitResp {

        /** NoviceCommitResp guideId */
        guideId?: (number|null);

        /** NoviceCommitResp stepId */
        stepId?: (number|null);
    }

    /** Represents a NoviceCommitResp. */
    class NoviceCommitResp implements INoviceCommitResp {

        /**
         * Constructs a new NoviceCommitResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceCommitResp);

        /** NoviceCommitResp guideId. */
        public guideId: number;

        /** NoviceCommitResp stepId. */
        public stepId: number;

        /**
         * Encodes the specified NoviceCommitResp message. Does not implicitly {@link gameProto.NoviceCommitResp.verify|verify} messages.
         * @param message NoviceCommitResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceCommitResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceCommitResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceCommitResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceCommitResp;
    }

    /** Properties of a NoviceIgnoreReq. */
    interface INoviceIgnoreReq {
    }

    /** Represents a NoviceIgnoreReq. */
    class NoviceIgnoreReq implements INoviceIgnoreReq {

        /**
         * Constructs a new NoviceIgnoreReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceIgnoreReq);

        /**
         * Encodes the specified NoviceIgnoreReq message. Does not implicitly {@link gameProto.NoviceIgnoreReq.verify|verify} messages.
         * @param message NoviceIgnoreReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceIgnoreReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceIgnoreReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceIgnoreReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceIgnoreReq;
    }

    /** Properties of a NoviceIgnoreResp. */
    interface INoviceIgnoreResp {

        /** NoviceIgnoreResp finsh */
        finsh: boolean;
    }

    /** Represents a NoviceIgnoreResp. */
    class NoviceIgnoreResp implements INoviceIgnoreResp {

        /**
         * Constructs a new NoviceIgnoreResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceIgnoreResp);

        /** NoviceIgnoreResp finsh. */
        public finsh: boolean;

        /**
         * Encodes the specified NoviceIgnoreResp message. Does not implicitly {@link gameProto.NoviceIgnoreResp.verify|verify} messages.
         * @param message NoviceIgnoreResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceIgnoreResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceIgnoreResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceIgnoreResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceIgnoreResp;
    }

    /** Properties of a NoviceBattleReq. */
    interface INoviceBattleReq {

        /** NoviceBattleReq cpId */
        cpId: number;
    }

    /** Represents a NoviceBattleReq. */
    class NoviceBattleReq implements INoviceBattleReq {

        /**
         * Constructs a new NoviceBattleReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceBattleReq);

        /** NoviceBattleReq cpId. */
        public cpId: number;

        /**
         * Encodes the specified NoviceBattleReq message. Does not implicitly {@link gameProto.NoviceBattleReq.verify|verify} messages.
         * @param message NoviceBattleReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceBattleReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceBattleReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceBattleReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceBattleReq;
    }

    /** Properties of a NoviceBattleResp. */
    interface INoviceBattleResp {

        /** NoviceBattleResp battleId */
        battleId: number;

        /** NoviceBattleResp generals */
        generals?: (number[]|null);
    }

    /** Represents a NoviceBattleResp. */
    class NoviceBattleResp implements INoviceBattleResp {

        /**
         * Constructs a new NoviceBattleResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceBattleResp);

        /** NoviceBattleResp battleId. */
        public battleId: number;

        /** NoviceBattleResp generals. */
        public generals: number[];

        /**
         * Encodes the specified NoviceBattleResp message. Does not implicitly {@link gameProto.NoviceBattleResp.verify|verify} messages.
         * @param message NoviceBattleResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceBattleResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceBattleResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceBattleResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceBattleResp;
    }

    /** Properties of a NoviceDataReq. */
    interface INoviceDataReq {

        /** NoviceDataReq data */
        data: string;
    }

    /** Represents a NoviceDataReq. */
    class NoviceDataReq implements INoviceDataReq {

        /**
         * Constructs a new NoviceDataReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceDataReq);

        /** NoviceDataReq data. */
        public data: string;

        /**
         * Encodes the specified NoviceDataReq message. Does not implicitly {@link gameProto.NoviceDataReq.verify|verify} messages.
         * @param message NoviceDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceDataReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceDataReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceDataReq;
    }

    /** Properties of a NoviceDataResp. */
    interface INoviceDataResp {

        /** NoviceDataResp result */
        result: boolean;
    }

    /** Represents a NoviceDataResp. */
    class NoviceDataResp implements INoviceDataResp {

        /**
         * Constructs a new NoviceDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.INoviceDataResp);

        /** NoviceDataResp result. */
        public result: boolean;

        /**
         * Encodes the specified NoviceDataResp message. Does not implicitly {@link gameProto.NoviceDataResp.verify|verify} messages.
         * @param message NoviceDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.INoviceDataResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a NoviceDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NoviceDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.NoviceDataResp;
    }

    /** Properties of a C2S_ONLINE_INFO. */
    interface IC2S_ONLINE_INFO {
    }

    /** Represents a C2S_ONLINE_INFO. */
    class C2S_ONLINE_INFO implements IC2S_ONLINE_INFO {

        /**
         * Constructs a new C2S_ONLINE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ONLINE_INFO);

        /**
         * Encodes the specified C2S_ONLINE_INFO message. Does not implicitly {@link gameProto.C2S_ONLINE_INFO.verify|verify} messages.
         * @param message C2S_ONLINE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ONLINE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ONLINE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ONLINE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ONLINE_INFO;
    }

    /** Properties of a S2C_ONLINE_INFO. */
    interface IS2C_ONLINE_INFO {

        /** S2C_ONLINE_INFO onlineTime */
        onlineTime?: (number|null);

        /** S2C_ONLINE_INFO awardRecordSet */
        awardRecordSet?: (number[]|null);
    }

    /** Represents a S2C_ONLINE_INFO. */
    class S2C_ONLINE_INFO implements IS2C_ONLINE_INFO {

        /**
         * Constructs a new S2C_ONLINE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ONLINE_INFO);

        /** S2C_ONLINE_INFO onlineTime. */
        public onlineTime: number;

        /** S2C_ONLINE_INFO awardRecordSet. */
        public awardRecordSet: number[];

        /**
         * Encodes the specified S2C_ONLINE_INFO message. Does not implicitly {@link gameProto.S2C_ONLINE_INFO.verify|verify} messages.
         * @param message S2C_ONLINE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ONLINE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ONLINE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ONLINE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ONLINE_INFO;
    }

    /** Properties of a C2S_ONLINE_REWARD. */
    interface IC2S_ONLINE_REWARD {

        /** C2S_ONLINE_REWARD stepId */
        stepId: number;
    }

    /** Represents a C2S_ONLINE_REWARD. */
    class C2S_ONLINE_REWARD implements IC2S_ONLINE_REWARD {

        /**
         * Constructs a new C2S_ONLINE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ONLINE_REWARD);

        /** C2S_ONLINE_REWARD stepId. */
        public stepId: number;

        /**
         * Encodes the specified C2S_ONLINE_REWARD message. Does not implicitly {@link gameProto.C2S_ONLINE_REWARD.verify|verify} messages.
         * @param message C2S_ONLINE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ONLINE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ONLINE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ONLINE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ONLINE_REWARD;
    }

    /** Properties of a S2C_ONLINE_REWARD. */
    interface IS2C_ONLINE_REWARD {

        /** S2C_ONLINE_REWARD resultCode */
        resultCode: number;

        /** S2C_ONLINE_REWARD stepId */
        stepId?: (number|null);

        /** S2C_ONLINE_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_ONLINE_REWARD awardRecord */
        awardRecord?: (number[]|null);
    }

    /** Represents a S2C_ONLINE_REWARD. */
    class S2C_ONLINE_REWARD implements IS2C_ONLINE_REWARD {

        /**
         * Constructs a new S2C_ONLINE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ONLINE_REWARD);

        /** S2C_ONLINE_REWARD resultCode. */
        public resultCode: number;

        /** S2C_ONLINE_REWARD stepId. */
        public stepId: number;

        /** S2C_ONLINE_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_ONLINE_REWARD awardRecord. */
        public awardRecord: number[];

        /**
         * Encodes the specified S2C_ONLINE_REWARD message. Does not implicitly {@link gameProto.S2C_ONLINE_REWARD.verify|verify} messages.
         * @param message S2C_ONLINE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ONLINE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ONLINE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ONLINE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ONLINE_REWARD;
    }

    /** Properties of a PatrolBossInfo. */
    interface IPatrolBossInfo {

        /** PatrolBossInfo bossId */
        bossId?: (number|null);

        /** PatrolBossInfo bossTime */
        bossTime?: (number|null);

        /** PatrolBossInfo generalId */
        generalId?: (number|null);

        /** PatrolBossInfo bossReward */
        bossReward?: (string|null);

        /** PatrolBossInfo bossFirst */
        bossFirst?: (boolean|null);
    }

    /** Represents a PatrolBossInfo. */
    class PatrolBossInfo implements IPatrolBossInfo {

        /**
         * Constructs a new PatrolBossInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatrolBossInfo);

        /** PatrolBossInfo bossId. */
        public bossId: number;

        /** PatrolBossInfo bossTime. */
        public bossTime: number;

        /** PatrolBossInfo generalId. */
        public generalId: number;

        /** PatrolBossInfo bossReward. */
        public bossReward: string;

        /** PatrolBossInfo bossFirst. */
        public bossFirst: boolean;

        /**
         * Encodes the specified PatrolBossInfo message. Does not implicitly {@link gameProto.PatrolBossInfo.verify|verify} messages.
         * @param message PatrolBossInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatrolBossInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatrolBossInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatrolBossInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatrolBossInfo;
    }

    /** Properties of a PatrolGenInfo. */
    interface IPatrolGenInfo {

        /** PatrolGenInfo rewardLevelNum */
        rewardLevelNum?: (number|null);

        /** PatrolGenInfo rewardGenId */
        rewardGenId?: (number|null);

        /** PatrolGenInfo rewardState */
        rewardState?: (number|null);
    }

    /** Represents a PatrolGenInfo. */
    class PatrolGenInfo implements IPatrolGenInfo {

        /**
         * Constructs a new PatrolGenInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatrolGenInfo);

        /** PatrolGenInfo rewardLevelNum. */
        public rewardLevelNum: number;

        /** PatrolGenInfo rewardGenId. */
        public rewardGenId: number;

        /** PatrolGenInfo rewardState. */
        public rewardState: number;

        /**
         * Encodes the specified PatrolGenInfo message. Does not implicitly {@link gameProto.PatrolGenInfo.verify|verify} messages.
         * @param message PatrolGenInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatrolGenInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatrolGenInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatrolGenInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatrolGenInfo;
    }

    /** Properties of a PatrolInfo. */
    interface IPatrolInfo {

        /** PatrolInfo patrolId */
        patrolId?: (number|null);

        /** PatrolInfo description */
        description?: (string|null);

        /** PatrolInfo levelLimit */
        levelLimit?: (number|null);

        /** PatrolInfo isPass */
        isPass?: (boolean|null);

        /** PatrolInfo npcMod */
        npcMod?: (string|null);

        /** PatrolInfo timeReward */
        timeReward?: (gameProto.ITuple[]|null);

        /** PatrolInfo score */
        score?: (number|null);

        /** PatrolInfo map */
        map?: (string|null);

        /** PatrolInfo boxGetTime */
        boxGetTime?: (number|null);

        /** PatrolInfo bossInfo */
        bossInfo?: (gameProto.IPatrolBossInfo|null);

        /** PatrolInfo genInfo */
        genInfo?: (gameProto.IPatrolGenInfo|null);
    }

    /** Represents a PatrolInfo. */
    class PatrolInfo implements IPatrolInfo {

        /**
         * Constructs a new PatrolInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatrolInfo);

        /** PatrolInfo patrolId. */
        public patrolId: number;

        /** PatrolInfo description. */
        public description: string;

        /** PatrolInfo levelLimit. */
        public levelLimit: number;

        /** PatrolInfo isPass. */
        public isPass: boolean;

        /** PatrolInfo npcMod. */
        public npcMod: string;

        /** PatrolInfo timeReward. */
        public timeReward: gameProto.ITuple[];

        /** PatrolInfo score. */
        public score: number;

        /** PatrolInfo map. */
        public map: string;

        /** PatrolInfo boxGetTime. */
        public boxGetTime: number;

        /** PatrolInfo bossInfo. */
        public bossInfo?: (gameProto.IPatrolBossInfo|null);

        /** PatrolInfo genInfo. */
        public genInfo?: (gameProto.IPatrolGenInfo|null);

        /**
         * Encodes the specified PatrolInfo message. Does not implicitly {@link gameProto.PatrolInfo.verify|verify} messages.
         * @param message PatrolInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatrolInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatrolInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatrolInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatrolInfo;
    }

    /** Properties of a PatrolRandomPlayer. */
    interface IPatrolRandomPlayer {

        /** PatrolRandomPlayer playerId */
        playerId?: (number|null);

        /** PatrolRandomPlayer countryId */
        countryId?: (number|null);

        /** PatrolRandomPlayer nickName */
        nickName?: (string|null);

        /** PatrolRandomPlayer guildName */
        guildName?: (string|null);

        /** PatrolRandomPlayer jobId */
        jobId?: (number|null);
    }

    /** Represents a PatrolRandomPlayer. */
    class PatrolRandomPlayer implements IPatrolRandomPlayer {

        /**
         * Constructs a new PatrolRandomPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatrolRandomPlayer);

        /** PatrolRandomPlayer playerId. */
        public playerId: number;

        /** PatrolRandomPlayer countryId. */
        public countryId: number;

        /** PatrolRandomPlayer nickName. */
        public nickName: string;

        /** PatrolRandomPlayer guildName. */
        public guildName: string;

        /** PatrolRandomPlayer jobId. */
        public jobId: number;

        /**
         * Encodes the specified PatrolRandomPlayer message. Does not implicitly {@link gameProto.PatrolRandomPlayer.verify|verify} messages.
         * @param message PatrolRandomPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatrolRandomPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatrolRandomPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatrolRandomPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatrolRandomPlayer;
    }

    /** Properties of a C2S_GET_PATROL. */
    interface IC2S_GET_PATROL {
    }

    /** Represents a C2S_GET_PATROL. */
    class C2S_GET_PATROL implements IC2S_GET_PATROL {

        /**
         * Constructs a new C2S_GET_PATROL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_PATROL);

        /**
         * Encodes the specified C2S_GET_PATROL message. Does not implicitly {@link gameProto.C2S_GET_PATROL.verify|verify} messages.
         * @param message C2S_GET_PATROL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_PATROL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_PATROL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_PATROL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_PATROL;
    }

    /** Properties of a S2C_GET_PATROL. */
    interface IS2C_GET_PATROL {

        /** S2C_GET_PATROL info */
        info: gameProto.IPatrolInfo;
    }

    /** Represents a S2C_GET_PATROL. */
    class S2C_GET_PATROL implements IS2C_GET_PATROL {

        /**
         * Constructs a new S2C_GET_PATROL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_PATROL);

        /** S2C_GET_PATROL info. */
        public info: gameProto.IPatrolInfo;

        /**
         * Encodes the specified S2C_GET_PATROL message. Does not implicitly {@link gameProto.S2C_GET_PATROL.verify|verify} messages.
         * @param message S2C_GET_PATROL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_PATROL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_PATROL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_PATROL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_PATROL;
    }

    /** Properties of a C2S_RECEIVE_PATROL_REWARD. */
    interface IC2S_RECEIVE_PATROL_REWARD {
    }

    /** Represents a C2S_RECEIVE_PATROL_REWARD. */
    class C2S_RECEIVE_PATROL_REWARD implements IC2S_RECEIVE_PATROL_REWARD {

        /**
         * Constructs a new C2S_RECEIVE_PATROL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RECEIVE_PATROL_REWARD);

        /**
         * Encodes the specified C2S_RECEIVE_PATROL_REWARD message. Does not implicitly {@link gameProto.C2S_RECEIVE_PATROL_REWARD.verify|verify} messages.
         * @param message C2S_RECEIVE_PATROL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RECEIVE_PATROL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RECEIVE_PATROL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RECEIVE_PATROL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RECEIVE_PATROL_REWARD;
    }

    /** Properties of a S2C_RECEIVE_PATROL_REWARD. */
    interface IS2C_RECEIVE_PATROL_REWARD {

        /** S2C_RECEIVE_PATROL_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_RECEIVE_PATROL_REWARD. */
    class S2C_RECEIVE_PATROL_REWARD implements IS2C_RECEIVE_PATROL_REWARD {

        /**
         * Constructs a new S2C_RECEIVE_PATROL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RECEIVE_PATROL_REWARD);

        /** S2C_RECEIVE_PATROL_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_RECEIVE_PATROL_REWARD message. Does not implicitly {@link gameProto.S2C_RECEIVE_PATROL_REWARD.verify|verify} messages.
         * @param message S2C_RECEIVE_PATROL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RECEIVE_PATROL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RECEIVE_PATROL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RECEIVE_PATROL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RECEIVE_PATROL_REWARD;
    }

    /** Properties of a C2S_PATROL_CHALLENGE. */
    interface IC2S_PATROL_CHALLENGE {
    }

    /** Represents a C2S_PATROL_CHALLENGE. */
    class C2S_PATROL_CHALLENGE implements IC2S_PATROL_CHALLENGE {

        /**
         * Constructs a new C2S_PATROL_CHALLENGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_CHALLENGE);

        /**
         * Encodes the specified C2S_PATROL_CHALLENGE message. Does not implicitly {@link gameProto.C2S_PATROL_CHALLENGE.verify|verify} messages.
         * @param message C2S_PATROL_CHALLENGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_CHALLENGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_CHALLENGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_CHALLENGE;
    }

    /** Properties of a S2C_PATROL_CHALLENGE_REWARD. */
    interface IS2C_PATROL_CHALLENGE_REWARD {

        /** S2C_PATROL_CHALLENGE_REWARD result */
        result: boolean;

        /** S2C_PATROL_CHALLENGE_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_PATROL_CHALLENGE_REWARD battleId */
        battleId?: (number|null);
    }

    /** Represents a S2C_PATROL_CHALLENGE_REWARD. */
    class S2C_PATROL_CHALLENGE_REWARD implements IS2C_PATROL_CHALLENGE_REWARD {

        /**
         * Constructs a new S2C_PATROL_CHALLENGE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_CHALLENGE_REWARD);

        /** S2C_PATROL_CHALLENGE_REWARD result. */
        public result: boolean;

        /** S2C_PATROL_CHALLENGE_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_PATROL_CHALLENGE_REWARD battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_PATROL_CHALLENGE_REWARD message. Does not implicitly {@link gameProto.S2C_PATROL_CHALLENGE_REWARD.verify|verify} messages.
         * @param message S2C_PATROL_CHALLENGE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_CHALLENGE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_CHALLENGE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_CHALLENGE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_CHALLENGE_REWARD;
    }

    /** Properties of a C2S_PATROL_GET_RANDOM_PLAYERS. */
    interface IC2S_PATROL_GET_RANDOM_PLAYERS {
    }

    /** Represents a C2S_PATROL_GET_RANDOM_PLAYERS. */
    class C2S_PATROL_GET_RANDOM_PLAYERS implements IC2S_PATROL_GET_RANDOM_PLAYERS {

        /**
         * Constructs a new C2S_PATROL_GET_RANDOM_PLAYERS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_GET_RANDOM_PLAYERS);

        /**
         * Encodes the specified C2S_PATROL_GET_RANDOM_PLAYERS message. Does not implicitly {@link gameProto.C2S_PATROL_GET_RANDOM_PLAYERS.verify|verify} messages.
         * @param message C2S_PATROL_GET_RANDOM_PLAYERS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_GET_RANDOM_PLAYERS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_GET_RANDOM_PLAYERS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_GET_RANDOM_PLAYERS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_GET_RANDOM_PLAYERS;
    }

    /** Properties of a S2C_PATROL_GET_RANDOM_PLAYERS. */
    interface IS2C_PATROL_GET_RANDOM_PLAYERS {

        /** S2C_PATROL_GET_RANDOM_PLAYERS players */
        players?: (gameProto.IPatrolRandomPlayer[]|null);
    }

    /** Represents a S2C_PATROL_GET_RANDOM_PLAYERS. */
    class S2C_PATROL_GET_RANDOM_PLAYERS implements IS2C_PATROL_GET_RANDOM_PLAYERS {

        /**
         * Constructs a new S2C_PATROL_GET_RANDOM_PLAYERS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_GET_RANDOM_PLAYERS);

        /** S2C_PATROL_GET_RANDOM_PLAYERS players. */
        public players: gameProto.IPatrolRandomPlayer[];

        /**
         * Encodes the specified S2C_PATROL_GET_RANDOM_PLAYERS message. Does not implicitly {@link gameProto.S2C_PATROL_GET_RANDOM_PLAYERS.verify|verify} messages.
         * @param message S2C_PATROL_GET_RANDOM_PLAYERS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_GET_RANDOM_PLAYERS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_GET_RANDOM_PLAYERS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_GET_RANDOM_PLAYERS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_GET_RANDOM_PLAYERS;
    }

    /** Properties of a C2S_PATROL_CHALLENGE_BOSS. */
    interface IC2S_PATROL_CHALLENGE_BOSS {
    }

    /** Represents a C2S_PATROL_CHALLENGE_BOSS. */
    class C2S_PATROL_CHALLENGE_BOSS implements IC2S_PATROL_CHALLENGE_BOSS {

        /**
         * Constructs a new C2S_PATROL_CHALLENGE_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_CHALLENGE_BOSS);

        /**
         * Encodes the specified C2S_PATROL_CHALLENGE_BOSS message. Does not implicitly {@link gameProto.C2S_PATROL_CHALLENGE_BOSS.verify|verify} messages.
         * @param message C2S_PATROL_CHALLENGE_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_CHALLENGE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_CHALLENGE_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_CHALLENGE_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_CHALLENGE_BOSS;
    }

    /** Properties of a S2C_PATROL_CHALLENGE_BOSS. */
    interface IS2C_PATROL_CHALLENGE_BOSS {

        /** S2C_PATROL_CHALLENGE_BOSS bossTime */
        bossTime?: (number|null);
    }

    /** Represents a S2C_PATROL_CHALLENGE_BOSS. */
    class S2C_PATROL_CHALLENGE_BOSS implements IS2C_PATROL_CHALLENGE_BOSS {

        /**
         * Constructs a new S2C_PATROL_CHALLENGE_BOSS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_CHALLENGE_BOSS);

        /** S2C_PATROL_CHALLENGE_BOSS bossTime. */
        public bossTime: number;

        /**
         * Encodes the specified S2C_PATROL_CHALLENGE_BOSS message. Does not implicitly {@link gameProto.S2C_PATROL_CHALLENGE_BOSS.verify|verify} messages.
         * @param message S2C_PATROL_CHALLENGE_BOSS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_CHALLENGE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_CHALLENGE_BOSS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_CHALLENGE_BOSS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_CHALLENGE_BOSS;
    }

    /** Properties of a S2C_PATROL_CHALLENGE_BOSS_REWARD. */
    interface IS2C_PATROL_CHALLENGE_BOSS_REWARD {

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD result */
        result?: (boolean|null);

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD message */
        message?: (gameProto.IValuesMessage[]|null);

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD battleId */
        battleId?: (number|null);
    }

    /** Represents a S2C_PATROL_CHALLENGE_BOSS_REWARD. */
    class S2C_PATROL_CHALLENGE_BOSS_REWARD implements IS2C_PATROL_CHALLENGE_BOSS_REWARD {

        /**
         * Constructs a new S2C_PATROL_CHALLENGE_BOSS_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_CHALLENGE_BOSS_REWARD);

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD result. */
        public result: boolean;

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD message. */
        public message: gameProto.IValuesMessage[];

        /** S2C_PATROL_CHALLENGE_BOSS_REWARD battleId. */
        public battleId: number;

        /**
         * Encodes the specified S2C_PATROL_CHALLENGE_BOSS_REWARD message. Does not implicitly {@link gameProto.S2C_PATROL_CHALLENGE_BOSS_REWARD.verify|verify} messages.
         * @param message S2C_PATROL_CHALLENGE_BOSS_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_CHALLENGE_BOSS_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_CHALLENGE_BOSS_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_CHALLENGE_BOSS_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_CHALLENGE_BOSS_REWARD;
    }

    /** Properties of a C2S_PATROL_WINE. */
    interface IC2S_PATROL_WINE {
    }

    /** Represents a C2S_PATROL_WINE. */
    class C2S_PATROL_WINE implements IC2S_PATROL_WINE {

        /**
         * Constructs a new C2S_PATROL_WINE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_WINE);

        /**
         * Encodes the specified C2S_PATROL_WINE message. Does not implicitly {@link gameProto.C2S_PATROL_WINE.verify|verify} messages.
         * @param message C2S_PATROL_WINE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_WINE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_WINE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_WINE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_WINE;
    }

    /** Properties of a S2C_PATROL_WINE. */
    interface IS2C_PATROL_WINE {

        /** S2C_PATROL_WINE result */
        result?: (boolean|null);

        /** S2C_PATROL_WINE message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_PATROL_WINE. */
    class S2C_PATROL_WINE implements IS2C_PATROL_WINE {

        /**
         * Constructs a new S2C_PATROL_WINE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_WINE);

        /** S2C_PATROL_WINE result. */
        public result: boolean;

        /** S2C_PATROL_WINE message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_PATROL_WINE message. Does not implicitly {@link gameProto.S2C_PATROL_WINE.verify|verify} messages.
         * @param message S2C_PATROL_WINE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_WINE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_WINE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_WINE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_WINE;
    }

    /** Properties of a C2S_PATROL_REWARD_GENERAL. */
    interface IC2S_PATROL_REWARD_GENERAL {

        /** C2S_PATROL_REWARD_GENERAL patrolId */
        patrolId?: (number|null);
    }

    /** Represents a C2S_PATROL_REWARD_GENERAL. */
    class C2S_PATROL_REWARD_GENERAL implements IC2S_PATROL_REWARD_GENERAL {

        /**
         * Constructs a new C2S_PATROL_REWARD_GENERAL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_REWARD_GENERAL);

        /** C2S_PATROL_REWARD_GENERAL patrolId. */
        public patrolId: number;

        /**
         * Encodes the specified C2S_PATROL_REWARD_GENERAL message. Does not implicitly {@link gameProto.C2S_PATROL_REWARD_GENERAL.verify|verify} messages.
         * @param message C2S_PATROL_REWARD_GENERAL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_REWARD_GENERAL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_REWARD_GENERAL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_REWARD_GENERAL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_REWARD_GENERAL;
    }

    /** Properties of a S2C_PATROL_REWARD_GENERAL. */
    interface IS2C_PATROL_REWARD_GENERAL {

        /** S2C_PATROL_REWARD_GENERAL patrolId */
        patrolId?: (number|null);

        /** S2C_PATROL_REWARD_GENERAL generalId */
        generalId?: (number|null);

        /** S2C_PATROL_REWARD_GENERAL info */
        info?: (gameProto.IPatrolGenInfo|null);
    }

    /** Represents a S2C_PATROL_REWARD_GENERAL. */
    class S2C_PATROL_REWARD_GENERAL implements IS2C_PATROL_REWARD_GENERAL {

        /**
         * Constructs a new S2C_PATROL_REWARD_GENERAL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_REWARD_GENERAL);

        /** S2C_PATROL_REWARD_GENERAL patrolId. */
        public patrolId: number;

        /** S2C_PATROL_REWARD_GENERAL generalId. */
        public generalId: number;

        /** S2C_PATROL_REWARD_GENERAL info. */
        public info?: (gameProto.IPatrolGenInfo|null);

        /**
         * Encodes the specified S2C_PATROL_REWARD_GENERAL message. Does not implicitly {@link gameProto.S2C_PATROL_REWARD_GENERAL.verify|verify} messages.
         * @param message S2C_PATROL_REWARD_GENERAL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_REWARD_GENERAL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_REWARD_GENERAL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_REWARD_GENERAL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_REWARD_GENERAL;
    }

    /** Properties of a C2S_PATROL_BUY_BOSS_COUNT. */
    interface IC2S_PATROL_BUY_BOSS_COUNT {
    }

    /** Represents a C2S_PATROL_BUY_BOSS_COUNT. */
    class C2S_PATROL_BUY_BOSS_COUNT implements IC2S_PATROL_BUY_BOSS_COUNT {

        /**
         * Constructs a new C2S_PATROL_BUY_BOSS_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PATROL_BUY_BOSS_COUNT);

        /**
         * Encodes the specified C2S_PATROL_BUY_BOSS_COUNT message. Does not implicitly {@link gameProto.C2S_PATROL_BUY_BOSS_COUNT.verify|verify} messages.
         * @param message C2S_PATROL_BUY_BOSS_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PATROL_BUY_BOSS_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PATROL_BUY_BOSS_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PATROL_BUY_BOSS_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PATROL_BUY_BOSS_COUNT;
    }

    /** Properties of a S2C_PATROL_BUY_BOSS_COUNT. */
    interface IS2C_PATROL_BUY_BOSS_COUNT {
    }

    /** Represents a S2C_PATROL_BUY_BOSS_COUNT. */
    class S2C_PATROL_BUY_BOSS_COUNT implements IS2C_PATROL_BUY_BOSS_COUNT {

        /**
         * Constructs a new S2C_PATROL_BUY_BOSS_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PATROL_BUY_BOSS_COUNT);

        /**
         * Encodes the specified S2C_PATROL_BUY_BOSS_COUNT message. Does not implicitly {@link gameProto.S2C_PATROL_BUY_BOSS_COUNT.verify|verify} messages.
         * @param message S2C_PATROL_BUY_BOSS_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PATROL_BUY_BOSS_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PATROL_BUY_BOSS_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PATROL_BUY_BOSS_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PATROL_BUY_BOSS_COUNT;
    }

    /** Properties of a PlayerInfo. */
    interface IPlayerInfo {

        /** PlayerInfo playerId */
        playerId: number;

        /** PlayerInfo countryId */
        countryId: number;

        /** PlayerInfo nickName */
        nickName: string;

        /** PlayerInfo sex */
        sex: number;

        /** PlayerInfo level */
        level: number;

        /** PlayerInfo head */
        head: number;

        /** PlayerInfo headType */
        headType: number;

        /** PlayerInfo createTimestamp */
        createTimestamp: number;

        /** PlayerInfo guildContribute */
        guildContribute: number;

        /** PlayerInfo wood */
        wood: number;

        /** PlayerInfo recharge */
        recharge?: (boolean|null);

        /** PlayerInfo exp */
        exp?: (number|null);

        /** PlayerInfo governmentPost */
        governmentPost?: (number|null);

        /** PlayerInfo vipLevel */
        vipLevel?: (number|null);

        /** PlayerInfo vipIntegral */
        vipIntegral?: (number|null);

        /** PlayerInfo gold */
        gold?: (number|null);

        /** PlayerInfo silver */
        silver?: (number|null);

        /** PlayerInfo grain */
        grain?: (number|null);

        /** PlayerInfo iron */
        iron?: (number|null);

        /** PlayerInfo silver_draw */
        silver_draw?: (number|null);

        /** PlayerInfo medal */
        medal?: (number|null);

        /** PlayerInfo recruitVolumn */
        recruitVolumn?: (number|null);

        /** PlayerInfo militaryMeritsGain */
        militaryMeritsGain?: (number|null);

        /** PlayerInfo militaryMeritsAvailiable */
        militaryMeritsAvailiable?: (number|null);

        /** PlayerInfo militaryMeritsWeek */
        militaryMeritsWeek?: (number|null);

        /** PlayerInfo arenaPoint */
        arenaPoint?: (number|null);

        /** PlayerInfo offlineStamp */
        offlineStamp?: (number|null);

        /** PlayerInfo generalSoulCoin */
        generalSoulCoin?: (number|null);

        /** PlayerInfo worshipState */
        worshipState?: (gameProto.IWorshipState[]|null);

        /** PlayerInfo hasCityRevenue */
        hasCityRevenue?: (boolean|null);

        /** PlayerInfo jade */
        jade?: (number|null);

        /** PlayerInfo militaryMeritsDay */
        militaryMeritsDay?: (number|null);

        /** PlayerInfo crossServerDaylyReward */
        crossServerDaylyReward?: (boolean|null);

        /** PlayerInfo honor */
        honor?: (number|null);
    }

    /** Represents a PlayerInfo. */
    class PlayerInfo implements IPlayerInfo {

        /**
         * Constructs a new PlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerInfo);

        /** PlayerInfo playerId. */
        public playerId: number;

        /** PlayerInfo countryId. */
        public countryId: number;

        /** PlayerInfo nickName. */
        public nickName: string;

        /** PlayerInfo sex. */
        public sex: number;

        /** PlayerInfo level. */
        public level: number;

        /** PlayerInfo head. */
        public head: number;

        /** PlayerInfo headType. */
        public headType: number;

        /** PlayerInfo createTimestamp. */
        public createTimestamp: number;

        /** PlayerInfo guildContribute. */
        public guildContribute: number;

        /** PlayerInfo wood. */
        public wood: number;

        /** PlayerInfo recharge. */
        public recharge: boolean;

        /** PlayerInfo exp. */
        public exp: number;

        /** PlayerInfo governmentPost. */
        public governmentPost: number;

        /** PlayerInfo vipLevel. */
        public vipLevel: number;

        /** PlayerInfo vipIntegral. */
        public vipIntegral: number;

        /** PlayerInfo gold. */
        public gold: number;

        /** PlayerInfo silver. */
        public silver: number;

        /** PlayerInfo grain. */
        public grain: number;

        /** PlayerInfo iron. */
        public iron: number;

        /** PlayerInfo silver_draw. */
        public silver_draw: number;

        /** PlayerInfo medal. */
        public medal: number;

        /** PlayerInfo recruitVolumn. */
        public recruitVolumn: number;

        /** PlayerInfo militaryMeritsGain. */
        public militaryMeritsGain: number;

        /** PlayerInfo militaryMeritsAvailiable. */
        public militaryMeritsAvailiable: number;

        /** PlayerInfo militaryMeritsWeek. */
        public militaryMeritsWeek: number;

        /** PlayerInfo arenaPoint. */
        public arenaPoint: number;

        /** PlayerInfo offlineStamp. */
        public offlineStamp: number;

        /** PlayerInfo generalSoulCoin. */
        public generalSoulCoin: number;

        /** PlayerInfo worshipState. */
        public worshipState: gameProto.IWorshipState[];

        /** PlayerInfo hasCityRevenue. */
        public hasCityRevenue: boolean;

        /** PlayerInfo jade. */
        public jade: number;

        /** PlayerInfo militaryMeritsDay. */
        public militaryMeritsDay: number;

        /** PlayerInfo crossServerDaylyReward. */
        public crossServerDaylyReward: boolean;

        /** PlayerInfo honor. */
        public honor: number;

        /**
         * Encodes the specified PlayerInfo message. Does not implicitly {@link gameProto.PlayerInfo.verify|verify} messages.
         * @param message PlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerInfo;
    }

    /** Properties of a WorshipState. */
    interface IWorshipState {

        /** WorshipState worshipType */
        worshipType?: (number|null);

        /** WorshipState canWorship */
        canWorship?: (boolean|null);
    }

    /** Represents a WorshipState. */
    class WorshipState implements IWorshipState {

        /**
         * Constructs a new WorshipState.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IWorshipState);

        /** WorshipState worshipType. */
        public worshipType: number;

        /** WorshipState canWorship. */
        public canWorship: boolean;

        /**
         * Encodes the specified WorshipState message. Does not implicitly {@link gameProto.WorshipState.verify|verify} messages.
         * @param message WorshipState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IWorshipState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WorshipState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WorshipState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.WorshipState;
    }

    /** Properties of a C2S_SYS_HEARTBEAT. */
    interface IC2S_SYS_HEARTBEAT {
    }

    /** Represents a C2S_SYS_HEARTBEAT. */
    class C2S_SYS_HEARTBEAT implements IC2S_SYS_HEARTBEAT {

        /**
         * Constructs a new C2S_SYS_HEARTBEAT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_SYS_HEARTBEAT);

        /**
         * Encodes the specified C2S_SYS_HEARTBEAT message. Does not implicitly {@link gameProto.C2S_SYS_HEARTBEAT.verify|verify} messages.
         * @param message C2S_SYS_HEARTBEAT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_SYS_HEARTBEAT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_SYS_HEARTBEAT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_SYS_HEARTBEAT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_SYS_HEARTBEAT;
    }

    /** Properties of a S2C_SYS_HEARTBEAT. */
    interface IS2C_SYS_HEARTBEAT {

        /** S2C_SYS_HEARTBEAT serverTime */
        serverTime: number;
    }

    /** Represents a S2C_SYS_HEARTBEAT. */
    class S2C_SYS_HEARTBEAT implements IS2C_SYS_HEARTBEAT {

        /**
         * Constructs a new S2C_SYS_HEARTBEAT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SYS_HEARTBEAT);

        /** S2C_SYS_HEARTBEAT serverTime. */
        public serverTime: number;

        /**
         * Encodes the specified S2C_SYS_HEARTBEAT message. Does not implicitly {@link gameProto.S2C_SYS_HEARTBEAT.verify|verify} messages.
         * @param message S2C_SYS_HEARTBEAT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SYS_HEARTBEAT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SYS_HEARTBEAT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SYS_HEARTBEAT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SYS_HEARTBEAT;
    }

    /** Properties of a C2S_PLAYER_LOGIN_ACT. */
    interface IC2S_PLAYER_LOGIN_ACT {

        /** C2S_PLAYER_LOGIN_ACT param */
        param: string;

        /** C2S_PLAYER_LOGIN_ACT device */
        device: string;

        /** C2S_PLAYER_LOGIN_ACT deviceSys */
        deviceSys: string;

        /** C2S_PLAYER_LOGIN_ACT deviceBrand */
        deviceBrand: string;

        /** C2S_PLAYER_LOGIN_ACT deviceType */
        deviceType: string;

        /** C2S_PLAYER_LOGIN_ACT ISP */
        ISP: number;

        /** C2S_PLAYER_LOGIN_ACT platform */
        platform: number;

        /** C2S_PLAYER_LOGIN_ACT loginFlag */
        loginFlag?: (number|null);

        /** C2S_PLAYER_LOGIN_ACT distinctId */
        distinctId?: (string|null);
    }

    /** Represents a C2S_PLAYER_LOGIN_ACT. */
    class C2S_PLAYER_LOGIN_ACT implements IC2S_PLAYER_LOGIN_ACT {

        /**
         * Constructs a new C2S_PLAYER_LOGIN_ACT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_LOGIN_ACT);

        /** C2S_PLAYER_LOGIN_ACT param. */
        public param: string;

        /** C2S_PLAYER_LOGIN_ACT device. */
        public device: string;

        /** C2S_PLAYER_LOGIN_ACT deviceSys. */
        public deviceSys: string;

        /** C2S_PLAYER_LOGIN_ACT deviceBrand. */
        public deviceBrand: string;

        /** C2S_PLAYER_LOGIN_ACT deviceType. */
        public deviceType: string;

        /** C2S_PLAYER_LOGIN_ACT ISP. */
        public ISP: number;

        /** C2S_PLAYER_LOGIN_ACT platform. */
        public platform: number;

        /** C2S_PLAYER_LOGIN_ACT loginFlag. */
        public loginFlag: number;

        /** C2S_PLAYER_LOGIN_ACT distinctId. */
        public distinctId: string;

        /**
         * Encodes the specified C2S_PLAYER_LOGIN_ACT message. Does not implicitly {@link gameProto.C2S_PLAYER_LOGIN_ACT.verify|verify} messages.
         * @param message C2S_PLAYER_LOGIN_ACT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_LOGIN_ACT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_LOGIN_ACT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_LOGIN_ACT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_LOGIN_ACT;
    }

    /** Properties of a S2C_PLAYER_LOGIN_ACT. */
    interface IS2C_PLAYER_LOGIN_ACT {

        /** S2C_PLAYER_LOGIN_ACT isp */
        isp?: (number|null);

        /** S2C_PLAYER_LOGIN_ACT param */
        param?: (string|null);
    }

    /** Represents a S2C_PLAYER_LOGIN_ACT. */
    class S2C_PLAYER_LOGIN_ACT implements IS2C_PLAYER_LOGIN_ACT {

        /**
         * Constructs a new S2C_PLAYER_LOGIN_ACT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_LOGIN_ACT);

        /** S2C_PLAYER_LOGIN_ACT isp. */
        public isp: number;

        /** S2C_PLAYER_LOGIN_ACT param. */
        public param: string;

        /**
         * Encodes the specified S2C_PLAYER_LOGIN_ACT message. Does not implicitly {@link gameProto.S2C_PLAYER_LOGIN_ACT.verify|verify} messages.
         * @param message S2C_PLAYER_LOGIN_ACT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_LOGIN_ACT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_LOGIN_ACT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_LOGIN_ACT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_LOGIN_ACT;
    }

    /** Properties of a S2C_PLAYER_CREATE_NOTICE. */
    interface IS2C_PLAYER_CREATE_NOTICE {
    }

    /** Represents a S2C_PLAYER_CREATE_NOTICE. */
    class S2C_PLAYER_CREATE_NOTICE implements IS2C_PLAYER_CREATE_NOTICE {

        /**
         * Constructs a new S2C_PLAYER_CREATE_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_CREATE_NOTICE);

        /**
         * Encodes the specified S2C_PLAYER_CREATE_NOTICE message. Does not implicitly {@link gameProto.S2C_PLAYER_CREATE_NOTICE.verify|verify} messages.
         * @param message S2C_PLAYER_CREATE_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_CREATE_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_CREATE_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_CREATE_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_CREATE_NOTICE;
    }

    /** Properties of a C2S_PLAYER_CREATE. */
    interface IC2S_PLAYER_CREATE {

        /** C2S_PLAYER_CREATE nikeName */
        nikeName: string;

        /** C2S_PLAYER_CREATE head */
        head: number;

        /** C2S_PLAYER_CREATE countryId */
        countryId: number;

        /** C2S_PLAYER_CREATE gender */
        gender?: (number|null);
    }

    /** Represents a C2S_PLAYER_CREATE. */
    class C2S_PLAYER_CREATE implements IC2S_PLAYER_CREATE {

        /**
         * Constructs a new C2S_PLAYER_CREATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_CREATE);

        /** C2S_PLAYER_CREATE nikeName. */
        public nikeName: string;

        /** C2S_PLAYER_CREATE head. */
        public head: number;

        /** C2S_PLAYER_CREATE countryId. */
        public countryId: number;

        /** C2S_PLAYER_CREATE gender. */
        public gender: number;

        /**
         * Encodes the specified C2S_PLAYER_CREATE message. Does not implicitly {@link gameProto.C2S_PLAYER_CREATE.verify|verify} messages.
         * @param message C2S_PLAYER_CREATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_CREATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_CREATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_CREATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_CREATE;
    }

    /** Properties of a S2C_PLAYER_LOGIN_DATA. */
    interface IS2C_PLAYER_LOGIN_DATA {

        /** S2C_PLAYER_LOGIN_DATA playerInfo */
        playerInfo: gameProto.IPlayerInfo;

        /** S2C_PLAYER_LOGIN_DATA serverTime */
        serverTime: number;

        /** S2C_PLAYER_LOGIN_DATA openServerTime */
        openServerTime?: (number|null);
    }

    /** Represents a S2C_PLAYER_LOGIN_DATA. */
    class S2C_PLAYER_LOGIN_DATA implements IS2C_PLAYER_LOGIN_DATA {

        /**
         * Constructs a new S2C_PLAYER_LOGIN_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_LOGIN_DATA);

        /** S2C_PLAYER_LOGIN_DATA playerInfo. */
        public playerInfo: gameProto.IPlayerInfo;

        /** S2C_PLAYER_LOGIN_DATA serverTime. */
        public serverTime: number;

        /** S2C_PLAYER_LOGIN_DATA openServerTime. */
        public openServerTime: number;

        /**
         * Encodes the specified S2C_PLAYER_LOGIN_DATA message. Does not implicitly {@link gameProto.S2C_PLAYER_LOGIN_DATA.verify|verify} messages.
         * @param message S2C_PLAYER_LOGIN_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_LOGIN_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_LOGIN_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_LOGIN_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_LOGIN_DATA;
    }

    /** Properties of a C2S_PLAYER_RECOMMEND_COUNTRY. */
    interface IC2S_PLAYER_RECOMMEND_COUNTRY {
    }

    /** Represents a C2S_PLAYER_RECOMMEND_COUNTRY. */
    class C2S_PLAYER_RECOMMEND_COUNTRY implements IC2S_PLAYER_RECOMMEND_COUNTRY {

        /**
         * Constructs a new C2S_PLAYER_RECOMMEND_COUNTRY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_RECOMMEND_COUNTRY);

        /**
         * Encodes the specified C2S_PLAYER_RECOMMEND_COUNTRY message. Does not implicitly {@link gameProto.C2S_PLAYER_RECOMMEND_COUNTRY.verify|verify} messages.
         * @param message C2S_PLAYER_RECOMMEND_COUNTRY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_RECOMMEND_COUNTRY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_RECOMMEND_COUNTRY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_RECOMMEND_COUNTRY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_RECOMMEND_COUNTRY;
    }

    /** Properties of a S2C_PLAYER_RECOMMEND_COUNTRY. */
    interface IS2C_PLAYER_RECOMMEND_COUNTRY {

        /** S2C_PLAYER_RECOMMEND_COUNTRY countryId */
        countryId: number;
    }

    /** Represents a S2C_PLAYER_RECOMMEND_COUNTRY. */
    class S2C_PLAYER_RECOMMEND_COUNTRY implements IS2C_PLAYER_RECOMMEND_COUNTRY {

        /**
         * Constructs a new S2C_PLAYER_RECOMMEND_COUNTRY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_RECOMMEND_COUNTRY);

        /** S2C_PLAYER_RECOMMEND_COUNTRY countryId. */
        public countryId: number;

        /**
         * Encodes the specified S2C_PLAYER_RECOMMEND_COUNTRY message. Does not implicitly {@link gameProto.S2C_PLAYER_RECOMMEND_COUNTRY.verify|verify} messages.
         * @param message S2C_PLAYER_RECOMMEND_COUNTRY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_RECOMMEND_COUNTRY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_RECOMMEND_COUNTRY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_RECOMMEND_COUNTRY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_RECOMMEND_COUNTRY;
    }

    /** Properties of a C2S_PLAYER_RANDOM_NAME. */
    interface IC2S_PLAYER_RANDOM_NAME {

        /** C2S_PLAYER_RANDOM_NAME gender */
        gender?: (number|null);
    }

    /** Represents a C2S_PLAYER_RANDOM_NAME. */
    class C2S_PLAYER_RANDOM_NAME implements IC2S_PLAYER_RANDOM_NAME {

        /**
         * Constructs a new C2S_PLAYER_RANDOM_NAME.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_RANDOM_NAME);

        /** C2S_PLAYER_RANDOM_NAME gender. */
        public gender: number;

        /**
         * Encodes the specified C2S_PLAYER_RANDOM_NAME message. Does not implicitly {@link gameProto.C2S_PLAYER_RANDOM_NAME.verify|verify} messages.
         * @param message C2S_PLAYER_RANDOM_NAME message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_RANDOM_NAME, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_RANDOM_NAME message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_RANDOM_NAME
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_RANDOM_NAME;
    }

    /** Properties of a S2C_PLAYER_RANDOM_NAME. */
    interface IS2C_PLAYER_RANDOM_NAME {

        /** S2C_PLAYER_RANDOM_NAME nickName */
        nickName: string;
    }

    /** Represents a S2C_PLAYER_RANDOM_NAME. */
    class S2C_PLAYER_RANDOM_NAME implements IS2C_PLAYER_RANDOM_NAME {

        /**
         * Constructs a new S2C_PLAYER_RANDOM_NAME.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_RANDOM_NAME);

        /** S2C_PLAYER_RANDOM_NAME nickName. */
        public nickName: string;

        /**
         * Encodes the specified S2C_PLAYER_RANDOM_NAME message. Does not implicitly {@link gameProto.S2C_PLAYER_RANDOM_NAME.verify|verify} messages.
         * @param message S2C_PLAYER_RANDOM_NAME message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_RANDOM_NAME, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_RANDOM_NAME message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_RANDOM_NAME
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_RANDOM_NAME;
    }

    /** Properties of a C2S_DATAINIT_START. */
    interface IC2S_DATAINIT_START {
    }

    /** Represents a C2S_DATAINIT_START. */
    class C2S_DATAINIT_START implements IC2S_DATAINIT_START {

        /**
         * Constructs a new C2S_DATAINIT_START.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_DATAINIT_START);

        /**
         * Encodes the specified C2S_DATAINIT_START message. Does not implicitly {@link gameProto.C2S_DATAINIT_START.verify|verify} messages.
         * @param message C2S_DATAINIT_START message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_DATAINIT_START, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_DATAINIT_START message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_DATAINIT_START
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_DATAINIT_START;
    }

    /** Properties of a C2S_DATAINIT_END. */
    interface IC2S_DATAINIT_END {
    }

    /** Represents a C2S_DATAINIT_END. */
    class C2S_DATAINIT_END implements IC2S_DATAINIT_END {

        /**
         * Constructs a new C2S_DATAINIT_END.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_DATAINIT_END);

        /**
         * Encodes the specified C2S_DATAINIT_END message. Does not implicitly {@link gameProto.C2S_DATAINIT_END.verify|verify} messages.
         * @param message C2S_DATAINIT_END message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_DATAINIT_END, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_DATAINIT_END message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_DATAINIT_END
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_DATAINIT_END;
    }

    /** Properties of a S2C_DATAINIT_END. */
    interface IS2C_DATAINIT_END {
    }

    /** Represents a S2C_DATAINIT_END. */
    class S2C_DATAINIT_END implements IS2C_DATAINIT_END {

        /**
         * Constructs a new S2C_DATAINIT_END.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_DATAINIT_END);

        /**
         * Encodes the specified S2C_DATAINIT_END message. Does not implicitly {@link gameProto.S2C_DATAINIT_END.verify|verify} messages.
         * @param message S2C_DATAINIT_END message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_DATAINIT_END, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_DATAINIT_END message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_DATAINIT_END
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_DATAINIT_END;
    }

    /** Properties of a C2S_PLAYER_INTEGRATED_INFORMATION. */
    interface IC2S_PLAYER_INTEGRATED_INFORMATION {

        /** C2S_PLAYER_INTEGRATED_INFORMATION playerId */
        playerId: number;
    }

    /** Represents a C2S_PLAYER_INTEGRATED_INFORMATION. */
    class C2S_PLAYER_INTEGRATED_INFORMATION implements IC2S_PLAYER_INTEGRATED_INFORMATION {

        /**
         * Constructs a new C2S_PLAYER_INTEGRATED_INFORMATION.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_INTEGRATED_INFORMATION);

        /** C2S_PLAYER_INTEGRATED_INFORMATION playerId. */
        public playerId: number;

        /**
         * Encodes the specified C2S_PLAYER_INTEGRATED_INFORMATION message. Does not implicitly {@link gameProto.C2S_PLAYER_INTEGRATED_INFORMATION.verify|verify} messages.
         * @param message C2S_PLAYER_INTEGRATED_INFORMATION message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_INTEGRATED_INFORMATION, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_INTEGRATED_INFORMATION message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_INTEGRATED_INFORMATION
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_INTEGRATED_INFORMATION;
    }

    /** Properties of a S2C_PLAYER_INTEGRATED_INFORMATION. */
    interface IS2C_PLAYER_INTEGRATED_INFORMATION {

        /** S2C_PLAYER_INTEGRATED_INFORMATION headPortrait */
        headPortrait: gameProto.IHeadPortrait;

        /** S2C_PLAYER_INTEGRATED_INFORMATION fight */
        fight: number;

        /** S2C_PLAYER_INTEGRATED_INFORMATION generalWinInfo */
        generalWinInfo?: (gameProto.IGeneralWinInfo[]|null);

        /** S2C_PLAYER_INTEGRATED_INFORMATION level */
        level?: (number|null);

        /** S2C_PLAYER_INTEGRATED_INFORMATION labourUnionOfficial */
        labourUnionOfficial?: (number|null);
    }

    /** Represents a S2C_PLAYER_INTEGRATED_INFORMATION. */
    class S2C_PLAYER_INTEGRATED_INFORMATION implements IS2C_PLAYER_INTEGRATED_INFORMATION {

        /**
         * Constructs a new S2C_PLAYER_INTEGRATED_INFORMATION.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_INTEGRATED_INFORMATION);

        /** S2C_PLAYER_INTEGRATED_INFORMATION headPortrait. */
        public headPortrait: gameProto.IHeadPortrait;

        /** S2C_PLAYER_INTEGRATED_INFORMATION fight. */
        public fight: number;

        /** S2C_PLAYER_INTEGRATED_INFORMATION generalWinInfo. */
        public generalWinInfo: gameProto.IGeneralWinInfo[];

        /** S2C_PLAYER_INTEGRATED_INFORMATION level. */
        public level: number;

        /** S2C_PLAYER_INTEGRATED_INFORMATION labourUnionOfficial. */
        public labourUnionOfficial: number;

        /**
         * Encodes the specified S2C_PLAYER_INTEGRATED_INFORMATION message. Does not implicitly {@link gameProto.S2C_PLAYER_INTEGRATED_INFORMATION.verify|verify} messages.
         * @param message S2C_PLAYER_INTEGRATED_INFORMATION message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_INTEGRATED_INFORMATION, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_INTEGRATED_INFORMATION message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_INTEGRATED_INFORMATION
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_INTEGRATED_INFORMATION;
    }

    /** Properties of a C2S_PLAYER_RESET_NICKNAME. */
    interface IC2S_PLAYER_RESET_NICKNAME {

        /** C2S_PLAYER_RESET_NICKNAME nickName */
        nickName: string;
    }

    /** Represents a C2S_PLAYER_RESET_NICKNAME. */
    class C2S_PLAYER_RESET_NICKNAME implements IC2S_PLAYER_RESET_NICKNAME {

        /**
         * Constructs a new C2S_PLAYER_RESET_NICKNAME.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_RESET_NICKNAME);

        /** C2S_PLAYER_RESET_NICKNAME nickName. */
        public nickName: string;

        /**
         * Encodes the specified C2S_PLAYER_RESET_NICKNAME message. Does not implicitly {@link gameProto.C2S_PLAYER_RESET_NICKNAME.verify|verify} messages.
         * @param message C2S_PLAYER_RESET_NICKNAME message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_RESET_NICKNAME, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_RESET_NICKNAME message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_RESET_NICKNAME
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_RESET_NICKNAME;
    }

    /** Properties of a S2C_PLAYER_RESET_NICKNAME. */
    interface IS2C_PLAYER_RESET_NICKNAME {

        /** S2C_PLAYER_RESET_NICKNAME code */
        code: number;

        /** S2C_PLAYER_RESET_NICKNAME nickName */
        nickName?: (string|null);
    }

    /** Represents a S2C_PLAYER_RESET_NICKNAME. */
    class S2C_PLAYER_RESET_NICKNAME implements IS2C_PLAYER_RESET_NICKNAME {

        /**
         * Constructs a new S2C_PLAYER_RESET_NICKNAME.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_RESET_NICKNAME);

        /** S2C_PLAYER_RESET_NICKNAME code. */
        public code: number;

        /** S2C_PLAYER_RESET_NICKNAME nickName. */
        public nickName: string;

        /**
         * Encodes the specified S2C_PLAYER_RESET_NICKNAME message. Does not implicitly {@link gameProto.S2C_PLAYER_RESET_NICKNAME.verify|verify} messages.
         * @param message S2C_PLAYER_RESET_NICKNAME message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_RESET_NICKNAME, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_RESET_NICKNAME message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_RESET_NICKNAME
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_RESET_NICKNAME;
    }

    /** Properties of a C2S_PLAYER_SETTING. */
    interface IC2S_PLAYER_SETTING {

        /** C2S_PLAYER_SETTING headPic */
        headPic: number;

        /** C2S_PLAYER_SETTING headType */
        headType: number;
    }

    /** Represents a C2S_PLAYER_SETTING. */
    class C2S_PLAYER_SETTING implements IC2S_PLAYER_SETTING {

        /**
         * Constructs a new C2S_PLAYER_SETTING.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAYER_SETTING);

        /** C2S_PLAYER_SETTING headPic. */
        public headPic: number;

        /** C2S_PLAYER_SETTING headType. */
        public headType: number;

        /**
         * Encodes the specified C2S_PLAYER_SETTING message. Does not implicitly {@link gameProto.C2S_PLAYER_SETTING.verify|verify} messages.
         * @param message C2S_PLAYER_SETTING message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAYER_SETTING, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAYER_SETTING message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAYER_SETTING
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAYER_SETTING;
    }

    /** Properties of a S2C_PLAYER_SETTING. */
    interface IS2C_PLAYER_SETTING {

        /** S2C_PLAYER_SETTING code */
        code: number;

        /** S2C_PLAYER_SETTING headPic */
        headPic?: (number|null);
    }

    /** Represents a S2C_PLAYER_SETTING. */
    class S2C_PLAYER_SETTING implements IS2C_PLAYER_SETTING {

        /**
         * Constructs a new S2C_PLAYER_SETTING.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAYER_SETTING);

        /** S2C_PLAYER_SETTING code. */
        public code: number;

        /** S2C_PLAYER_SETTING headPic. */
        public headPic: number;

        /**
         * Encodes the specified S2C_PLAYER_SETTING message. Does not implicitly {@link gameProto.S2C_PLAYER_SETTING.verify|verify} messages.
         * @param message S2C_PLAYER_SETTING message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAYER_SETTING, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAYER_SETTING message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAYER_SETTING
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAYER_SETTING;
    }

    /** Properties of a PushRemoteLogin. */
    interface IPushRemoteLogin {
    }

    /** Represents a PushRemoteLogin. */
    class PushRemoteLogin implements IPushRemoteLogin {

        /**
         * Constructs a new PushRemoteLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPushRemoteLogin);

        /**
         * Encodes the specified PushRemoteLogin message. Does not implicitly {@link gameProto.PushRemoteLogin.verify|verify} messages.
         * @param message PushRemoteLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPushRemoteLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PushRemoteLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PushRemoteLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PushRemoteLogin;
    }

    /** Properties of a C2S_GET_QUCKLY_SHOP_BUY_GOODS. */
    interface IC2S_GET_QUCKLY_SHOP_BUY_GOODS {

        /** C2S_GET_QUCKLY_SHOP_BUY_GOODS goodsId */
        goodsId: number;
    }

    /** Represents a C2S_GET_QUCKLY_SHOP_BUY_GOODS. */
    class C2S_GET_QUCKLY_SHOP_BUY_GOODS implements IC2S_GET_QUCKLY_SHOP_BUY_GOODS {

        /**
         * Constructs a new C2S_GET_QUCKLY_SHOP_BUY_GOODS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_QUCKLY_SHOP_BUY_GOODS);

        /** C2S_GET_QUCKLY_SHOP_BUY_GOODS goodsId. */
        public goodsId: number;

        /**
         * Encodes the specified C2S_GET_QUCKLY_SHOP_BUY_GOODS message. Does not implicitly {@link gameProto.C2S_GET_QUCKLY_SHOP_BUY_GOODS.verify|verify} messages.
         * @param message C2S_GET_QUCKLY_SHOP_BUY_GOODS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_QUCKLY_SHOP_BUY_GOODS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_QUCKLY_SHOP_BUY_GOODS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_QUCKLY_SHOP_BUY_GOODS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_QUCKLY_SHOP_BUY_GOODS;
    }

    /** Properties of a S2C_GET_QUCKLY_SHOP_BUY_GOODS. */
    interface IS2C_GET_QUCKLY_SHOP_BUY_GOODS {

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS goodsId */
        goodsId: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS priceIndex */
        priceIndex: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS canButCount */
        canButCount: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS resultCode */
        resultCode: number;
    }

    /** Represents a S2C_GET_QUCKLY_SHOP_BUY_GOODS. */
    class S2C_GET_QUCKLY_SHOP_BUY_GOODS implements IS2C_GET_QUCKLY_SHOP_BUY_GOODS {

        /**
         * Constructs a new S2C_GET_QUCKLY_SHOP_BUY_GOODS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_QUCKLY_SHOP_BUY_GOODS);

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS goodsId. */
        public goodsId: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS priceIndex. */
        public priceIndex: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS canButCount. */
        public canButCount: number;

        /** S2C_GET_QUCKLY_SHOP_BUY_GOODS resultCode. */
        public resultCode: number;

        /**
         * Encodes the specified S2C_GET_QUCKLY_SHOP_BUY_GOODS message. Does not implicitly {@link gameProto.S2C_GET_QUCKLY_SHOP_BUY_GOODS.verify|verify} messages.
         * @param message S2C_GET_QUCKLY_SHOP_BUY_GOODS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_QUCKLY_SHOP_BUY_GOODS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_QUCKLY_SHOP_BUY_GOODS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_QUCKLY_SHOP_BUY_GOODS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_QUCKLY_SHOP_BUY_GOODS;
    }

    /** Properties of a C2S_QUCKLY_SHOP_BUY_GOODS. */
    interface IC2S_QUCKLY_SHOP_BUY_GOODS {

        /** C2S_QUCKLY_SHOP_BUY_GOODS goodsId */
        goodsId: number;

        /** C2S_QUCKLY_SHOP_BUY_GOODS num */
        num: number;
    }

    /** Represents a C2S_QUCKLY_SHOP_BUY_GOODS. */
    class C2S_QUCKLY_SHOP_BUY_GOODS implements IC2S_QUCKLY_SHOP_BUY_GOODS {

        /**
         * Constructs a new C2S_QUCKLY_SHOP_BUY_GOODS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_QUCKLY_SHOP_BUY_GOODS);

        /** C2S_QUCKLY_SHOP_BUY_GOODS goodsId. */
        public goodsId: number;

        /** C2S_QUCKLY_SHOP_BUY_GOODS num. */
        public num: number;

        /**
         * Encodes the specified C2S_QUCKLY_SHOP_BUY_GOODS message. Does not implicitly {@link gameProto.C2S_QUCKLY_SHOP_BUY_GOODS.verify|verify} messages.
         * @param message C2S_QUCKLY_SHOP_BUY_GOODS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_QUCKLY_SHOP_BUY_GOODS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_QUCKLY_SHOP_BUY_GOODS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_QUCKLY_SHOP_BUY_GOODS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_QUCKLY_SHOP_BUY_GOODS;
    }

    /** Properties of a S2C_QUCKLY_SHOP_BUY_GOODS. */
    interface IS2C_QUCKLY_SHOP_BUY_GOODS {

        /** S2C_QUCKLY_SHOP_BUY_GOODS resultCode */
        resultCode: number;
    }

    /** Represents a S2C_QUCKLY_SHOP_BUY_GOODS. */
    class S2C_QUCKLY_SHOP_BUY_GOODS implements IS2C_QUCKLY_SHOP_BUY_GOODS {

        /**
         * Constructs a new S2C_QUCKLY_SHOP_BUY_GOODS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_QUCKLY_SHOP_BUY_GOODS);

        /** S2C_QUCKLY_SHOP_BUY_GOODS resultCode. */
        public resultCode: number;

        /**
         * Encodes the specified S2C_QUCKLY_SHOP_BUY_GOODS message. Does not implicitly {@link gameProto.S2C_QUCKLY_SHOP_BUY_GOODS.verify|verify} messages.
         * @param message S2C_QUCKLY_SHOP_BUY_GOODS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_QUCKLY_SHOP_BUY_GOODS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_QUCKLY_SHOP_BUY_GOODS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_QUCKLY_SHOP_BUY_GOODS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_QUCKLY_SHOP_BUY_GOODS;
    }

    /** Properties of a HeroRank. */
    interface IHeroRank {

        /** HeroRank heroId */
        heroId: number;

        /** HeroRank heroLv */
        heroLv: number;

        /** HeroRank heroQuality */
        heroQuality: number;

        /** HeroRank heroStar */
        heroStar: number;

        /** HeroRank value */
        value: number;

        /** HeroRank rank */
        rank: number;

        /** HeroRank countryId */
        countryId: number;

        /** HeroRank playerId */
        playerId: number;

        /** HeroRank nickName */
        nickName: string;
    }

    /** Represents a HeroRank. */
    class HeroRank implements IHeroRank {

        /**
         * Constructs a new HeroRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IHeroRank);

        /** HeroRank heroId. */
        public heroId: number;

        /** HeroRank heroLv. */
        public heroLv: number;

        /** HeroRank heroQuality. */
        public heroQuality: number;

        /** HeroRank heroStar. */
        public heroStar: number;

        /** HeroRank value. */
        public value: number;

        /** HeroRank rank. */
        public rank: number;

        /** HeroRank countryId. */
        public countryId: number;

        /** HeroRank playerId. */
        public playerId: number;

        /** HeroRank nickName. */
        public nickName: string;

        /**
         * Encodes the specified HeroRank message. Does not implicitly {@link gameProto.HeroRank.verify|verify} messages.
         * @param message HeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IHeroRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a HeroRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.HeroRank;
    }

    /** Properties of a CommRank. */
    interface ICommRank {

        /** CommRank playerHead */
        playerHead: gameProto.IHeadPortrait;

        /** CommRank rank */
        rank: number;

        /** CommRank value */
        value: number;
    }

    /** Represents a CommRank. */
    class CommRank implements ICommRank {

        /**
         * Constructs a new CommRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICommRank);

        /** CommRank playerHead. */
        public playerHead: gameProto.IHeadPortrait;

        /** CommRank rank. */
        public rank: number;

        /** CommRank value. */
        public value: number;

        /**
         * Encodes the specified CommRank message. Does not implicitly {@link gameProto.CommRank.verify|verify} messages.
         * @param message CommRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICommRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CommRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CommRank;
    }

    /** Properties of a RankLegionMessage. */
    interface IRankLegionMessage {

        /** RankLegionMessage rank */
        rank: number;

        /** RankLegionMessage legionId */
        legionId?: (number|null);

        /** RankLegionMessage legionName */
        legionName?: (string|null);

        /** RankLegionMessage legionIcon */
        legionIcon?: (number|null);

        /** RankLegionMessage value */
        value?: (number|null);

        /** RankLegionMessage countryId */
        countryId: number;
    }

    /** Represents a RankLegionMessage. */
    class RankLegionMessage implements IRankLegionMessage {

        /**
         * Constructs a new RankLegionMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRankLegionMessage);

        /** RankLegionMessage rank. */
        public rank: number;

        /** RankLegionMessage legionId. */
        public legionId: number;

        /** RankLegionMessage legionName. */
        public legionName: string;

        /** RankLegionMessage legionIcon. */
        public legionIcon: number;

        /** RankLegionMessage value. */
        public value: number;

        /** RankLegionMessage countryId. */
        public countryId: number;

        /**
         * Encodes the specified RankLegionMessage message. Does not implicitly {@link gameProto.RankLegionMessage.verify|verify} messages.
         * @param message RankLegionMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRankLegionMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankLegionMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankLegionMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RankLegionMessage;
    }

    /** Properties of a RankCountryMessage. */
    interface IRankCountryMessage {

        /** RankCountryMessage countryId */
        countryId: number;

        /** RankCountryMessage citySize */
        citySize?: (number[]|null);

        /** RankCountryMessage kingHead */
        kingHead?: (gameProto.IHeadPortrait|null);
    }

    /** Represents a RankCountryMessage. */
    class RankCountryMessage implements IRankCountryMessage {

        /**
         * Constructs a new RankCountryMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRankCountryMessage);

        /** RankCountryMessage countryId. */
        public countryId: number;

        /** RankCountryMessage citySize. */
        public citySize: number[];

        /** RankCountryMessage kingHead. */
        public kingHead?: (gameProto.IHeadPortrait|null);

        /**
         * Encodes the specified RankCountryMessage message. Does not implicitly {@link gameProto.RankCountryMessage.verify|verify} messages.
         * @param message RankCountryMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRankCountryMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RankCountryMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankCountryMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RankCountryMessage;
    }

    /** Properties of a C2S_RANK_COMM. */
    interface IC2S_RANK_COMM {

        /** C2S_RANK_COMM rankId */
        rankId: number;

        /** C2S_RANK_COMM page */
        page: number;
    }

    /** Represents a C2S_RANK_COMM. */
    class C2S_RANK_COMM implements IC2S_RANK_COMM {

        /**
         * Constructs a new C2S_RANK_COMM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RANK_COMM);

        /** C2S_RANK_COMM rankId. */
        public rankId: number;

        /** C2S_RANK_COMM page. */
        public page: number;

        /**
         * Encodes the specified C2S_RANK_COMM message. Does not implicitly {@link gameProto.C2S_RANK_COMM.verify|verify} messages.
         * @param message C2S_RANK_COMM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RANK_COMM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RANK_COMM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RANK_COMM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RANK_COMM;
    }

    /** Properties of a S2C_RANK_COMM. */
    interface IS2C_RANK_COMM {

        /** S2C_RANK_COMM rankId */
        rankId: number;

        /** S2C_RANK_COMM rankData */
        rankData?: (Uint8Array[]|null);

        /** S2C_RANK_COMM page */
        page: number;

        /** S2C_RANK_COMM userRankData */
        userRankData?: (Uint8Array|null);
    }

    /** Represents a S2C_RANK_COMM. */
    class S2C_RANK_COMM implements IS2C_RANK_COMM {

        /**
         * Constructs a new S2C_RANK_COMM.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RANK_COMM);

        /** S2C_RANK_COMM rankId. */
        public rankId: number;

        /** S2C_RANK_COMM rankData. */
        public rankData: Uint8Array[];

        /** S2C_RANK_COMM page. */
        public page: number;

        /** S2C_RANK_COMM userRankData. */
        public userRankData: Uint8Array;

        /**
         * Encodes the specified S2C_RANK_COMM message. Does not implicitly {@link gameProto.S2C_RANK_COMM.verify|verify} messages.
         * @param message S2C_RANK_COMM message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RANK_COMM, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RANK_COMM message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RANK_COMM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RANK_COMM;
    }

    /** Properties of a RechargeInfo. */
    interface IRechargeInfo {

        /** RechargeInfo rechargeGold */
        rechargeGold?: (number|null);

        /** RechargeInfo rechargeMoney */
        rechargeMoney?: (number|null);

        /** RechargeInfo vipExp */
        vipExp?: (number|null);

        /** RechargeInfo vipLevel */
        vipLevel?: (number|null);

        /** RechargeInfo vipDailyReward */
        vipDailyReward?: (boolean|null);

        /** RechargeInfo receivedVipLevelReward */
        receivedVipLevelReward?: (number[]|null);
    }

    /** Represents a RechargeInfo. */
    class RechargeInfo implements IRechargeInfo {

        /**
         * Constructs a new RechargeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRechargeInfo);

        /** RechargeInfo rechargeGold. */
        public rechargeGold: number;

        /** RechargeInfo rechargeMoney. */
        public rechargeMoney: number;

        /** RechargeInfo vipExp. */
        public vipExp: number;

        /** RechargeInfo vipLevel. */
        public vipLevel: number;

        /** RechargeInfo vipDailyReward. */
        public vipDailyReward: boolean;

        /** RechargeInfo receivedVipLevelReward. */
        public receivedVipLevelReward: number[];

        /**
         * Encodes the specified RechargeInfo message. Does not implicitly {@link gameProto.RechargeInfo.verify|verify} messages.
         * @param message RechargeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRechargeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RechargeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RechargeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RechargeInfo;
    }

    /** Properties of a RechargeItemCount. */
    interface IRechargeItemCount {

        /** RechargeItemCount itemId */
        itemId?: (number|null);

        /** RechargeItemCount count */
        count?: (number|null);
    }

    /** Represents a RechargeItemCount. */
    class RechargeItemCount implements IRechargeItemCount {

        /**
         * Constructs a new RechargeItemCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRechargeItemCount);

        /** RechargeItemCount itemId. */
        public itemId: number;

        /** RechargeItemCount count. */
        public count: number;

        /**
         * Encodes the specified RechargeItemCount message. Does not implicitly {@link gameProto.RechargeItemCount.verify|verify} messages.
         * @param message RechargeItemCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRechargeItemCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RechargeItemCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RechargeItemCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RechargeItemCount;
    }

    /** Properties of a C2S_RECHARGE_INFO. */
    interface IC2S_RECHARGE_INFO {
    }

    /** Represents a C2S_RECHARGE_INFO. */
    class C2S_RECHARGE_INFO implements IC2S_RECHARGE_INFO {

        /**
         * Constructs a new C2S_RECHARGE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RECHARGE_INFO);

        /**
         * Encodes the specified C2S_RECHARGE_INFO message. Does not implicitly {@link gameProto.C2S_RECHARGE_INFO.verify|verify} messages.
         * @param message C2S_RECHARGE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RECHARGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RECHARGE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RECHARGE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RECHARGE_INFO;
    }

    /** Properties of a S2C_RECHARGE_INFO. */
    interface IS2C_RECHARGE_INFO {

        /** S2C_RECHARGE_INFO rechargeInfo */
        rechargeInfo?: (gameProto.IRechargeInfo|null);

        /** S2C_RECHARGE_INFO rechargeIds */
        rechargeIds?: (number[]|null);
    }

    /** Represents a S2C_RECHARGE_INFO. */
    class S2C_RECHARGE_INFO implements IS2C_RECHARGE_INFO {

        /**
         * Constructs a new S2C_RECHARGE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RECHARGE_INFO);

        /** S2C_RECHARGE_INFO rechargeInfo. */
        public rechargeInfo?: (gameProto.IRechargeInfo|null);

        /** S2C_RECHARGE_INFO rechargeIds. */
        public rechargeIds: number[];

        /**
         * Encodes the specified S2C_RECHARGE_INFO message. Does not implicitly {@link gameProto.S2C_RECHARGE_INFO.verify|verify} messages.
         * @param message S2C_RECHARGE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RECHARGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RECHARGE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RECHARGE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RECHARGE_INFO;
    }

    /** Properties of a C2S_RECHARGE. */
    interface IC2S_RECHARGE {

        /** C2S_RECHARGE id */
        id?: (number|null);
    }

    /** Represents a C2S_RECHARGE. */
    class C2S_RECHARGE implements IC2S_RECHARGE {

        /**
         * Constructs a new C2S_RECHARGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RECHARGE);

        /** C2S_RECHARGE id. */
        public id: number;

        /**
         * Encodes the specified C2S_RECHARGE message. Does not implicitly {@link gameProto.C2S_RECHARGE.verify|verify} messages.
         * @param message C2S_RECHARGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RECHARGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RECHARGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RECHARGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RECHARGE;
    }

    /** Properties of a C2S_JADE_BUY. */
    interface IC2S_JADE_BUY {

        /** C2S_JADE_BUY shopId */
        shopId?: (number|null);
    }

    /** Represents a C2S_JADE_BUY. */
    class C2S_JADE_BUY implements IC2S_JADE_BUY {

        /**
         * Constructs a new C2S_JADE_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_JADE_BUY);

        /** C2S_JADE_BUY shopId. */
        public shopId: number;

        /**
         * Encodes the specified C2S_JADE_BUY message. Does not implicitly {@link gameProto.C2S_JADE_BUY.verify|verify} messages.
         * @param message C2S_JADE_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_JADE_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_JADE_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_JADE_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_JADE_BUY;
    }

    /** Properties of a C2S_GOLD_BUY. */
    interface IC2S_GOLD_BUY {

        /** C2S_GOLD_BUY shopId */
        shopId?: (number|null);
    }

    /** Represents a C2S_GOLD_BUY. */
    class C2S_GOLD_BUY implements IC2S_GOLD_BUY {

        /**
         * Constructs a new C2S_GOLD_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GOLD_BUY);

        /** C2S_GOLD_BUY shopId. */
        public shopId: number;

        /**
         * Encodes the specified C2S_GOLD_BUY message. Does not implicitly {@link gameProto.C2S_GOLD_BUY.verify|verify} messages.
         * @param message C2S_GOLD_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GOLD_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GOLD_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GOLD_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GOLD_BUY;
    }

    /** Properties of a S2C_RECHARGE. */
    interface IS2C_RECHARGE {

        /** S2C_RECHARGE id */
        id?: (number|null);

        /** S2C_RECHARGE reward */
        reward?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_RECHARGE. */
    class S2C_RECHARGE implements IS2C_RECHARGE {

        /**
         * Constructs a new S2C_RECHARGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RECHARGE);

        /** S2C_RECHARGE id. */
        public id: number;

        /** S2C_RECHARGE reward. */
        public reward: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_RECHARGE message. Does not implicitly {@link gameProto.S2C_RECHARGE.verify|verify} messages.
         * @param message S2C_RECHARGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RECHARGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RECHARGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RECHARGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RECHARGE;
    }

    /** Properties of a C2S_VIP_DAILY_REWARD. */
    interface IC2S_VIP_DAILY_REWARD {
    }

    /** Represents a C2S_VIP_DAILY_REWARD. */
    class C2S_VIP_DAILY_REWARD implements IC2S_VIP_DAILY_REWARD {

        /**
         * Constructs a new C2S_VIP_DAILY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_VIP_DAILY_REWARD);

        /**
         * Encodes the specified C2S_VIP_DAILY_REWARD message. Does not implicitly {@link gameProto.C2S_VIP_DAILY_REWARD.verify|verify} messages.
         * @param message C2S_VIP_DAILY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_VIP_DAILY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_VIP_DAILY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_VIP_DAILY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_VIP_DAILY_REWARD;
    }

    /** Properties of a S2C_VIP_DAILY_REWARD. */
    interface IS2C_VIP_DAILY_REWARD {

        /** S2C_VIP_DAILY_REWARD errorCode */
        errorCode?: (number|null);

        /** S2C_VIP_DAILY_REWARD rechargeInfo */
        rechargeInfo?: (gameProto.IRechargeInfo|null);
    }

    /** Represents a S2C_VIP_DAILY_REWARD. */
    class S2C_VIP_DAILY_REWARD implements IS2C_VIP_DAILY_REWARD {

        /**
         * Constructs a new S2C_VIP_DAILY_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_VIP_DAILY_REWARD);

        /** S2C_VIP_DAILY_REWARD errorCode. */
        public errorCode: number;

        /** S2C_VIP_DAILY_REWARD rechargeInfo. */
        public rechargeInfo?: (gameProto.IRechargeInfo|null);

        /**
         * Encodes the specified S2C_VIP_DAILY_REWARD message. Does not implicitly {@link gameProto.S2C_VIP_DAILY_REWARD.verify|verify} messages.
         * @param message S2C_VIP_DAILY_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_VIP_DAILY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_VIP_DAILY_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_VIP_DAILY_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_VIP_DAILY_REWARD;
    }

    /** Properties of a C2S_VIP_LEVEL_REWARD. */
    interface IC2S_VIP_LEVEL_REWARD {

        /** C2S_VIP_LEVEL_REWARD level */
        level?: (number|null);
    }

    /** Represents a C2S_VIP_LEVEL_REWARD. */
    class C2S_VIP_LEVEL_REWARD implements IC2S_VIP_LEVEL_REWARD {

        /**
         * Constructs a new C2S_VIP_LEVEL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_VIP_LEVEL_REWARD);

        /** C2S_VIP_LEVEL_REWARD level. */
        public level: number;

        /**
         * Encodes the specified C2S_VIP_LEVEL_REWARD message. Does not implicitly {@link gameProto.C2S_VIP_LEVEL_REWARD.verify|verify} messages.
         * @param message C2S_VIP_LEVEL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_VIP_LEVEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_VIP_LEVEL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_VIP_LEVEL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_VIP_LEVEL_REWARD;
    }

    /** Properties of a S2C_VIP_LEVEL_REWARD. */
    interface IS2C_VIP_LEVEL_REWARD {

        /** S2C_VIP_LEVEL_REWARD errorCode */
        errorCode?: (number|null);

        /** S2C_VIP_LEVEL_REWARD rechargeInfo */
        rechargeInfo?: (gameProto.IRechargeInfo|null);
    }

    /** Represents a S2C_VIP_LEVEL_REWARD. */
    class S2C_VIP_LEVEL_REWARD implements IS2C_VIP_LEVEL_REWARD {

        /**
         * Constructs a new S2C_VIP_LEVEL_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_VIP_LEVEL_REWARD);

        /** S2C_VIP_LEVEL_REWARD errorCode. */
        public errorCode: number;

        /** S2C_VIP_LEVEL_REWARD rechargeInfo. */
        public rechargeInfo?: (gameProto.IRechargeInfo|null);

        /**
         * Encodes the specified S2C_VIP_LEVEL_REWARD message. Does not implicitly {@link gameProto.S2C_VIP_LEVEL_REWARD.verify|verify} messages.
         * @param message S2C_VIP_LEVEL_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_VIP_LEVEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_VIP_LEVEL_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_VIP_LEVEL_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_VIP_LEVEL_REWARD;
    }

    /** Properties of a C2S_PLAY_ORDERNO. */
    interface IC2S_PLAY_ORDERNO {

        /** C2S_PLAY_ORDERNO itemId */
        itemId: number;
    }

    /** Represents a C2S_PLAY_ORDERNO. */
    class C2S_PLAY_ORDERNO implements IC2S_PLAY_ORDERNO {

        /**
         * Constructs a new C2S_PLAY_ORDERNO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_PLAY_ORDERNO);

        /** C2S_PLAY_ORDERNO itemId. */
        public itemId: number;

        /**
         * Encodes the specified C2S_PLAY_ORDERNO message. Does not implicitly {@link gameProto.C2S_PLAY_ORDERNO.verify|verify} messages.
         * @param message C2S_PLAY_ORDERNO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_PLAY_ORDERNO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_PLAY_ORDERNO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_PLAY_ORDERNO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_PLAY_ORDERNO;
    }

    /** Properties of a S2C_PLAY_ORDERNO. */
    interface IS2C_PLAY_ORDERNO {

        /** S2C_PLAY_ORDERNO orderNo */
        orderNo: number;

        /** S2C_PLAY_ORDERNO itemId */
        itemId: number;

        /** S2C_PLAY_ORDERNO price */
        price: number;

        /** S2C_PLAY_ORDERNO name */
        name: string;
    }

    /** Represents a S2C_PLAY_ORDERNO. */
    class S2C_PLAY_ORDERNO implements IS2C_PLAY_ORDERNO {

        /**
         * Constructs a new S2C_PLAY_ORDERNO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_PLAY_ORDERNO);

        /** S2C_PLAY_ORDERNO orderNo. */
        public orderNo: number;

        /** S2C_PLAY_ORDERNO itemId. */
        public itemId: number;

        /** S2C_PLAY_ORDERNO price. */
        public price: number;

        /** S2C_PLAY_ORDERNO name. */
        public name: string;

        /**
         * Encodes the specified S2C_PLAY_ORDERNO message. Does not implicitly {@link gameProto.S2C_PLAY_ORDERNO.verify|verify} messages.
         * @param message S2C_PLAY_ORDERNO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_PLAY_ORDERNO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_PLAY_ORDERNO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_PLAY_ORDERNO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_PLAY_ORDERNO;
    }

    /** Properties of a C2S_RECHARGE_CONFIGS. */
    interface IC2S_RECHARGE_CONFIGS {

        /** C2S_RECHARGE_CONFIGS rechargeIds */
        rechargeIds?: (number[]|null);

        /** C2S_RECHARGE_CONFIGS activityId */
        activityId?: (number|null);
    }

    /** Represents a C2S_RECHARGE_CONFIGS. */
    class C2S_RECHARGE_CONFIGS implements IC2S_RECHARGE_CONFIGS {

        /**
         * Constructs a new C2S_RECHARGE_CONFIGS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RECHARGE_CONFIGS);

        /** C2S_RECHARGE_CONFIGS rechargeIds. */
        public rechargeIds: number[];

        /** C2S_RECHARGE_CONFIGS activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_RECHARGE_CONFIGS message. Does not implicitly {@link gameProto.C2S_RECHARGE_CONFIGS.verify|verify} messages.
         * @param message C2S_RECHARGE_CONFIGS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RECHARGE_CONFIGS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RECHARGE_CONFIGS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RECHARGE_CONFIGS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RECHARGE_CONFIGS;
    }

    /** Properties of a S2C_RECHARGE_CONFIGS. */
    interface IS2C_RECHARGE_CONFIGS {

        /** S2C_RECHARGE_CONFIGS rechargeConfig */
        rechargeConfig?: (gameProto.IRechargeConfig[]|null);

        /** S2C_RECHARGE_CONFIGS activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_RECHARGE_CONFIGS. */
    class S2C_RECHARGE_CONFIGS implements IS2C_RECHARGE_CONFIGS {

        /**
         * Constructs a new S2C_RECHARGE_CONFIGS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RECHARGE_CONFIGS);

        /** S2C_RECHARGE_CONFIGS rechargeConfig. */
        public rechargeConfig: gameProto.IRechargeConfig[];

        /** S2C_RECHARGE_CONFIGS activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_RECHARGE_CONFIGS message. Does not implicitly {@link gameProto.S2C_RECHARGE_CONFIGS.verify|verify} messages.
         * @param message S2C_RECHARGE_CONFIGS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RECHARGE_CONFIGS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RECHARGE_CONFIGS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RECHARGE_CONFIGS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RECHARGE_CONFIGS;
    }

    /** Properties of a C2S_RELATION_EFFECT. */
    interface IC2S_RELATION_EFFECT {

        /** C2S_RELATION_EFFECT id */
        id: number;
    }

    /** Represents a C2S_RELATION_EFFECT. */
    class C2S_RELATION_EFFECT implements IC2S_RELATION_EFFECT {

        /**
         * Constructs a new C2S_RELATION_EFFECT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RELATION_EFFECT);

        /** C2S_RELATION_EFFECT id. */
        public id: number;

        /**
         * Encodes the specified C2S_RELATION_EFFECT message. Does not implicitly {@link gameProto.C2S_RELATION_EFFECT.verify|verify} messages.
         * @param message C2S_RELATION_EFFECT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RELATION_EFFECT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RELATION_EFFECT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RELATION_EFFECT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RELATION_EFFECT;
    }

    /** Properties of a S2C_RELATION_EFFECT. */
    interface IS2C_RELATION_EFFECT {

        /** S2C_RELATION_EFFECT id */
        id: number;

        /** S2C_RELATION_EFFECT code */
        code: number;
    }

    /** Represents a S2C_RELATION_EFFECT. */
    class S2C_RELATION_EFFECT implements IS2C_RELATION_EFFECT {

        /**
         * Constructs a new S2C_RELATION_EFFECT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RELATION_EFFECT);

        /** S2C_RELATION_EFFECT id. */
        public id: number;

        /** S2C_RELATION_EFFECT code. */
        public code: number;

        /**
         * Encodes the specified S2C_RELATION_EFFECT message. Does not implicitly {@link gameProto.S2C_RELATION_EFFECT.verify|verify} messages.
         * @param message S2C_RELATION_EFFECT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RELATION_EFFECT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RELATION_EFFECT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RELATION_EFFECT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RELATION_EFFECT;
    }

    /** Properties of a C2S_RELATION_LIST. */
    interface IC2S_RELATION_LIST {
    }

    /** Represents a C2S_RELATION_LIST. */
    class C2S_RELATION_LIST implements IC2S_RELATION_LIST {

        /**
         * Constructs a new C2S_RELATION_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_RELATION_LIST);

        /**
         * Encodes the specified C2S_RELATION_LIST message. Does not implicitly {@link gameProto.C2S_RELATION_LIST.verify|verify} messages.
         * @param message C2S_RELATION_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_RELATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_RELATION_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_RELATION_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_RELATION_LIST;
    }

    /** Properties of a S2C_RELATION_LIST. */
    interface IS2C_RELATION_LIST {

        /** S2C_RELATION_LIST relationList */
        relationList?: (number[]|null);
    }

    /** Represents a S2C_RELATION_LIST. */
    class S2C_RELATION_LIST implements IS2C_RELATION_LIST {

        /**
         * Constructs a new S2C_RELATION_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_RELATION_LIST);

        /** S2C_RELATION_LIST relationList. */
        public relationList: number[];

        /**
         * Encodes the specified S2C_RELATION_LIST message. Does not implicitly {@link gameProto.S2C_RELATION_LIST.verify|verify} messages.
         * @param message S2C_RELATION_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_RELATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_RELATION_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_RELATION_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_RELATION_LIST;
    }

    /** Properties of a RechargeRewardMessage. */
    interface IRechargeRewardMessage {

        /** RechargeRewardMessage generalIds */
        generalIds?: (number[]|null);

        /** RechargeRewardMessage message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a RechargeRewardMessage. */
    class RechargeRewardMessage implements IRechargeRewardMessage {

        /**
         * Constructs a new RechargeRewardMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IRechargeRewardMessage);

        /** RechargeRewardMessage generalIds. */
        public generalIds: number[];

        /** RechargeRewardMessage message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified RechargeRewardMessage message. Does not implicitly {@link gameProto.RechargeRewardMessage.verify|verify} messages.
         * @param message RechargeRewardMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IRechargeRewardMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RechargeRewardMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RechargeRewardMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.RechargeRewardMessage;
    }

    /** Properties of a GetShopMessageReq. */
    interface IGetShopMessageReq {
    }

    /** Represents a GetShopMessageReq. */
    class GetShopMessageReq implements IGetShopMessageReq {

        /**
         * Constructs a new GetShopMessageReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetShopMessageReq);

        /**
         * Encodes the specified GetShopMessageReq message. Does not implicitly {@link gameProto.GetShopMessageReq.verify|verify} messages.
         * @param message GetShopMessageReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetShopMessageReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetShopMessageReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShopMessageReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetShopMessageReq;
    }

    /** Properties of a GetShopMessageResp. */
    interface IGetShopMessageResp {

        /** GetShopMessageResp canReceiveWeekCard */
        canReceiveWeekCard: boolean;

        /** GetShopMessageResp canReceiveMonthCard */
        canReceiveMonthCard: boolean;

        /** GetShopMessageResp weekCardDays */
        weekCardDays: number;

        /** GetShopMessageResp monthCardDays */
        monthCardDays: number;

        /** GetShopMessageResp rechargeNum */
        rechargeNum: number;

        /** GetShopMessageResp buy */
        buy: boolean;

        /** GetShopMessageResp alreadyReceive */
        alreadyReceive?: (number[]|null);

        /** GetShopMessageResp buyGiftBagTimes */
        buyGiftBagTimes: number;

        /** GetShopMessageResp nextChargeId */
        nextChargeId: number;
    }

    /** Represents a GetShopMessageResp. */
    class GetShopMessageResp implements IGetShopMessageResp {

        /**
         * Constructs a new GetShopMessageResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetShopMessageResp);

        /** GetShopMessageResp canReceiveWeekCard. */
        public canReceiveWeekCard: boolean;

        /** GetShopMessageResp canReceiveMonthCard. */
        public canReceiveMonthCard: boolean;

        /** GetShopMessageResp weekCardDays. */
        public weekCardDays: number;

        /** GetShopMessageResp monthCardDays. */
        public monthCardDays: number;

        /** GetShopMessageResp rechargeNum. */
        public rechargeNum: number;

        /** GetShopMessageResp buy. */
        public buy: boolean;

        /** GetShopMessageResp alreadyReceive. */
        public alreadyReceive: number[];

        /** GetShopMessageResp buyGiftBagTimes. */
        public buyGiftBagTimes: number;

        /** GetShopMessageResp nextChargeId. */
        public nextChargeId: number;

        /**
         * Encodes the specified GetShopMessageResp message. Does not implicitly {@link gameProto.GetShopMessageResp.verify|verify} messages.
         * @param message GetShopMessageResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetShopMessageResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetShopMessageResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShopMessageResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetShopMessageResp;
    }

    /** Properties of a GetOrderReq. */
    interface IGetOrderReq {

        /** GetOrderReq goodsId */
        goodsId: number;

        /** GetOrderReq type */
        type: number;
    }

    /** Represents a GetOrderReq. */
    class GetOrderReq implements IGetOrderReq {

        /**
         * Constructs a new GetOrderReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetOrderReq);

        /** GetOrderReq goodsId. */
        public goodsId: number;

        /** GetOrderReq type. */
        public type: number;

        /**
         * Encodes the specified GetOrderReq message. Does not implicitly {@link gameProto.GetOrderReq.verify|verify} messages.
         * @param message GetOrderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetOrderReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetOrderReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetOrderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetOrderReq;
    }

    /** Properties of a GetOrderResp. */
    interface IGetOrderResp {

        /** GetOrderResp sign */
        sign: string;
    }

    /** Represents a GetOrderResp. */
    class GetOrderResp implements IGetOrderResp {

        /**
         * Constructs a new GetOrderResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetOrderResp);

        /** GetOrderResp sign. */
        public sign: string;

        /**
         * Encodes the specified GetOrderResp message. Does not implicitly {@link gameProto.GetOrderResp.verify|verify} messages.
         * @param message GetOrderResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetOrderResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetOrderResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetOrderResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetOrderResp;
    }

    /** Properties of a BuyGoodsReq. */
    interface IBuyGoodsReq {

        /** BuyGoodsReq goodsId */
        goodsId: number;
    }

    /** Represents a BuyGoodsReq. */
    class BuyGoodsReq implements IBuyGoodsReq {

        /**
         * Constructs a new BuyGoodsReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuyGoodsReq);

        /** BuyGoodsReq goodsId. */
        public goodsId: number;

        /**
         * Encodes the specified BuyGoodsReq message. Does not implicitly {@link gameProto.BuyGoodsReq.verify|verify} messages.
         * @param message BuyGoodsReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuyGoodsReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGoodsReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGoodsReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuyGoodsReq;
    }

    /** Properties of a BuyGoodsResp. */
    interface IBuyGoodsResp {

        /** BuyGoodsResp message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a BuyGoodsResp. */
    class BuyGoodsResp implements IBuyGoodsResp {

        /**
         * Constructs a new BuyGoodsResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuyGoodsResp);

        /** BuyGoodsResp message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified BuyGoodsResp message. Does not implicitly {@link gameProto.BuyGoodsResp.verify|verify} messages.
         * @param message BuyGoodsResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuyGoodsResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGoodsResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGoodsResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuyGoodsResp;
    }

    /** Properties of a DeliveryGoodsByRMBResp. */
    interface IDeliveryGoodsByRMBResp {

        /** DeliveryGoodsByRMBResp message */
        message?: (gameProto.IValuesMessage[]|null);

        /** DeliveryGoodsByRMBResp type */
        type: number;
    }

    /** Represents a DeliveryGoodsByRMBResp. */
    class DeliveryGoodsByRMBResp implements IDeliveryGoodsByRMBResp {

        /**
         * Constructs a new DeliveryGoodsByRMBResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IDeliveryGoodsByRMBResp);

        /** DeliveryGoodsByRMBResp message. */
        public message: gameProto.IValuesMessage[];

        /** DeliveryGoodsByRMBResp type. */
        public type: number;

        /**
         * Encodes the specified DeliveryGoodsByRMBResp message. Does not implicitly {@link gameProto.DeliveryGoodsByRMBResp.verify|verify} messages.
         * @param message DeliveryGoodsByRMBResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IDeliveryGoodsByRMBResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DeliveryGoodsByRMBResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeliveryGoodsByRMBResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.DeliveryGoodsByRMBResp;
    }

    /** Properties of an AccumulativeRechargeRewardResp. */
    interface IAccumulativeRechargeRewardResp {

        /** AccumulativeRechargeRewardResp message */
        message?: (gameProto.IRechargeRewardMessage|null);
    }

    /** Represents an AccumulativeRechargeRewardResp. */
    class AccumulativeRechargeRewardResp implements IAccumulativeRechargeRewardResp {

        /**
         * Constructs a new AccumulativeRechargeRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IAccumulativeRechargeRewardResp);

        /** AccumulativeRechargeRewardResp message. */
        public message?: (gameProto.IRechargeRewardMessage|null);

        /**
         * Encodes the specified AccumulativeRechargeRewardResp message. Does not implicitly {@link gameProto.AccumulativeRechargeRewardResp.verify|verify} messages.
         * @param message AccumulativeRechargeRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IAccumulativeRechargeRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an AccumulativeRechargeRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccumulativeRechargeRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.AccumulativeRechargeRewardResp;
    }

    /** Properties of a ReceiveDayCardRewardReq. */
    interface IReceiveDayCardRewardReq {

        /** ReceiveDayCardRewardReq type */
        type: number;
    }

    /** Represents a ReceiveDayCardRewardReq. */
    class ReceiveDayCardRewardReq implements IReceiveDayCardRewardReq {

        /**
         * Constructs a new ReceiveDayCardRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveDayCardRewardReq);

        /** ReceiveDayCardRewardReq type. */
        public type: number;

        /**
         * Encodes the specified ReceiveDayCardRewardReq message. Does not implicitly {@link gameProto.ReceiveDayCardRewardReq.verify|verify} messages.
         * @param message ReceiveDayCardRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveDayCardRewardReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveDayCardRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveDayCardRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveDayCardRewardReq;
    }

    /** Properties of a ReceiveDayCardRewardResp. */
    interface IReceiveDayCardRewardResp {

        /** ReceiveDayCardRewardResp message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a ReceiveDayCardRewardResp. */
    class ReceiveDayCardRewardResp implements IReceiveDayCardRewardResp {

        /**
         * Constructs a new ReceiveDayCardRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveDayCardRewardResp);

        /** ReceiveDayCardRewardResp message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified ReceiveDayCardRewardResp message. Does not implicitly {@link gameProto.ReceiveDayCardRewardResp.verify|verify} messages.
         * @param message ReceiveDayCardRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveDayCardRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveDayCardRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveDayCardRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveDayCardRewardResp;
    }

    /** Properties of a BuyGrowFundReq. */
    interface IBuyGrowFundReq {
    }

    /** Represents a BuyGrowFundReq. */
    class BuyGrowFundReq implements IBuyGrowFundReq {

        /**
         * Constructs a new BuyGrowFundReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuyGrowFundReq);

        /**
         * Encodes the specified BuyGrowFundReq message. Does not implicitly {@link gameProto.BuyGrowFundReq.verify|verify} messages.
         * @param message BuyGrowFundReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuyGrowFundReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGrowFundReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGrowFundReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuyGrowFundReq;
    }

    /** Properties of a BuyGrowFundResp. */
    interface IBuyGrowFundResp {

        /** BuyGrowFundResp result */
        result: boolean;
    }

    /** Represents a BuyGrowFundResp. */
    class BuyGrowFundResp implements IBuyGrowFundResp {

        /**
         * Constructs a new BuyGrowFundResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IBuyGrowFundResp);

        /** BuyGrowFundResp result. */
        public result: boolean;

        /**
         * Encodes the specified BuyGrowFundResp message. Does not implicitly {@link gameProto.BuyGrowFundResp.verify|verify} messages.
         * @param message BuyGrowFundResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IBuyGrowFundResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuyGrowFundResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyGrowFundResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.BuyGrowFundResp;
    }

    /** Properties of a ReceiveGrowFundRewardReq. */
    interface IReceiveGrowFundRewardReq {

        /** ReceiveGrowFundRewardReq id */
        id: number;
    }

    /** Represents a ReceiveGrowFundRewardReq. */
    class ReceiveGrowFundRewardReq implements IReceiveGrowFundRewardReq {

        /**
         * Constructs a new ReceiveGrowFundRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveGrowFundRewardReq);

        /** ReceiveGrowFundRewardReq id. */
        public id: number;

        /**
         * Encodes the specified ReceiveGrowFundRewardReq message. Does not implicitly {@link gameProto.ReceiveGrowFundRewardReq.verify|verify} messages.
         * @param message ReceiveGrowFundRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveGrowFundRewardReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveGrowFundRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveGrowFundRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveGrowFundRewardReq;
    }

    /** Properties of a ReceiveGrowFundRewardResp. */
    interface IReceiveGrowFundRewardResp {

        /** ReceiveGrowFundRewardResp values */
        values?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a ReceiveGrowFundRewardResp. */
    class ReceiveGrowFundRewardResp implements IReceiveGrowFundRewardResp {

        /**
         * Constructs a new ReceiveGrowFundRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveGrowFundRewardResp);

        /** ReceiveGrowFundRewardResp values. */
        public values: gameProto.IValuesMessage[];

        /**
         * Encodes the specified ReceiveGrowFundRewardResp message. Does not implicitly {@link gameProto.ReceiveGrowFundRewardResp.verify|verify} messages.
         * @param message ReceiveGrowFundRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveGrowFundRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveGrowFundRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveGrowFundRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveGrowFundRewardResp;
    }

    /** Properties of a FirstRechargeRewardResp. */
    interface IFirstRechargeRewardResp {

        /** FirstRechargeRewardResp message */
        message?: (gameProto.IRechargeRewardMessage|null);
    }

    /** Represents a FirstRechargeRewardResp. */
    class FirstRechargeRewardResp implements IFirstRechargeRewardResp {

        /**
         * Constructs a new FirstRechargeRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IFirstRechargeRewardResp);

        /** FirstRechargeRewardResp message. */
        public message?: (gameProto.IRechargeRewardMessage|null);

        /**
         * Encodes the specified FirstRechargeRewardResp message. Does not implicitly {@link gameProto.FirstRechargeRewardResp.verify|verify} messages.
         * @param message FirstRechargeRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IFirstRechargeRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FirstRechargeRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FirstRechargeRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.FirstRechargeRewardResp;
    }

    /** Properties of a GetSignUpReq. */
    interface IGetSignUpReq {
    }

    /** Represents a GetSignUpReq. */
    class GetSignUpReq implements IGetSignUpReq {

        /**
         * Constructs a new GetSignUpReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetSignUpReq);

        /**
         * Encodes the specified GetSignUpReq message. Does not implicitly {@link gameProto.GetSignUpReq.verify|verify} messages.
         * @param message GetSignUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetSignUpReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetSignUpReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSignUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetSignUpReq;
    }

    /** Properties of a GetSignUpResp. */
    interface IGetSignUpResp {

        /** GetSignUpResp times */
        times: number;

        /** GetSignUpResp supplement */
        supplement: boolean;

        /** GetSignUpResp lastTime */
        lastTime: number;

        /** GetSignUpResp notReceiveExtras */
        notReceiveExtras?: (number[]|null);

        /** GetSignUpResp receiveExtras */
        receiveExtras?: (number[]|null);

        /** GetSignUpResp supplementTimes */
        supplementTimes?: (number|null);

        /** GetSignUpResp rewardStatus */
        rewardStatus?: (number|null);
    }

    /** Represents a GetSignUpResp. */
    class GetSignUpResp implements IGetSignUpResp {

        /**
         * Constructs a new GetSignUpResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetSignUpResp);

        /** GetSignUpResp times. */
        public times: number;

        /** GetSignUpResp supplement. */
        public supplement: boolean;

        /** GetSignUpResp lastTime. */
        public lastTime: number;

        /** GetSignUpResp notReceiveExtras. */
        public notReceiveExtras: number[];

        /** GetSignUpResp receiveExtras. */
        public receiveExtras: number[];

        /** GetSignUpResp supplementTimes. */
        public supplementTimes: number;

        /** GetSignUpResp rewardStatus. */
        public rewardStatus: number;

        /**
         * Encodes the specified GetSignUpResp message. Does not implicitly {@link gameProto.GetSignUpResp.verify|verify} messages.
         * @param message GetSignUpResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetSignUpResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetSignUpResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSignUpResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetSignUpResp;
    }

    /** Properties of a SignUpReq. */
    interface ISignUpReq {
    }

    /** Represents a SignUpReq. */
    class SignUpReq implements ISignUpReq {

        /**
         * Constructs a new SignUpReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISignUpReq);

        /**
         * Encodes the specified SignUpReq message. Does not implicitly {@link gameProto.SignUpReq.verify|verify} messages.
         * @param message SignUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISignUpReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SignUpReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SignUpReq;
    }

    /** Properties of a SignUpResp. */
    interface ISignUpResp {

        /** SignUpResp vaule */
        vaule?: (gameProto.IValuesMessage[]|null);

        /** SignUpResp supplement */
        supplement: boolean;
    }

    /** Represents a SignUpResp. */
    class SignUpResp implements ISignUpResp {

        /**
         * Constructs a new SignUpResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISignUpResp);

        /** SignUpResp vaule. */
        public vaule: gameProto.IValuesMessage[];

        /** SignUpResp supplement. */
        public supplement: boolean;

        /**
         * Encodes the specified SignUpResp message. Does not implicitly {@link gameProto.SignUpResp.verify|verify} messages.
         * @param message SignUpResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISignUpResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SignUpResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignUpResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SignUpResp;
    }

    /** Properties of a SupplementSignUpReq. */
    interface ISupplementSignUpReq {
    }

    /** Represents a SupplementSignUpReq. */
    class SupplementSignUpReq implements ISupplementSignUpReq {

        /**
         * Constructs a new SupplementSignUpReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISupplementSignUpReq);

        /**
         * Encodes the specified SupplementSignUpReq message. Does not implicitly {@link gameProto.SupplementSignUpReq.verify|verify} messages.
         * @param message SupplementSignUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISupplementSignUpReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SupplementSignUpReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SupplementSignUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SupplementSignUpReq;
    }

    /** Properties of a SupplementSignUpResp. */
    interface ISupplementSignUpResp {

        /** SupplementSignUpResp vaule */
        vaule?: (gameProto.IValuesMessage[]|null);

        /** SupplementSignUpResp supplement */
        supplement: boolean;

        /** SupplementSignUpResp supplementTimes */
        supplementTimes?: (number|null);
    }

    /** Represents a SupplementSignUpResp. */
    class SupplementSignUpResp implements ISupplementSignUpResp {

        /**
         * Constructs a new SupplementSignUpResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ISupplementSignUpResp);

        /** SupplementSignUpResp vaule. */
        public vaule: gameProto.IValuesMessage[];

        /** SupplementSignUpResp supplement. */
        public supplement: boolean;

        /** SupplementSignUpResp supplementTimes. */
        public supplementTimes: number;

        /**
         * Encodes the specified SupplementSignUpResp message. Does not implicitly {@link gameProto.SupplementSignUpResp.verify|verify} messages.
         * @param message SupplementSignUpResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ISupplementSignUpResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SupplementSignUpResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SupplementSignUpResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.SupplementSignUpResp;
    }

    /** Properties of a ReceiveSignUpExTraRewardReq. */
    interface IReceiveSignUpExTraRewardReq {

        /** ReceiveSignUpExTraRewardReq id */
        id: number;
    }

    /** Represents a ReceiveSignUpExTraRewardReq. */
    class ReceiveSignUpExTraRewardReq implements IReceiveSignUpExTraRewardReq {

        /**
         * Constructs a new ReceiveSignUpExTraRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveSignUpExTraRewardReq);

        /** ReceiveSignUpExTraRewardReq id. */
        public id: number;

        /**
         * Encodes the specified ReceiveSignUpExTraRewardReq message. Does not implicitly {@link gameProto.ReceiveSignUpExTraRewardReq.verify|verify} messages.
         * @param message ReceiveSignUpExTraRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveSignUpExTraRewardReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveSignUpExTraRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveSignUpExTraRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveSignUpExTraRewardReq;
    }

    /** Properties of a ReceiveSignUpExTraRewardResp. */
    interface IReceiveSignUpExTraRewardResp {

        /** ReceiveSignUpExTraRewardResp vaule */
        vaule?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a ReceiveSignUpExTraRewardResp. */
    class ReceiveSignUpExTraRewardResp implements IReceiveSignUpExTraRewardResp {

        /**
         * Constructs a new ReceiveSignUpExTraRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IReceiveSignUpExTraRewardResp);

        /** ReceiveSignUpExTraRewardResp vaule. */
        public vaule: gameProto.IValuesMessage[];

        /**
         * Encodes the specified ReceiveSignUpExTraRewardResp message. Does not implicitly {@link gameProto.ReceiveSignUpExTraRewardResp.verify|verify} messages.
         * @param message ReceiveSignUpExTraRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IReceiveSignUpExTraRewardResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReceiveSignUpExTraRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveSignUpExTraRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ReceiveSignUpExTraRewardResp;
    }

    /** Properties of a PatchCollarReq. */
    interface IPatchCollarReq {
    }

    /** Represents a PatchCollarReq. */
    class PatchCollarReq implements IPatchCollarReq {

        /**
         * Constructs a new PatchCollarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatchCollarReq);

        /**
         * Encodes the specified PatchCollarReq message. Does not implicitly {@link gameProto.PatchCollarReq.verify|verify} messages.
         * @param message PatchCollarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatchCollarReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatchCollarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatchCollarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatchCollarReq;
    }

    /** Properties of a PatchCollarResp. */
    interface IPatchCollarResp {

        /** PatchCollarResp vaule */
        vaule?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a PatchCollarResp. */
    class PatchCollarResp implements IPatchCollarResp {

        /**
         * Constructs a new PatchCollarResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPatchCollarResp);

        /** PatchCollarResp vaule. */
        public vaule: gameProto.IValuesMessage[];

        /**
         * Encodes the specified PatchCollarResp message. Does not implicitly {@link gameProto.PatchCollarResp.verify|verify} messages.
         * @param message PatchCollarResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPatchCollarResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PatchCollarResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PatchCollarResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PatchCollarResp;
    }

    /** Properties of a ShopData. */
    interface IShopData {

        /** ShopData rechargeConfigs */
        rechargeConfigs: gameProto.IRechargeConfig;

        /** ShopData buyCount */
        buyCount: number;
    }

    /** Represents a ShopData. */
    class ShopData implements IShopData {

        /**
         * Constructs a new ShopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IShopData);

        /** ShopData rechargeConfigs. */
        public rechargeConfigs: gameProto.IRechargeConfig;

        /** ShopData buyCount. */
        public buyCount: number;

        /**
         * Encodes the specified ShopData message. Does not implicitly {@link gameProto.ShopData.verify|verify} messages.
         * @param message ShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IShopData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ShopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ShopData;
    }

    /** Properties of a C2S_SURPRISE_MARKET. */
    interface IC2S_SURPRISE_MARKET {
    }

    /** Represents a C2S_SURPRISE_MARKET. */
    class C2S_SURPRISE_MARKET implements IC2S_SURPRISE_MARKET {

        /**
         * Constructs a new C2S_SURPRISE_MARKET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_SURPRISE_MARKET);

        /**
         * Encodes the specified C2S_SURPRISE_MARKET message. Does not implicitly {@link gameProto.C2S_SURPRISE_MARKET.verify|verify} messages.
         * @param message C2S_SURPRISE_MARKET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_SURPRISE_MARKET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_SURPRISE_MARKET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_SURPRISE_MARKET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_SURPRISE_MARKET;
    }

    /** Properties of a S2C_SURPRISE_MARKET. */
    interface IS2C_SURPRISE_MARKET {

        /** S2C_SURPRISE_MARKET shopdata */
        shopdata?: (gameProto.IShopData[]|null);

        /** S2C_SURPRISE_MARKET update */
        update: boolean;
    }

    /** Represents a S2C_SURPRISE_MARKET. */
    class S2C_SURPRISE_MARKET implements IS2C_SURPRISE_MARKET {

        /**
         * Constructs a new S2C_SURPRISE_MARKET.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SURPRISE_MARKET);

        /** S2C_SURPRISE_MARKET shopdata. */
        public shopdata: gameProto.IShopData[];

        /** S2C_SURPRISE_MARKET update. */
        public update: boolean;

        /**
         * Encodes the specified S2C_SURPRISE_MARKET message. Does not implicitly {@link gameProto.S2C_SURPRISE_MARKET.verify|verify} messages.
         * @param message S2C_SURPRISE_MARKET message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SURPRISE_MARKET, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SURPRISE_MARKET message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SURPRISE_MARKET
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SURPRISE_MARKET;
    }

    /** Properties of a FunCount. */
    interface IFunCount {

        /** FunCount id */
        id: number;

        /** FunCount useCount */
        useCount: number;

        /** FunCount maxCount */
        maxCount: number;

        /** FunCount buyAmountCount */
        buyAmountCount: number;

        /** FunCount maxBuyAmountCount */
        maxBuyAmountCount: number;

        /** FunCount reCount */
        reCount?: (number|null);

        /** FunCount reBuyAmountCount */
        reBuyAmountCount?: (number|null);
    }

    /** Represents a FunCount. */
    class FunCount implements IFunCount {

        /**
         * Constructs a new FunCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IFunCount);

        /** FunCount id. */
        public id: number;

        /** FunCount useCount. */
        public useCount: number;

        /** FunCount maxCount. */
        public maxCount: number;

        /** FunCount buyAmountCount. */
        public buyAmountCount: number;

        /** FunCount maxBuyAmountCount. */
        public maxBuyAmountCount: number;

        /** FunCount reCount. */
        public reCount: number;

        /** FunCount reBuyAmountCount. */
        public reBuyAmountCount: number;

        /**
         * Encodes the specified FunCount message. Does not implicitly {@link gameProto.FunCount.verify|verify} messages.
         * @param message FunCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IFunCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FunCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FunCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.FunCount;
    }

    /** Properties of a C2S_SYS_GENERAL_WIN_INFO. */
    interface IC2S_SYS_GENERAL_WIN_INFO {

        /** C2S_SYS_GENERAL_WIN_INFO npcId */
        npcId: number;
    }

    /** Represents a C2S_SYS_GENERAL_WIN_INFO. */
    class C2S_SYS_GENERAL_WIN_INFO implements IC2S_SYS_GENERAL_WIN_INFO {

        /**
         * Constructs a new C2S_SYS_GENERAL_WIN_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_SYS_GENERAL_WIN_INFO);

        /** C2S_SYS_GENERAL_WIN_INFO npcId. */
        public npcId: number;

        /**
         * Encodes the specified C2S_SYS_GENERAL_WIN_INFO message. Does not implicitly {@link gameProto.C2S_SYS_GENERAL_WIN_INFO.verify|verify} messages.
         * @param message C2S_SYS_GENERAL_WIN_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_SYS_GENERAL_WIN_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_SYS_GENERAL_WIN_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_SYS_GENERAL_WIN_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_SYS_GENERAL_WIN_INFO;
    }

    /** Properties of a S2C_SYS_GENERAL_WIN_INFO. */
    interface IS2C_SYS_GENERAL_WIN_INFO {

        /** S2C_SYS_GENERAL_WIN_INFO generalWinInfo */
        generalWinInfo?: (gameProto.IGeneralWinInfo[]|null);

        /** S2C_SYS_GENERAL_WIN_INFO npcId */
        npcId: number;
    }

    /** Represents a S2C_SYS_GENERAL_WIN_INFO. */
    class S2C_SYS_GENERAL_WIN_INFO implements IS2C_SYS_GENERAL_WIN_INFO {

        /**
         * Constructs a new S2C_SYS_GENERAL_WIN_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SYS_GENERAL_WIN_INFO);

        /** S2C_SYS_GENERAL_WIN_INFO generalWinInfo. */
        public generalWinInfo: gameProto.IGeneralWinInfo[];

        /** S2C_SYS_GENERAL_WIN_INFO npcId. */
        public npcId: number;

        /**
         * Encodes the specified S2C_SYS_GENERAL_WIN_INFO message. Does not implicitly {@link gameProto.S2C_SYS_GENERAL_WIN_INFO.verify|verify} messages.
         * @param message S2C_SYS_GENERAL_WIN_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SYS_GENERAL_WIN_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SYS_GENERAL_WIN_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SYS_GENERAL_WIN_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SYS_GENERAL_WIN_INFO;
    }

    /** Properties of a GeneralAttribute. */
    interface IGeneralAttribute {

        /** GeneralAttribute generalId */
        generalId: number;

        /** GeneralAttribute fight */
        fight: number;

        /** GeneralAttribute allAttribute */
        allAttribute?: (gameProto.IAttributeValue[]|null);

        /** GeneralAttribute soldierAttribute */
        soldierAttribute?: (gameProto.IAttributeValue[]|null);
    }

    /** Represents a GeneralAttribute. */
    class GeneralAttribute implements IGeneralAttribute {

        /**
         * Constructs a new GeneralAttribute.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGeneralAttribute);

        /** GeneralAttribute generalId. */
        public generalId: number;

        /** GeneralAttribute fight. */
        public fight: number;

        /** GeneralAttribute allAttribute. */
        public allAttribute: gameProto.IAttributeValue[];

        /** GeneralAttribute soldierAttribute. */
        public soldierAttribute: gameProto.IAttributeValue[];

        /**
         * Encodes the specified GeneralAttribute message. Does not implicitly {@link gameProto.GeneralAttribute.verify|verify} messages.
         * @param message GeneralAttribute message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGeneralAttribute, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GeneralAttribute message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GeneralAttribute;
    }

    /** Properties of a S2C_SYS_GENERAL_ATTRIBUTES_NOTICE. */
    interface IS2C_SYS_GENERAL_ATTRIBUTES_NOTICE {

        /** S2C_SYS_GENERAL_ATTRIBUTES_NOTICE generalAttribute */
        generalAttribute?: (gameProto.IGeneralAttribute[]|null);
    }

    /** Represents a S2C_SYS_GENERAL_ATTRIBUTES_NOTICE. */
    class S2C_SYS_GENERAL_ATTRIBUTES_NOTICE implements IS2C_SYS_GENERAL_ATTRIBUTES_NOTICE {

        /**
         * Constructs a new S2C_SYS_GENERAL_ATTRIBUTES_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SYS_GENERAL_ATTRIBUTES_NOTICE);

        /** S2C_SYS_GENERAL_ATTRIBUTES_NOTICE generalAttribute. */
        public generalAttribute: gameProto.IGeneralAttribute[];

        /**
         * Encodes the specified S2C_SYS_GENERAL_ATTRIBUTES_NOTICE message. Does not implicitly {@link gameProto.S2C_SYS_GENERAL_ATTRIBUTES_NOTICE.verify|verify} messages.
         * @param message S2C_SYS_GENERAL_ATTRIBUTES_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SYS_GENERAL_ATTRIBUTES_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SYS_GENERAL_ATTRIBUTES_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SYS_GENERAL_ATTRIBUTES_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SYS_GENERAL_ATTRIBUTES_NOTICE;
    }

    /** Properties of a C2S_SYS_FUNCOUNT. */
    interface IC2S_SYS_FUNCOUNT {
    }

    /** Represents a C2S_SYS_FUNCOUNT. */
    class C2S_SYS_FUNCOUNT implements IC2S_SYS_FUNCOUNT {

        /**
         * Constructs a new C2S_SYS_FUNCOUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_SYS_FUNCOUNT);

        /**
         * Encodes the specified C2S_SYS_FUNCOUNT message. Does not implicitly {@link gameProto.C2S_SYS_FUNCOUNT.verify|verify} messages.
         * @param message C2S_SYS_FUNCOUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_SYS_FUNCOUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_SYS_FUNCOUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_SYS_FUNCOUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_SYS_FUNCOUNT;
    }

    /** Properties of a S2C_SYS_FUNCOUNT. */
    interface IS2C_SYS_FUNCOUNT {

        /** S2C_SYS_FUNCOUNT funCount */
        funCount?: (gameProto.IFunCount[]|null);
    }

    /** Represents a S2C_SYS_FUNCOUNT. */
    class S2C_SYS_FUNCOUNT implements IS2C_SYS_FUNCOUNT {

        /**
         * Constructs a new S2C_SYS_FUNCOUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SYS_FUNCOUNT);

        /** S2C_SYS_FUNCOUNT funCount. */
        public funCount: gameProto.IFunCount[];

        /**
         * Encodes the specified S2C_SYS_FUNCOUNT message. Does not implicitly {@link gameProto.S2C_SYS_FUNCOUNT.verify|verify} messages.
         * @param message S2C_SYS_FUNCOUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SYS_FUNCOUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SYS_FUNCOUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SYS_FUNCOUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SYS_FUNCOUNT;
    }

    /** Properties of a TaskCondition. */
    interface ITaskCondition {

        /** TaskCondition conditionBaseId */
        conditionBaseId: number;

        /** TaskCondition count */
        count: number;

        /** TaskCondition state */
        state: number;

        /** TaskCondition maxCount */
        maxCount?: (number|null);

        /** TaskCondition order */
        order?: (number|null);
    }

    /** Represents a TaskCondition. */
    class TaskCondition implements ITaskCondition {

        /**
         * Constructs a new TaskCondition.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITaskCondition);

        /** TaskCondition conditionBaseId. */
        public conditionBaseId: number;

        /** TaskCondition count. */
        public count: number;

        /** TaskCondition state. */
        public state: number;

        /** TaskCondition maxCount. */
        public maxCount: number;

        /** TaskCondition order. */
        public order: number;

        /**
         * Encodes the specified TaskCondition message. Does not implicitly {@link gameProto.TaskCondition.verify|verify} messages.
         * @param message TaskCondition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITaskCondition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TaskCondition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TaskCondition;
    }

    /** Properties of a TaskLink. */
    interface ITaskLink {

        /** TaskLink rewardOrderType */
        rewardOrderType: number;

        /** TaskLink rewardOrderLink */
        rewardOrderLink?: (number|null);

        /** TaskLink rewardOrder */
        rewardOrder?: (number[]|null);

        /** TaskLink overOrder */
        overOrder: number;

        /** TaskLink count */
        count: number;

        /** TaskLink nextCount */
        nextCount?: (number|null);
    }

    /** Represents a TaskLink. */
    class TaskLink implements ITaskLink {

        /**
         * Constructs a new TaskLink.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITaskLink);

        /** TaskLink rewardOrderType. */
        public rewardOrderType: number;

        /** TaskLink rewardOrderLink. */
        public rewardOrderLink: number;

        /** TaskLink rewardOrder. */
        public rewardOrder: number[];

        /** TaskLink overOrder. */
        public overOrder: number;

        /** TaskLink count. */
        public count: number;

        /** TaskLink nextCount. */
        public nextCount: number;

        /**
         * Encodes the specified TaskLink message. Does not implicitly {@link gameProto.TaskLink.verify|verify} messages.
         * @param message TaskLink message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITaskLink, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TaskLink message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TaskLink;
    }

    /** Properties of a TaskData. */
    interface ITaskData {

        /** TaskData taskId */
        taskId: number;

        /** TaskData taskType */
        taskType: number;

        /** TaskData activityId */
        activityId?: (number|null);

        /** TaskData condition */
        condition?: (gameProto.ITaskCondition[]|null);

        /** TaskData taskLink */
        taskLink?: (gameProto.ITaskLink|null);
    }

    /** Represents a TaskData. */
    class TaskData implements ITaskData {

        /**
         * Constructs a new TaskData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITaskData);

        /** TaskData taskId. */
        public taskId: number;

        /** TaskData taskType. */
        public taskType: number;

        /** TaskData activityId. */
        public activityId: number;

        /** TaskData condition. */
        public condition: gameProto.ITaskCondition[];

        /** TaskData taskLink. */
        public taskLink?: (gameProto.ITaskLink|null);

        /**
         * Encodes the specified TaskData message. Does not implicitly {@link gameProto.TaskData.verify|verify} messages.
         * @param message TaskData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITaskData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TaskData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TaskData;
    }

    /** Properties of a C2S_TASK_LIST. */
    interface IC2S_TASK_LIST {
    }

    /** Represents a C2S_TASK_LIST. */
    class C2S_TASK_LIST implements IC2S_TASK_LIST {

        /**
         * Constructs a new C2S_TASK_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TASK_LIST);

        /**
         * Encodes the specified C2S_TASK_LIST message. Does not implicitly {@link gameProto.C2S_TASK_LIST.verify|verify} messages.
         * @param message C2S_TASK_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TASK_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TASK_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TASK_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TASK_LIST;
    }

    /** Properties of a S2C_TASK_LIST. */
    interface IS2C_TASK_LIST {

        /** S2C_TASK_LIST taskList */
        taskList?: (gameProto.ITaskData[]|null);
    }

    /** Represents a S2C_TASK_LIST. */
    class S2C_TASK_LIST implements IS2C_TASK_LIST {

        /**
         * Constructs a new S2C_TASK_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TASK_LIST);

        /** S2C_TASK_LIST taskList. */
        public taskList: gameProto.ITaskData[];

        /**
         * Encodes the specified S2C_TASK_LIST message. Does not implicitly {@link gameProto.S2C_TASK_LIST.verify|verify} messages.
         * @param message S2C_TASK_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TASK_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TASK_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TASK_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TASK_LIST;
    }

    /** Properties of a S2C_TASK_PROGRESS. */
    interface IS2C_TASK_PROGRESS {

        /** S2C_TASK_PROGRESS taskList */
        taskList?: (gameProto.ITaskData[]|null);
    }

    /** Represents a S2C_TASK_PROGRESS. */
    class S2C_TASK_PROGRESS implements IS2C_TASK_PROGRESS {

        /**
         * Constructs a new S2C_TASK_PROGRESS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TASK_PROGRESS);

        /** S2C_TASK_PROGRESS taskList. */
        public taskList: gameProto.ITaskData[];

        /**
         * Encodes the specified S2C_TASK_PROGRESS message. Does not implicitly {@link gameProto.S2C_TASK_PROGRESS.verify|verify} messages.
         * @param message S2C_TASK_PROGRESS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TASK_PROGRESS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TASK_PROGRESS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TASK_PROGRESS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TASK_PROGRESS;
    }

    /** Properties of a C2S_TASK_RECEIVE. */
    interface IC2S_TASK_RECEIVE {

        /** C2S_TASK_RECEIVE taskId */
        taskId: number;
    }

    /** Represents a C2S_TASK_RECEIVE. */
    class C2S_TASK_RECEIVE implements IC2S_TASK_RECEIVE {

        /**
         * Constructs a new C2S_TASK_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TASK_RECEIVE);

        /** C2S_TASK_RECEIVE taskId. */
        public taskId: number;

        /**
         * Encodes the specified C2S_TASK_RECEIVE message. Does not implicitly {@link gameProto.C2S_TASK_RECEIVE.verify|verify} messages.
         * @param message C2S_TASK_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TASK_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TASK_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TASK_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TASK_RECEIVE;
    }

    /** Properties of a S2C_TASK_RECEIVE. */
    interface IS2C_TASK_RECEIVE {

        /** S2C_TASK_RECEIVE taskData */
        taskData: gameProto.ITaskData;
    }

    /** Represents a S2C_TASK_RECEIVE. */
    class S2C_TASK_RECEIVE implements IS2C_TASK_RECEIVE {

        /**
         * Constructs a new S2C_TASK_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TASK_RECEIVE);

        /** S2C_TASK_RECEIVE taskData. */
        public taskData: gameProto.ITaskData;

        /**
         * Encodes the specified S2C_TASK_RECEIVE message. Does not implicitly {@link gameProto.S2C_TASK_RECEIVE.verify|verify} messages.
         * @param message S2C_TASK_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TASK_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TASK_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TASK_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TASK_RECEIVE;
    }

    /** Properties of a C2S_TASK_REWARD. */
    interface IC2S_TASK_REWARD {

        /** C2S_TASK_REWARD taskId */
        taskId: number;

        /** C2S_TASK_REWARD taskConditionId */
        taskConditionId: number;
    }

    /** Represents a C2S_TASK_REWARD. */
    class C2S_TASK_REWARD implements IC2S_TASK_REWARD {

        /**
         * Constructs a new C2S_TASK_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TASK_REWARD);

        /** C2S_TASK_REWARD taskId. */
        public taskId: number;

        /** C2S_TASK_REWARD taskConditionId. */
        public taskConditionId: number;

        /**
         * Encodes the specified C2S_TASK_REWARD message. Does not implicitly {@link gameProto.C2S_TASK_REWARD.verify|verify} messages.
         * @param message C2S_TASK_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TASK_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TASK_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TASK_REWARD;
    }

    /** Properties of a C2S_TASK_REWARD_MULTI. */
    interface IC2S_TASK_REWARD_MULTI {

        /** C2S_TASK_REWARD_MULTI taskConditionId */
        taskConditionId?: (number[]|null);
    }

    /** Represents a C2S_TASK_REWARD_MULTI. */
    class C2S_TASK_REWARD_MULTI implements IC2S_TASK_REWARD_MULTI {

        /**
         * Constructs a new C2S_TASK_REWARD_MULTI.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TASK_REWARD_MULTI);

        /** C2S_TASK_REWARD_MULTI taskConditionId. */
        public taskConditionId: number[];

        /**
         * Encodes the specified C2S_TASK_REWARD_MULTI message. Does not implicitly {@link gameProto.C2S_TASK_REWARD_MULTI.verify|verify} messages.
         * @param message C2S_TASK_REWARD_MULTI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TASK_REWARD_MULTI, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TASK_REWARD_MULTI message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TASK_REWARD_MULTI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TASK_REWARD_MULTI;
    }

    /** Properties of a S2C_TASK_REWARD_MULTI. */
    interface IS2C_TASK_REWARD_MULTI {

        /** S2C_TASK_REWARD_MULTI taskCondition */
        taskCondition?: (gameProto.ITaskCondition[]|null);
    }

    /** Represents a S2C_TASK_REWARD_MULTI. */
    class S2C_TASK_REWARD_MULTI implements IS2C_TASK_REWARD_MULTI {

        /**
         * Constructs a new S2C_TASK_REWARD_MULTI.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TASK_REWARD_MULTI);

        /** S2C_TASK_REWARD_MULTI taskCondition. */
        public taskCondition: gameProto.ITaskCondition[];

        /**
         * Encodes the specified S2C_TASK_REWARD_MULTI message. Does not implicitly {@link gameProto.S2C_TASK_REWARD_MULTI.verify|verify} messages.
         * @param message S2C_TASK_REWARD_MULTI message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TASK_REWARD_MULTI, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TASK_REWARD_MULTI message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TASK_REWARD_MULTI
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TASK_REWARD_MULTI;
    }

    /** Properties of a S2C_TASK_REWARD. */
    interface IS2C_TASK_REWARD {

        /** S2C_TASK_REWARD state */
        state: number;

        /** S2C_TASK_REWARD taskId */
        taskId?: (number|null);

        /** S2C_TASK_REWARD taskConditionId */
        taskConditionId?: (number|null);

        /** S2C_TASK_REWARD taskType */
        taskType?: (number|null);

        /** S2C_TASK_REWARD activityId */
        activityId?: (number|null);
    }

    /** Represents a S2C_TASK_REWARD. */
    class S2C_TASK_REWARD implements IS2C_TASK_REWARD {

        /**
         * Constructs a new S2C_TASK_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TASK_REWARD);

        /** S2C_TASK_REWARD state. */
        public state: number;

        /** S2C_TASK_REWARD taskId. */
        public taskId: number;

        /** S2C_TASK_REWARD taskConditionId. */
        public taskConditionId: number;

        /** S2C_TASK_REWARD taskType. */
        public taskType: number;

        /** S2C_TASK_REWARD activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_TASK_REWARD message. Does not implicitly {@link gameProto.S2C_TASK_REWARD.verify|verify} messages.
         * @param message S2C_TASK_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TASK_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TASK_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TASK_REWARD;
    }

    /** Properties of a Liveness. */
    interface ILiveness {

        /** Liveness id */
        id: number;

        /** Liveness state */
        state: number;
    }

    /** Represents a Liveness. */
    class Liveness implements ILiveness {

        /**
         * Constructs a new Liveness.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ILiveness);

        /** Liveness id. */
        public id: number;

        /** Liveness state. */
        public state: number;

        /**
         * Encodes the specified Liveness message. Does not implicitly {@link gameProto.Liveness.verify|verify} messages.
         * @param message Liveness message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ILiveness, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Liveness message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Liveness
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Liveness;
    }

    /** Properties of a C2S_LIVENESS_INFO. */
    interface IC2S_LIVENESS_INFO {
    }

    /** Represents a C2S_LIVENESS_INFO. */
    class C2S_LIVENESS_INFO implements IC2S_LIVENESS_INFO {

        /**
         * Constructs a new C2S_LIVENESS_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_LIVENESS_INFO);

        /**
         * Encodes the specified C2S_LIVENESS_INFO message. Does not implicitly {@link gameProto.C2S_LIVENESS_INFO.verify|verify} messages.
         * @param message C2S_LIVENESS_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_LIVENESS_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_LIVENESS_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_LIVENESS_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_LIVENESS_INFO;
    }

    /** Properties of a S2C_LIVENESS_INFO. */
    interface IS2C_LIVENESS_INFO {

        /** S2C_LIVENESS_INFO liveness */
        liveness: number;

        /** S2C_LIVENESS_INFO infos */
        infos?: (gameProto.ILiveness[]|null);
    }

    /** Represents a S2C_LIVENESS_INFO. */
    class S2C_LIVENESS_INFO implements IS2C_LIVENESS_INFO {

        /**
         * Constructs a new S2C_LIVENESS_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_LIVENESS_INFO);

        /** S2C_LIVENESS_INFO liveness. */
        public liveness: number;

        /** S2C_LIVENESS_INFO infos. */
        public infos: gameProto.ILiveness[];

        /**
         * Encodes the specified S2C_LIVENESS_INFO message. Does not implicitly {@link gameProto.S2C_LIVENESS_INFO.verify|verify} messages.
         * @param message S2C_LIVENESS_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_LIVENESS_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_LIVENESS_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_LIVENESS_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_LIVENESS_INFO;
    }

    /** Properties of a C2S_LIVENESS_RECEIVE. */
    interface IC2S_LIVENESS_RECEIVE {

        /** C2S_LIVENESS_RECEIVE id */
        id: number;
    }

    /** Represents a C2S_LIVENESS_RECEIVE. */
    class C2S_LIVENESS_RECEIVE implements IC2S_LIVENESS_RECEIVE {

        /**
         * Constructs a new C2S_LIVENESS_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_LIVENESS_RECEIVE);

        /** C2S_LIVENESS_RECEIVE id. */
        public id: number;

        /**
         * Encodes the specified C2S_LIVENESS_RECEIVE message. Does not implicitly {@link gameProto.C2S_LIVENESS_RECEIVE.verify|verify} messages.
         * @param message C2S_LIVENESS_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_LIVENESS_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_LIVENESS_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_LIVENESS_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_LIVENESS_RECEIVE;
    }

    /** Properties of a S2C_LIVENESS_RECEIVE. */
    interface IS2C_LIVENESS_RECEIVE {

        /** S2C_LIVENESS_RECEIVE state */
        state: number;

        /** S2C_LIVENESS_RECEIVE id */
        id: number;
    }

    /** Represents a S2C_LIVENESS_RECEIVE. */
    class S2C_LIVENESS_RECEIVE implements IS2C_LIVENESS_RECEIVE {

        /**
         * Constructs a new S2C_LIVENESS_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_LIVENESS_RECEIVE);

        /** S2C_LIVENESS_RECEIVE state. */
        public state: number;

        /** S2C_LIVENESS_RECEIVE id. */
        public id: number;

        /**
         * Encodes the specified S2C_LIVENESS_RECEIVE message. Does not implicitly {@link gameProto.S2C_LIVENESS_RECEIVE.verify|verify} messages.
         * @param message S2C_LIVENESS_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_LIVENESS_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_LIVENESS_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_LIVENESS_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_LIVENESS_RECEIVE;
    }

    /** Properties of a C2S_ACTIVITY_TASK_LIST. */
    interface IC2S_ACTIVITY_TASK_LIST {

        /** C2S_ACTIVITY_TASK_LIST activityId */
        activityId: number;
    }

    /** Represents a C2S_ACTIVITY_TASK_LIST. */
    class C2S_ACTIVITY_TASK_LIST implements IC2S_ACTIVITY_TASK_LIST {

        /**
         * Constructs a new C2S_ACTIVITY_TASK_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_ACTIVITY_TASK_LIST);

        /** C2S_ACTIVITY_TASK_LIST activityId. */
        public activityId: number;

        /**
         * Encodes the specified C2S_ACTIVITY_TASK_LIST message. Does not implicitly {@link gameProto.C2S_ACTIVITY_TASK_LIST.verify|verify} messages.
         * @param message C2S_ACTIVITY_TASK_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_ACTIVITY_TASK_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_ACTIVITY_TASK_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_ACTIVITY_TASK_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_ACTIVITY_TASK_LIST;
    }

    /** Properties of a S2C_ACTIVITY_TASK_LIST. */
    interface IS2C_ACTIVITY_TASK_LIST {

        /** S2C_ACTIVITY_TASK_LIST taskList */
        taskList?: (gameProto.ITaskData[]|null);

        /** S2C_ACTIVITY_TASK_LIST activityId */
        activityId: number;
    }

    /** Represents a S2C_ACTIVITY_TASK_LIST. */
    class S2C_ACTIVITY_TASK_LIST implements IS2C_ACTIVITY_TASK_LIST {

        /**
         * Constructs a new S2C_ACTIVITY_TASK_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_ACTIVITY_TASK_LIST);

        /** S2C_ACTIVITY_TASK_LIST taskList. */
        public taskList: gameProto.ITaskData[];

        /** S2C_ACTIVITY_TASK_LIST activityId. */
        public activityId: number;

        /**
         * Encodes the specified S2C_ACTIVITY_TASK_LIST message. Does not implicitly {@link gameProto.S2C_ACTIVITY_TASK_LIST.verify|verify} messages.
         * @param message S2C_ACTIVITY_TASK_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_ACTIVITY_TASK_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_ACTIVITY_TASK_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_ACTIVITY_TASK_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_ACTIVITY_TASK_LIST;
    }

    /** Properties of a TavernAttractResult. */
    interface ITavernAttractResult {

        /** TavernAttractResult type */
        type: number;

        /** TavernAttractResult code */
        code: number;

        /** TavernAttractResult value */
        value: number;
    }

    /** Represents a TavernAttractResult. */
    class TavernAttractResult implements ITavernAttractResult {

        /**
         * Constructs a new TavernAttractResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITavernAttractResult);

        /** TavernAttractResult type. */
        public type: number;

        /** TavernAttractResult code. */
        public code: number;

        /** TavernAttractResult value. */
        public value: number;

        /**
         * Encodes the specified TavernAttractResult message. Does not implicitly {@link gameProto.TavernAttractResult.verify|verify} messages.
         * @param message TavernAttractResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITavernAttractResult, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TavernAttractResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TavernAttractResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TavernAttractResult;
    }

    /** Properties of a TavernInfoReq. */
    interface ITavernInfoReq {
    }

    /** Represents a TavernInfoReq. */
    class TavernInfoReq implements ITavernInfoReq {

        /**
         * Constructs a new TavernInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITavernInfoReq);

        /**
         * Encodes the specified TavernInfoReq message. Does not implicitly {@link gameProto.TavernInfoReq.verify|verify} messages.
         * @param message TavernInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITavernInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TavernInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TavernInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TavernInfoReq;
    }

    /** Properties of a TavernInfoResp. */
    interface ITavernInfoResp {

        /** TavernInfoResp attractNum */
        attractNum?: (number|null);

        /** TavernInfoResp freeAttract */
        freeAttract?: (number|null);

        /** TavernInfoResp score */
        score: number;
    }

    /** Represents a TavernInfoResp. */
    class TavernInfoResp implements ITavernInfoResp {

        /**
         * Constructs a new TavernInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITavernInfoResp);

        /** TavernInfoResp attractNum. */
        public attractNum: number;

        /** TavernInfoResp freeAttract. */
        public freeAttract: number;

        /** TavernInfoResp score. */
        public score: number;

        /**
         * Encodes the specified TavernInfoResp message. Does not implicitly {@link gameProto.TavernInfoResp.verify|verify} messages.
         * @param message TavernInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITavernInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TavernInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TavernInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TavernInfoResp;
    }

    /** Properties of a TavernAttractReq. */
    interface ITavernAttractReq {

        /** TavernAttractReq tavernType */
        tavernType: number;
    }

    /** Represents a TavernAttractReq. */
    class TavernAttractReq implements ITavernAttractReq {

        /**
         * Constructs a new TavernAttractReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITavernAttractReq);

        /** TavernAttractReq tavernType. */
        public tavernType: number;

        /**
         * Encodes the specified TavernAttractReq message. Does not implicitly {@link gameProto.TavernAttractReq.verify|verify} messages.
         * @param message TavernAttractReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITavernAttractReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TavernAttractReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TavernAttractReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TavernAttractReq;
    }

    /** Properties of a TavernAttractResp. */
    interface ITavernAttractResp {

        /** TavernAttractResp tavernType */
        tavernType: number;

        /** TavernAttractResp result */
        result?: (gameProto.ITavernAttractResult[]|null);
    }

    /** Represents a TavernAttractResp. */
    class TavernAttractResp implements ITavernAttractResp {

        /**
         * Constructs a new TavernAttractResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITavernAttractResp);

        /** TavernAttractResp tavernType. */
        public tavernType: number;

        /** TavernAttractResp result. */
        public result: gameProto.ITavernAttractResult[];

        /**
         * Encodes the specified TavernAttractResp message. Does not implicitly {@link gameProto.TavernAttractResp.verify|verify} messages.
         * @param message TavernAttractResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITavernAttractResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TavernAttractResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TavernAttractResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TavernAttractResp;
    }

    /** Properties of a C2S_SCORE_EXCHANGE. */
    interface IC2S_SCORE_EXCHANGE {
    }

    /** Represents a C2S_SCORE_EXCHANGE. */
    class C2S_SCORE_EXCHANGE implements IC2S_SCORE_EXCHANGE {

        /**
         * Constructs a new C2S_SCORE_EXCHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_SCORE_EXCHANGE);

        /**
         * Encodes the specified C2S_SCORE_EXCHANGE message. Does not implicitly {@link gameProto.C2S_SCORE_EXCHANGE.verify|verify} messages.
         * @param message C2S_SCORE_EXCHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_SCORE_EXCHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_SCORE_EXCHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_SCORE_EXCHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_SCORE_EXCHANGE;
    }

    /** Properties of a S2C_SCORE_EXCHANGE. */
    interface IS2C_SCORE_EXCHANGE {

        /** S2C_SCORE_EXCHANGE result */
        result?: (gameProto.ITavernAttractResult[]|null);
    }

    /** Represents a S2C_SCORE_EXCHANGE. */
    class S2C_SCORE_EXCHANGE implements IS2C_SCORE_EXCHANGE {

        /**
         * Constructs a new S2C_SCORE_EXCHANGE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_SCORE_EXCHANGE);

        /** S2C_SCORE_EXCHANGE result. */
        public result: gameProto.ITavernAttractResult[];

        /**
         * Encodes the specified S2C_SCORE_EXCHANGE message. Does not implicitly {@link gameProto.S2C_SCORE_EXCHANGE.verify|verify} messages.
         * @param message S2C_SCORE_EXCHANGE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_SCORE_EXCHANGE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_SCORE_EXCHANGE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_SCORE_EXCHANGE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_SCORE_EXCHANGE;
    }

    /** Properties of a TeamGeneralData. */
    interface ITeamGeneralData {

        /** TeamGeneralData generalId */
        generalId: number;

        /** TeamGeneralData position */
        position: number;

        /** TeamGeneralData minSoldierCount */
        minSoldierCount?: (number[]|null);

        /** TeamGeneralData minSoldierTotalCount */
        minSoldierTotalCount: number;

        /** TeamGeneralData generalLevel */
        generalLevel: number;

        /** TeamGeneralData generalStar */
        generalStar: number;
    }

    /** Represents a TeamGeneralData. */
    class TeamGeneralData implements ITeamGeneralData {

        /**
         * Constructs a new TeamGeneralData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamGeneralData);

        /** TeamGeneralData generalId. */
        public generalId: number;

        /** TeamGeneralData position. */
        public position: number;

        /** TeamGeneralData minSoldierCount. */
        public minSoldierCount: number[];

        /** TeamGeneralData minSoldierTotalCount. */
        public minSoldierTotalCount: number;

        /** TeamGeneralData generalLevel. */
        public generalLevel: number;

        /** TeamGeneralData generalStar. */
        public generalStar: number;

        /**
         * Encodes the specified TeamGeneralData message. Does not implicitly {@link gameProto.TeamGeneralData.verify|verify} messages.
         * @param message TeamGeneralData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamGeneralData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamGeneralData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamGeneralData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamGeneralData;
    }

    /** Properties of a TeamData. */
    interface ITeamData {

        /** TeamData id */
        id: number;

        /** TeamData order */
        order: number;

        /** TeamData teamType */
        teamType: number;

        /** TeamData state */
        state: number;

        /** TeamData teamGeneralData */
        teamGeneralData?: (gameProto.ITeamGeneralData[]|null);

        /** TeamData cityId */
        cityId: number;

        /** TeamData autoFill */
        autoFill?: (boolean|null);
    }

    /** Represents a TeamData. */
    class TeamData implements ITeamData {

        /**
         * Constructs a new TeamData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamData);

        /** TeamData id. */
        public id: number;

        /** TeamData order. */
        public order: number;

        /** TeamData teamType. */
        public teamType: number;

        /** TeamData state. */
        public state: number;

        /** TeamData teamGeneralData. */
        public teamGeneralData: gameProto.ITeamGeneralData[];

        /** TeamData cityId. */
        public cityId: number;

        /** TeamData autoFill. */
        public autoFill: boolean;

        /**
         * Encodes the specified TeamData message. Does not implicitly {@link gameProto.TeamData.verify|verify} messages.
         * @param message TeamData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamData;
    }

    /** Properties of a C2S_TEAM_LIST. */
    interface IC2S_TEAM_LIST {

        /** C2S_TEAM_LIST teamType */
        teamType: number;

        /** C2S_TEAM_LIST targetId */
        targetId: number;
    }

    /** Represents a C2S_TEAM_LIST. */
    class C2S_TEAM_LIST implements IC2S_TEAM_LIST {

        /**
         * Constructs a new C2S_TEAM_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_LIST);

        /** C2S_TEAM_LIST teamType. */
        public teamType: number;

        /** C2S_TEAM_LIST targetId. */
        public targetId: number;

        /**
         * Encodes the specified C2S_TEAM_LIST message. Does not implicitly {@link gameProto.C2S_TEAM_LIST.verify|verify} messages.
         * @param message C2S_TEAM_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_LIST;
    }

    /** Properties of a S2C_TEAM_LIST. */
    interface IS2C_TEAM_LIST {

        /** S2C_TEAM_LIST teamList */
        teamList?: (gameProto.ITeamData[]|null);

        /** S2C_TEAM_LIST defaultTeamOrder */
        defaultTeamOrder: number;
    }

    /** Represents a S2C_TEAM_LIST. */
    class S2C_TEAM_LIST implements IS2C_TEAM_LIST {

        /**
         * Constructs a new S2C_TEAM_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_LIST);

        /** S2C_TEAM_LIST teamList. */
        public teamList: gameProto.ITeamData[];

        /** S2C_TEAM_LIST defaultTeamOrder. */
        public defaultTeamOrder: number;

        /**
         * Encodes the specified S2C_TEAM_LIST message. Does not implicitly {@link gameProto.S2C_TEAM_LIST.verify|verify} messages.
         * @param message S2C_TEAM_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_LIST;
    }

    /** Properties of a C2S_TEAM_SELECT. */
    interface IC2S_TEAM_SELECT {

        /** C2S_TEAM_SELECT order */
        order: number;
    }

    /** Represents a C2S_TEAM_SELECT. */
    class C2S_TEAM_SELECT implements IC2S_TEAM_SELECT {

        /**
         * Constructs a new C2S_TEAM_SELECT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_SELECT);

        /** C2S_TEAM_SELECT order. */
        public order: number;

        /**
         * Encodes the specified C2S_TEAM_SELECT message. Does not implicitly {@link gameProto.C2S_TEAM_SELECT.verify|verify} messages.
         * @param message C2S_TEAM_SELECT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_SELECT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_SELECT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_SELECT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_SELECT;
    }

    /** Properties of a S2C_TEAM_SELECT. */
    interface IS2C_TEAM_SELECT {

        /** S2C_TEAM_SELECT state */
        state: number;
    }

    /** Represents a S2C_TEAM_SELECT. */
    class S2C_TEAM_SELECT implements IS2C_TEAM_SELECT {

        /**
         * Constructs a new S2C_TEAM_SELECT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_SELECT);

        /** S2C_TEAM_SELECT state. */
        public state: number;

        /**
         * Encodes the specified S2C_TEAM_SELECT message. Does not implicitly {@link gameProto.S2C_TEAM_SELECT.verify|verify} messages.
         * @param message S2C_TEAM_SELECT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_SELECT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_SELECT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_SELECT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_SELECT;
    }

    /** Properties of a C2S_TEAM_COUNT. */
    interface IC2S_TEAM_COUNT {
    }

    /** Represents a C2S_TEAM_COUNT. */
    class C2S_TEAM_COUNT implements IC2S_TEAM_COUNT {

        /**
         * Constructs a new C2S_TEAM_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_COUNT);

        /**
         * Encodes the specified C2S_TEAM_COUNT message. Does not implicitly {@link gameProto.C2S_TEAM_COUNT.verify|verify} messages.
         * @param message C2S_TEAM_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_COUNT;
    }

    /** Properties of a S2C_TEAM_COUNT. */
    interface IS2C_TEAM_COUNT {

        /** S2C_TEAM_COUNT maxCount */
        maxCount: number;
    }

    /** Represents a S2C_TEAM_COUNT. */
    class S2C_TEAM_COUNT implements IS2C_TEAM_COUNT {

        /**
         * Constructs a new S2C_TEAM_COUNT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_COUNT);

        /** S2C_TEAM_COUNT maxCount. */
        public maxCount: number;

        /**
         * Encodes the specified S2C_TEAM_COUNT message. Does not implicitly {@link gameProto.S2C_TEAM_COUNT.verify|verify} messages.
         * @param message S2C_TEAM_COUNT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_COUNT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_COUNT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_COUNT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_COUNT;
    }

    /** Properties of a C2S_TEAM_UP. */
    interface IC2S_TEAM_UP {

        /** C2S_TEAM_UP teamType */
        teamType: number;

        /** C2S_TEAM_UP order */
        order: number;

        /** C2S_TEAM_UP generalId */
        generalId?: (number[]|null);
    }

    /** Represents a C2S_TEAM_UP. */
    class C2S_TEAM_UP implements IC2S_TEAM_UP {

        /**
         * Constructs a new C2S_TEAM_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_UP);

        /** C2S_TEAM_UP teamType. */
        public teamType: number;

        /** C2S_TEAM_UP order. */
        public order: number;

        /** C2S_TEAM_UP generalId. */
        public generalId: number[];

        /**
         * Encodes the specified C2S_TEAM_UP message. Does not implicitly {@link gameProto.C2S_TEAM_UP.verify|verify} messages.
         * @param message C2S_TEAM_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_UP;
    }

    /** Properties of a S2C_TEAM_UP. */
    interface IS2C_TEAM_UP {

        /** S2C_TEAM_UP state */
        state: number;
    }

    /** Represents a S2C_TEAM_UP. */
    class S2C_TEAM_UP implements IS2C_TEAM_UP {

        /**
         * Constructs a new S2C_TEAM_UP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_UP);

        /** S2C_TEAM_UP state. */
        public state: number;

        /**
         * Encodes the specified S2C_TEAM_UP message. Does not implicitly {@link gameProto.S2C_TEAM_UP.verify|verify} messages.
         * @param message S2C_TEAM_UP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_UP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_UP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_UP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_UP;
    }

    /** Properties of a C2S_TEAM_SUPPLEMENTARY_TROOPS. */
    interface IC2S_TEAM_SUPPLEMENTARY_TROOPS {

        /** C2S_TEAM_SUPPLEMENTARY_TROOPS soldierType */
        soldierType: number;

        /** C2S_TEAM_SUPPLEMENTARY_TROOPS order */
        order: number;
    }

    /** Represents a C2S_TEAM_SUPPLEMENTARY_TROOPS. */
    class C2S_TEAM_SUPPLEMENTARY_TROOPS implements IC2S_TEAM_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new C2S_TEAM_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_SUPPLEMENTARY_TROOPS);

        /** C2S_TEAM_SUPPLEMENTARY_TROOPS soldierType. */
        public soldierType: number;

        /** C2S_TEAM_SUPPLEMENTARY_TROOPS order. */
        public order: number;

        /**
         * Encodes the specified C2S_TEAM_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.C2S_TEAM_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message C2S_TEAM_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a S2C_TEAM_SUPPLEMENTARY_TROOPS. */
    interface IS2C_TEAM_SUPPLEMENTARY_TROOPS {

        /** S2C_TEAM_SUPPLEMENTARY_TROOPS state */
        state: number;
    }

    /** Represents a S2C_TEAM_SUPPLEMENTARY_TROOPS. */
    class S2C_TEAM_SUPPLEMENTARY_TROOPS implements IS2C_TEAM_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new S2C_TEAM_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_SUPPLEMENTARY_TROOPS);

        /** S2C_TEAM_SUPPLEMENTARY_TROOPS state. */
        public state: number;

        /**
         * Encodes the specified S2C_TEAM_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.S2C_TEAM_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message S2C_TEAM_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS. */
    interface IC2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS {

        /** C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS order */
        order: number;
    }

    /** Represents a C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS. */
    class C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS implements IC2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS);

        /** C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS order. */
        public order: number;

        /**
         * Encodes the specified C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_GOLD_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS. */
    interface IS2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS {

        /** S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS state */
        state: number;
    }

    /** Represents a S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS. */
    class S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS implements IS2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS {

        /**
         * Constructs a new S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS);

        /** S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS state. */
        public state: number;

        /**
         * Encodes the specified S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS message. Does not implicitly {@link gameProto.S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS.verify|verify} messages.
         * @param message S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_GOLD_SUPPLEMENTARY_TROOPS;
    }

    /** Properties of a C2S_TEAM_SET_AUTOFILL. */
    interface IC2S_TEAM_SET_AUTOFILL {

        /** C2S_TEAM_SET_AUTOFILL order */
        order?: (number|null);

        /** C2S_TEAM_SET_AUTOFILL flag */
        flag?: (boolean|null);
    }

    /** Represents a C2S_TEAM_SET_AUTOFILL. */
    class C2S_TEAM_SET_AUTOFILL implements IC2S_TEAM_SET_AUTOFILL {

        /**
         * Constructs a new C2S_TEAM_SET_AUTOFILL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAM_SET_AUTOFILL);

        /** C2S_TEAM_SET_AUTOFILL order. */
        public order: number;

        /** C2S_TEAM_SET_AUTOFILL flag. */
        public flag: boolean;

        /**
         * Encodes the specified C2S_TEAM_SET_AUTOFILL message. Does not implicitly {@link gameProto.C2S_TEAM_SET_AUTOFILL.verify|verify} messages.
         * @param message C2S_TEAM_SET_AUTOFILL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAM_SET_AUTOFILL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAM_SET_AUTOFILL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAM_SET_AUTOFILL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAM_SET_AUTOFILL;
    }

    /** Properties of a S2C_TEAM_SET_AUTOFILL. */
    interface IS2C_TEAM_SET_AUTOFILL {

        /** S2C_TEAM_SET_AUTOFILL order */
        order?: (number|null);

        /** S2C_TEAM_SET_AUTOFILL flag */
        flag?: (boolean|null);
    }

    /** Represents a S2C_TEAM_SET_AUTOFILL. */
    class S2C_TEAM_SET_AUTOFILL implements IS2C_TEAM_SET_AUTOFILL {

        /**
         * Constructs a new S2C_TEAM_SET_AUTOFILL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAM_SET_AUTOFILL);

        /** S2C_TEAM_SET_AUTOFILL order. */
        public order: number;

        /** S2C_TEAM_SET_AUTOFILL flag. */
        public flag: boolean;

        /**
         * Encodes the specified S2C_TEAM_SET_AUTOFILL message. Does not implicitly {@link gameProto.S2C_TEAM_SET_AUTOFILL.verify|verify} messages.
         * @param message S2C_TEAM_SET_AUTOFILL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAM_SET_AUTOFILL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAM_SET_AUTOFILL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAM_SET_AUTOFILL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAM_SET_AUTOFILL;
    }

    /** Properties of a Technology. */
    interface ITechnology {

        /** Technology id */
        id?: (number|null);

        /** Technology level */
        level?: (number|null);
    }

    /** Represents a Technology. */
    class Technology implements ITechnology {

        /**
         * Constructs a new Technology.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITechnology);

        /** Technology id. */
        public id: number;

        /** Technology level. */
        public level: number;

        /**
         * Encodes the specified Technology message. Does not implicitly {@link gameProto.Technology.verify|verify} messages.
         * @param message Technology message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITechnology, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a Technology message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Technology
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.Technology;
    }

    /** Properties of a TechnologyUpgradeState. */
    interface ITechnologyUpgradeState {

        /** TechnologyUpgradeState id */
        id?: (number|null);

        /** TechnologyUpgradeState start */
        start?: (number|null);

        /** TechnologyUpgradeState end */
        end?: (number|null);

        /** TechnologyUpgradeState speed */
        speed?: (number|null);
    }

    /** Represents a TechnologyUpgradeState. */
    class TechnologyUpgradeState implements ITechnologyUpgradeState {

        /**
         * Constructs a new TechnologyUpgradeState.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITechnologyUpgradeState);

        /** TechnologyUpgradeState id. */
        public id: number;

        /** TechnologyUpgradeState start. */
        public start: number;

        /** TechnologyUpgradeState end. */
        public end: number;

        /** TechnologyUpgradeState speed. */
        public speed: number;

        /**
         * Encodes the specified TechnologyUpgradeState message. Does not implicitly {@link gameProto.TechnologyUpgradeState.verify|verify} messages.
         * @param message TechnologyUpgradeState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITechnologyUpgradeState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TechnologyUpgradeState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TechnologyUpgradeState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TechnologyUpgradeState;
    }

    /** Properties of a C2S_TECHNOLOGY_VIEW. */
    interface IC2S_TECHNOLOGY_VIEW {
    }

    /** Represents a C2S_TECHNOLOGY_VIEW. */
    class C2S_TECHNOLOGY_VIEW implements IC2S_TECHNOLOGY_VIEW {

        /**
         * Constructs a new C2S_TECHNOLOGY_VIEW.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TECHNOLOGY_VIEW);

        /**
         * Encodes the specified C2S_TECHNOLOGY_VIEW message. Does not implicitly {@link gameProto.C2S_TECHNOLOGY_VIEW.verify|verify} messages.
         * @param message C2S_TECHNOLOGY_VIEW message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TECHNOLOGY_VIEW, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TECHNOLOGY_VIEW message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TECHNOLOGY_VIEW
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TECHNOLOGY_VIEW;
    }

    /** Properties of a S2C_TECHNOLOGY_VIEW. */
    interface IS2C_TECHNOLOGY_VIEW {

        /** S2C_TECHNOLOGY_VIEW technoloyList */
        technoloyList?: (gameProto.ITechnology[]|null);

        /** S2C_TECHNOLOGY_VIEW upgradeState */
        upgradeState?: (gameProto.ITechnologyUpgradeState|null);
    }

    /** Represents a S2C_TECHNOLOGY_VIEW. */
    class S2C_TECHNOLOGY_VIEW implements IS2C_TECHNOLOGY_VIEW {

        /**
         * Constructs a new S2C_TECHNOLOGY_VIEW.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TECHNOLOGY_VIEW);

        /** S2C_TECHNOLOGY_VIEW technoloyList. */
        public technoloyList: gameProto.ITechnology[];

        /** S2C_TECHNOLOGY_VIEW upgradeState. */
        public upgradeState?: (gameProto.ITechnologyUpgradeState|null);

        /**
         * Encodes the specified S2C_TECHNOLOGY_VIEW message. Does not implicitly {@link gameProto.S2C_TECHNOLOGY_VIEW.verify|verify} messages.
         * @param message S2C_TECHNOLOGY_VIEW message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TECHNOLOGY_VIEW, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TECHNOLOGY_VIEW message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TECHNOLOGY_VIEW
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TECHNOLOGY_VIEW;
    }

    /** Properties of a C2S_TECHNOLOGY_UPGRADE. */
    interface IC2S_TECHNOLOGY_UPGRADE {

        /** C2S_TECHNOLOGY_UPGRADE id */
        id?: (number|null);

        /** C2S_TECHNOLOGY_UPGRADE gold */
        gold?: (boolean|null);
    }

    /** Represents a C2S_TECHNOLOGY_UPGRADE. */
    class C2S_TECHNOLOGY_UPGRADE implements IC2S_TECHNOLOGY_UPGRADE {

        /**
         * Constructs a new C2S_TECHNOLOGY_UPGRADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TECHNOLOGY_UPGRADE);

        /** C2S_TECHNOLOGY_UPGRADE id. */
        public id: number;

        /** C2S_TECHNOLOGY_UPGRADE gold. */
        public gold: boolean;

        /**
         * Encodes the specified C2S_TECHNOLOGY_UPGRADE message. Does not implicitly {@link gameProto.C2S_TECHNOLOGY_UPGRADE.verify|verify} messages.
         * @param message C2S_TECHNOLOGY_UPGRADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TECHNOLOGY_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TECHNOLOGY_UPGRADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TECHNOLOGY_UPGRADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TECHNOLOGY_UPGRADE;
    }

    /** Properties of a S2C_TECHNOLOGY_UPGRADE. */
    interface IS2C_TECHNOLOGY_UPGRADE {

        /** S2C_TECHNOLOGY_UPGRADE errorCode */
        errorCode?: (number|null);

        /** S2C_TECHNOLOGY_UPGRADE gold */
        gold?: (boolean|null);

        /** S2C_TECHNOLOGY_UPGRADE upgradeState */
        upgradeState?: (gameProto.ITechnologyUpgradeState|null);

        /** S2C_TECHNOLOGY_UPGRADE technology */
        technology?: (gameProto.ITechnology|null);
    }

    /** Represents a S2C_TECHNOLOGY_UPGRADE. */
    class S2C_TECHNOLOGY_UPGRADE implements IS2C_TECHNOLOGY_UPGRADE {

        /**
         * Constructs a new S2C_TECHNOLOGY_UPGRADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TECHNOLOGY_UPGRADE);

        /** S2C_TECHNOLOGY_UPGRADE errorCode. */
        public errorCode: number;

        /** S2C_TECHNOLOGY_UPGRADE gold. */
        public gold: boolean;

        /** S2C_TECHNOLOGY_UPGRADE upgradeState. */
        public upgradeState?: (gameProto.ITechnologyUpgradeState|null);

        /** S2C_TECHNOLOGY_UPGRADE technology. */
        public technology?: (gameProto.ITechnology|null);

        /**
         * Encodes the specified S2C_TECHNOLOGY_UPGRADE message. Does not implicitly {@link gameProto.S2C_TECHNOLOGY_UPGRADE.verify|verify} messages.
         * @param message S2C_TECHNOLOGY_UPGRADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TECHNOLOGY_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TECHNOLOGY_UPGRADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TECHNOLOGY_UPGRADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TECHNOLOGY_UPGRADE;
    }

    /** Properties of a C2S_TECHNOLOGY_INFO. */
    interface IC2S_TECHNOLOGY_INFO {

        /** C2S_TECHNOLOGY_INFO id */
        id?: (number|null);
    }

    /** Represents a C2S_TECHNOLOGY_INFO. */
    class C2S_TECHNOLOGY_INFO implements IC2S_TECHNOLOGY_INFO {

        /**
         * Constructs a new C2S_TECHNOLOGY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TECHNOLOGY_INFO);

        /** C2S_TECHNOLOGY_INFO id. */
        public id: number;

        /**
         * Encodes the specified C2S_TECHNOLOGY_INFO message. Does not implicitly {@link gameProto.C2S_TECHNOLOGY_INFO.verify|verify} messages.
         * @param message C2S_TECHNOLOGY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TECHNOLOGY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TECHNOLOGY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TECHNOLOGY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TECHNOLOGY_INFO;
    }

    /** Properties of a S2C_TECHNOLOGY_INFO. */
    interface IS2C_TECHNOLOGY_INFO {

        /** S2C_TECHNOLOGY_INFO technology */
        technology?: (gameProto.ITechnology|null);
    }

    /** Represents a S2C_TECHNOLOGY_INFO. */
    class S2C_TECHNOLOGY_INFO implements IS2C_TECHNOLOGY_INFO {

        /**
         * Constructs a new S2C_TECHNOLOGY_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TECHNOLOGY_INFO);

        /** S2C_TECHNOLOGY_INFO technology. */
        public technology?: (gameProto.ITechnology|null);

        /**
         * Encodes the specified S2C_TECHNOLOGY_INFO message. Does not implicitly {@link gameProto.S2C_TECHNOLOGY_INFO.verify|verify} messages.
         * @param message S2C_TECHNOLOGY_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TECHNOLOGY_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TECHNOLOGY_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TECHNOLOGY_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TECHNOLOGY_INFO;
    }

    /** Properties of a C2S_TECHNOLOGY_SPEEDUP. */
    interface IC2S_TECHNOLOGY_SPEEDUP {

        /** C2S_TECHNOLOGY_SPEEDUP id */
        id?: (number|null);

        /** C2S_TECHNOLOGY_SPEEDUP itemId */
        itemId?: (number|null);

        /** C2S_TECHNOLOGY_SPEEDUP num */
        num?: (number|null);
    }

    /** Represents a C2S_TECHNOLOGY_SPEEDUP. */
    class C2S_TECHNOLOGY_SPEEDUP implements IC2S_TECHNOLOGY_SPEEDUP {

        /**
         * Constructs a new C2S_TECHNOLOGY_SPEEDUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TECHNOLOGY_SPEEDUP);

        /** C2S_TECHNOLOGY_SPEEDUP id. */
        public id: number;

        /** C2S_TECHNOLOGY_SPEEDUP itemId. */
        public itemId: number;

        /** C2S_TECHNOLOGY_SPEEDUP num. */
        public num: number;

        /**
         * Encodes the specified C2S_TECHNOLOGY_SPEEDUP message. Does not implicitly {@link gameProto.C2S_TECHNOLOGY_SPEEDUP.verify|verify} messages.
         * @param message C2S_TECHNOLOGY_SPEEDUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TECHNOLOGY_SPEEDUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TECHNOLOGY_SPEEDUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TECHNOLOGY_SPEEDUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TECHNOLOGY_SPEEDUP;
    }

    /** Properties of a S2C_TECHNOLOGY_SPEEDUP. */
    interface IS2C_TECHNOLOGY_SPEEDUP {

        /** S2C_TECHNOLOGY_SPEEDUP errorCode */
        errorCode?: (number|null);

        /** S2C_TECHNOLOGY_SPEEDUP state */
        state?: (gameProto.ITechnologyUpgradeState|null);
    }

    /** Represents a S2C_TECHNOLOGY_SPEEDUP. */
    class S2C_TECHNOLOGY_SPEEDUP implements IS2C_TECHNOLOGY_SPEEDUP {

        /**
         * Constructs a new S2C_TECHNOLOGY_SPEEDUP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TECHNOLOGY_SPEEDUP);

        /** S2C_TECHNOLOGY_SPEEDUP errorCode. */
        public errorCode: number;

        /** S2C_TECHNOLOGY_SPEEDUP state. */
        public state?: (gameProto.ITechnologyUpgradeState|null);

        /**
         * Encodes the specified S2C_TECHNOLOGY_SPEEDUP message. Does not implicitly {@link gameProto.S2C_TECHNOLOGY_SPEEDUP.verify|verify} messages.
         * @param message S2C_TECHNOLOGY_SPEEDUP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TECHNOLOGY_SPEEDUP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TECHNOLOGY_SPEEDUP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TECHNOLOGY_SPEEDUP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TECHNOLOGY_SPEEDUP;
    }

    /** Properties of a TreasureMessageInfo. */
    interface ITreasureMessageInfo {

        /** TreasureMessageInfo itemId */
        itemId?: (number|null);

        /** TreasureMessageInfo mainAttribute */
        mainAttribute?: (string|null);

        /** TreasureMessageInfo skillInfos */
        skillInfos?: (gameProto.ITreasureSkillInfo[]|null);

        /** TreasureMessageInfo quality */
        quality?: (number|null);

        /** TreasureMessageInfo level */
        level?: (number|null);

        /** TreasureMessageInfo generalId */
        generalId?: (number|null);

        /** TreasureMessageInfo star */
        star?: (number|null);

        /** TreasureMessageInfo holes */
        holes?: (gameProto.ITreasureHoleInfo[]|null);

        /** TreasureMessageInfo suitId */
        suitId?: (number|null);

        /** TreasureMessageInfo allAttribute */
        allAttribute?: (string|null);

        /** TreasureMessageInfo secondAttrId */
        secondAttrId?: (number[]|null);
    }

    /** Represents a TreasureMessageInfo. */
    class TreasureMessageInfo implements ITreasureMessageInfo {

        /**
         * Constructs a new TreasureMessageInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureMessageInfo);

        /** TreasureMessageInfo itemId. */
        public itemId: number;

        /** TreasureMessageInfo mainAttribute. */
        public mainAttribute: string;

        /** TreasureMessageInfo skillInfos. */
        public skillInfos: gameProto.ITreasureSkillInfo[];

        /** TreasureMessageInfo quality. */
        public quality: number;

        /** TreasureMessageInfo level. */
        public level: number;

        /** TreasureMessageInfo generalId. */
        public generalId: number;

        /** TreasureMessageInfo star. */
        public star: number;

        /** TreasureMessageInfo holes. */
        public holes: gameProto.ITreasureHoleInfo[];

        /** TreasureMessageInfo suitId. */
        public suitId: number;

        /** TreasureMessageInfo allAttribute. */
        public allAttribute: string;

        /** TreasureMessageInfo secondAttrId. */
        public secondAttrId: number[];

        /**
         * Encodes the specified TreasureMessageInfo message. Does not implicitly {@link gameProto.TreasureMessageInfo.verify|verify} messages.
         * @param message TreasureMessageInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureMessageInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureMessageInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureMessageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureMessageInfo;
    }

    /** Properties of a TreasureSkillInfo. */
    interface ITreasureSkillInfo {

        /** TreasureSkillInfo skillId */
        skillId?: (number|null);

        /** TreasureSkillInfo level */
        level?: (number|null);
    }

    /** Represents a TreasureSkillInfo. */
    class TreasureSkillInfo implements ITreasureSkillInfo {

        /**
         * Constructs a new TreasureSkillInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureSkillInfo);

        /** TreasureSkillInfo skillId. */
        public skillId: number;

        /** TreasureSkillInfo level. */
        public level: number;

        /**
         * Encodes the specified TreasureSkillInfo message. Does not implicitly {@link gameProto.TreasureSkillInfo.verify|verify} messages.
         * @param message TreasureSkillInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureSkillInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureSkillInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureSkillInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureSkillInfo;
    }

    /** Properties of a TreasureHoleInfo. */
    interface ITreasureHoleInfo {

        /** TreasureHoleInfo pos */
        pos: number;

        /** TreasureHoleInfo gemstoneId */
        gemstoneId: number;
    }

    /** Represents a TreasureHoleInfo. */
    class TreasureHoleInfo implements ITreasureHoleInfo {

        /**
         * Constructs a new TreasureHoleInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureHoleInfo);

        /** TreasureHoleInfo pos. */
        public pos: number;

        /** TreasureHoleInfo gemstoneId. */
        public gemstoneId: number;

        /**
         * Encodes the specified TreasureHoleInfo message. Does not implicitly {@link gameProto.TreasureHoleInfo.verify|verify} messages.
         * @param message TreasureHoleInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureHoleInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureHoleInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureHoleInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureHoleInfo;
    }

    /** Properties of a GetTreasureMessageInfoReq. */
    interface IGetTreasureMessageInfoReq {
    }

    /** Represents a GetTreasureMessageInfoReq. */
    class GetTreasureMessageInfoReq implements IGetTreasureMessageInfoReq {

        /**
         * Constructs a new GetTreasureMessageInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetTreasureMessageInfoReq);

        /**
         * Encodes the specified GetTreasureMessageInfoReq message. Does not implicitly {@link gameProto.GetTreasureMessageInfoReq.verify|verify} messages.
         * @param message GetTreasureMessageInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetTreasureMessageInfoReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetTreasureMessageInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTreasureMessageInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetTreasureMessageInfoReq;
    }

    /** Properties of a GetTreasureMessageInfoResp. */
    interface IGetTreasureMessageInfoResp {

        /** GetTreasureMessageInfoResp infos */
        infos?: (gameProto.ITreasureMessageInfo[]|null);
    }

    /** Represents a GetTreasureMessageInfoResp. */
    class GetTreasureMessageInfoResp implements IGetTreasureMessageInfoResp {

        /**
         * Constructs a new GetTreasureMessageInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGetTreasureMessageInfoResp);

        /** GetTreasureMessageInfoResp infos. */
        public infos: gameProto.ITreasureMessageInfo[];

        /**
         * Encodes the specified GetTreasureMessageInfoResp message. Does not implicitly {@link gameProto.GetTreasureMessageInfoResp.verify|verify} messages.
         * @param message GetTreasureMessageInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGetTreasureMessageInfoResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GetTreasureMessageInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTreasureMessageInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GetTreasureMessageInfoResp;
    }

    /** Properties of a TreasureUpgradeReq. */
    interface ITreasureUpgradeReq {

        /** TreasureUpgradeReq itemId */
        itemId: number;
    }

    /** Represents a TreasureUpgradeReq. */
    class TreasureUpgradeReq implements ITreasureUpgradeReq {

        /**
         * Constructs a new TreasureUpgradeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureUpgradeReq);

        /** TreasureUpgradeReq itemId. */
        public itemId: number;

        /**
         * Encodes the specified TreasureUpgradeReq message. Does not implicitly {@link gameProto.TreasureUpgradeReq.verify|verify} messages.
         * @param message TreasureUpgradeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureUpgradeReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureUpgradeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureUpgradeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureUpgradeReq;
    }

    /** Properties of a TreasureUpgradeResp. */
    interface ITreasureUpgradeResp {

        /** TreasureUpgradeResp info */
        info: gameProto.ITreasureMessageInfo;

        /** TreasureUpgradeResp success */
        success: boolean;

        /** TreasureUpgradeResp critSuccess */
        critSuccess: boolean;

        /** TreasureUpgradeResp level */
        level: number;
    }

    /** Represents a TreasureUpgradeResp. */
    class TreasureUpgradeResp implements ITreasureUpgradeResp {

        /**
         * Constructs a new TreasureUpgradeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureUpgradeResp);

        /** TreasureUpgradeResp info. */
        public info: gameProto.ITreasureMessageInfo;

        /** TreasureUpgradeResp success. */
        public success: boolean;

        /** TreasureUpgradeResp critSuccess. */
        public critSuccess: boolean;

        /** TreasureUpgradeResp level. */
        public level: number;

        /**
         * Encodes the specified TreasureUpgradeResp message. Does not implicitly {@link gameProto.TreasureUpgradeResp.verify|verify} messages.
         * @param message TreasureUpgradeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureUpgradeResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureUpgradeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureUpgradeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureUpgradeResp;
    }

    /** Properties of a TreasureUpgradeStarReq. */
    interface ITreasureUpgradeStarReq {

        /** TreasureUpgradeStarReq itemId */
        itemId: number;
    }

    /** Represents a TreasureUpgradeStarReq. */
    class TreasureUpgradeStarReq implements ITreasureUpgradeStarReq {

        /**
         * Constructs a new TreasureUpgradeStarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureUpgradeStarReq);

        /** TreasureUpgradeStarReq itemId. */
        public itemId: number;

        /**
         * Encodes the specified TreasureUpgradeStarReq message. Does not implicitly {@link gameProto.TreasureUpgradeStarReq.verify|verify} messages.
         * @param message TreasureUpgradeStarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureUpgradeStarReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureUpgradeStarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureUpgradeStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureUpgradeStarReq;
    }

    /** Properties of a TreasureUpgradeStarResp. */
    interface ITreasureUpgradeStarResp {

        /** TreasureUpgradeStarResp info */
        info: gameProto.ITreasureMessageInfo;
    }

    /** Represents a TreasureUpgradeStarResp. */
    class TreasureUpgradeStarResp implements ITreasureUpgradeStarResp {

        /**
         * Constructs a new TreasureUpgradeStarResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureUpgradeStarResp);

        /** TreasureUpgradeStarResp info. */
        public info: gameProto.ITreasureMessageInfo;

        /**
         * Encodes the specified TreasureUpgradeStarResp message. Does not implicitly {@link gameProto.TreasureUpgradeStarResp.verify|verify} messages.
         * @param message TreasureUpgradeStarResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureUpgradeStarResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureUpgradeStarResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureUpgradeStarResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureUpgradeStarResp;
    }

    /** Properties of a TreasureAssemblingGemstoneReq. */
    interface ITreasureAssemblingGemstoneReq {

        /** TreasureAssemblingGemstoneReq itemId */
        itemId: number;

        /** TreasureAssemblingGemstoneReq pos */
        pos: number;

        /** TreasureAssemblingGemstoneReq gemstoneId */
        gemstoneId?: (number|null);
    }

    /** Represents a TreasureAssemblingGemstoneReq. */
    class TreasureAssemblingGemstoneReq implements ITreasureAssemblingGemstoneReq {

        /**
         * Constructs a new TreasureAssemblingGemstoneReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureAssemblingGemstoneReq);

        /** TreasureAssemblingGemstoneReq itemId. */
        public itemId: number;

        /** TreasureAssemblingGemstoneReq pos. */
        public pos: number;

        /** TreasureAssemblingGemstoneReq gemstoneId. */
        public gemstoneId: number;

        /**
         * Encodes the specified TreasureAssemblingGemstoneReq message. Does not implicitly {@link gameProto.TreasureAssemblingGemstoneReq.verify|verify} messages.
         * @param message TreasureAssemblingGemstoneReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureAssemblingGemstoneReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureAssemblingGemstoneReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureAssemblingGemstoneReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureAssemblingGemstoneReq;
    }

    /** Properties of a TreasureAssemblingGemstoneResp. */
    interface ITreasureAssemblingGemstoneResp {

        /** TreasureAssemblingGemstoneResp info */
        info: gameProto.ITreasureMessageInfo;
    }

    /** Represents a TreasureAssemblingGemstoneResp. */
    class TreasureAssemblingGemstoneResp implements ITreasureAssemblingGemstoneResp {

        /**
         * Constructs a new TreasureAssemblingGemstoneResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureAssemblingGemstoneResp);

        /** TreasureAssemblingGemstoneResp info. */
        public info: gameProto.ITreasureMessageInfo;

        /**
         * Encodes the specified TreasureAssemblingGemstoneResp message. Does not implicitly {@link gameProto.TreasureAssemblingGemstoneResp.verify|verify} messages.
         * @param message TreasureAssemblingGemstoneResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureAssemblingGemstoneResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureAssemblingGemstoneResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureAssemblingGemstoneResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureAssemblingGemstoneResp;
    }

    /** Properties of a GainTreasureResp. */
    interface IGainTreasureResp {

        /** GainTreasureResp infos */
        infos?: (gameProto.ITreasureMessageInfo[]|null);
    }

    /** Represents a GainTreasureResp. */
    class GainTreasureResp implements IGainTreasureResp {

        /**
         * Constructs a new GainTreasureResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IGainTreasureResp);

        /** GainTreasureResp infos. */
        public infos: gameProto.ITreasureMessageInfo[];

        /**
         * Encodes the specified GainTreasureResp message. Does not implicitly {@link gameProto.GainTreasureResp.verify|verify} messages.
         * @param message GainTreasureResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IGainTreasureResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GainTreasureResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GainTreasureResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.GainTreasureResp;
    }

    /** Properties of a TreasureAssemblingGeneralResp. */
    interface ITreasureAssemblingGeneralResp {

        /** TreasureAssemblingGeneralResp info */
        info: gameProto.ITreasureMessageInfo;
    }

    /** Represents a TreasureAssemblingGeneralResp. */
    class TreasureAssemblingGeneralResp implements ITreasureAssemblingGeneralResp {

        /**
         * Constructs a new TreasureAssemblingGeneralResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITreasureAssemblingGeneralResp);

        /** TreasureAssemblingGeneralResp info. */
        public info: gameProto.ITreasureMessageInfo;

        /**
         * Encodes the specified TreasureAssemblingGeneralResp message. Does not implicitly {@link gameProto.TreasureAssemblingGeneralResp.verify|verify} messages.
         * @param message TreasureAssemblingGeneralResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITreasureAssemblingGeneralResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TreasureAssemblingGeneralResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureAssemblingGeneralResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TreasureAssemblingGeneralResp;
    }

    /** Properties of a ValueBuffAddReq. */
    interface IValueBuffAddReq {

        /** ValueBuffAddReq type */
        type: number;
    }

    /** Represents a ValueBuffAddReq. */
    class ValueBuffAddReq implements IValueBuffAddReq {

        /**
         * Constructs a new ValueBuffAddReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IValueBuffAddReq);

        /** ValueBuffAddReq type. */
        public type: number;

        /**
         * Encodes the specified ValueBuffAddReq message. Does not implicitly {@link gameProto.ValueBuffAddReq.verify|verify} messages.
         * @param message ValueBuffAddReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IValueBuffAddReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ValueBuffAddReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValueBuffAddReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ValueBuffAddReq;
    }

    /** Properties of a ValueBuffAddResp. */
    interface IValueBuffAddResp {

        /** ValueBuffAddResp sumAdd */
        sumAdd: number;
    }

    /** Represents a ValueBuffAddResp. */
    class ValueBuffAddResp implements IValueBuffAddResp {

        /**
         * Constructs a new ValueBuffAddResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IValueBuffAddResp);

        /** ValueBuffAddResp sumAdd. */
        public sumAdd: number;

        /**
         * Encodes the specified ValueBuffAddResp message. Does not implicitly {@link gameProto.ValueBuffAddResp.verify|verify} messages.
         * @param message ValueBuffAddResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IValueBuffAddResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ValueBuffAddResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValueBuffAddResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.ValueBuffAddResp;
    }

    /** Properties of a UserMapEventData. */
    interface IUserMapEventData {

        /** UserMapEventData teamId */
        teamId: number;

        /** UserMapEventData startTime */
        startTime: number;

        /** UserMapEventData endTime */
        endTime: number;

        /** UserMapEventData speedTime */
        speedTime: number;

        /** UserMapEventData battleId */
        battleId: number;
    }

    /** Represents a UserMapEventData. */
    class UserMapEventData implements IUserMapEventData {

        /**
         * Constructs a new UserMapEventData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IUserMapEventData);

        /** UserMapEventData teamId. */
        public teamId: number;

        /** UserMapEventData startTime. */
        public startTime: number;

        /** UserMapEventData endTime. */
        public endTime: number;

        /** UserMapEventData speedTime. */
        public speedTime: number;

        /** UserMapEventData battleId. */
        public battleId: number;

        /**
         * Encodes the specified UserMapEventData message. Does not implicitly {@link gameProto.UserMapEventData.verify|verify} messages.
         * @param message UserMapEventData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IUserMapEventData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserMapEventData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserMapEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.UserMapEventData;
    }

    /** Properties of a MapEventData. */
    interface IMapEventData {

        /** MapEventData eventCoordinatesId */
        eventCoordinatesId: number;

        /** MapEventData eventDataId */
        eventDataId: number;

        /** MapEventData userMapEventData */
        userMapEventData?: (gameProto.IUserMapEventData|null);
    }

    /** Represents a MapEventData. */
    class MapEventData implements IMapEventData {

        /**
         * Constructs a new MapEventData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMapEventData);

        /** MapEventData eventCoordinatesId. */
        public eventCoordinatesId: number;

        /** MapEventData eventDataId. */
        public eventDataId: number;

        /** MapEventData userMapEventData. */
        public userMapEventData?: (gameProto.IUserMapEventData|null);

        /**
         * Encodes the specified MapEventData message. Does not implicitly {@link gameProto.MapEventData.verify|verify} messages.
         * @param message MapEventData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMapEventData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapEventData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MapEventData;
    }

    /** Properties of a VisitEventData. */
    interface IVisitEventData {

        /** VisitEventData visitId */
        visitId: number;

        /** VisitEventData cityId */
        cityId: number;

        /** VisitEventData generalId */
        generalId?: (number|null);

        /** VisitEventData refreshStamp */
        refreshStamp?: (number|null);

        /** VisitEventData speed */
        speed?: (number|null);

        /** VisitEventData refreshCount */
        refreshCount?: (number|null);
    }

    /** Represents a VisitEventData. */
    class VisitEventData implements IVisitEventData {

        /**
         * Constructs a new VisitEventData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IVisitEventData);

        /** VisitEventData visitId. */
        public visitId: number;

        /** VisitEventData cityId. */
        public cityId: number;

        /** VisitEventData generalId. */
        public generalId: number;

        /** VisitEventData refreshStamp. */
        public refreshStamp: number;

        /** VisitEventData speed. */
        public speed: number;

        /** VisitEventData refreshCount. */
        public refreshCount: number;

        /**
         * Encodes the specified VisitEventData message. Does not implicitly {@link gameProto.VisitEventData.verify|verify} messages.
         * @param message VisitEventData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IVisitEventData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VisitEventData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VisitEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.VisitEventData;
    }

    /** Properties of a PlayerMadeInfo. */
    interface IPlayerMadeInfo {

        /** PlayerMadeInfo generalId */
        generalId: number;

        /** PlayerMadeInfo cityId */
        cityId: number;

        /** PlayerMadeInfo startDate */
        startDate: number;

        /** PlayerMadeInfo levelReward */
        levelReward?: (number[]|null);

        /** PlayerMadeInfo sumExp */
        sumExp: number;

        /** PlayerMadeInfo endDate */
        endDate: number;

        /** PlayerMadeInfo madeLevel */
        madeLevel: number;

        /** PlayerMadeInfo speedTime */
        speedTime: number;
    }

    /** Represents a PlayerMadeInfo. */
    class PlayerMadeInfo implements IPlayerMadeInfo {

        /**
         * Constructs a new PlayerMadeInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IPlayerMadeInfo);

        /** PlayerMadeInfo generalId. */
        public generalId: number;

        /** PlayerMadeInfo cityId. */
        public cityId: number;

        /** PlayerMadeInfo startDate. */
        public startDate: number;

        /** PlayerMadeInfo levelReward. */
        public levelReward: number[];

        /** PlayerMadeInfo sumExp. */
        public sumExp: number;

        /** PlayerMadeInfo endDate. */
        public endDate: number;

        /** PlayerMadeInfo madeLevel. */
        public madeLevel: number;

        /** PlayerMadeInfo speedTime. */
        public speedTime: number;

        /**
         * Encodes the specified PlayerMadeInfo message. Does not implicitly {@link gameProto.PlayerMadeInfo.verify|verify} messages.
         * @param message PlayerMadeInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IPlayerMadeInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerMadeInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerMadeInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.PlayerMadeInfo;
    }

    /** Properties of a CityProgress. */
    interface ICityProgress {

        /** CityProgress cityId */
        cityId: number;

        /** CityProgress progress */
        progress: number;
    }

    /** Represents a CityProgress. */
    class CityProgress implements ICityProgress {

        /**
         * Constructs a new CityProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityProgress);

        /** CityProgress cityId. */
        public cityId: number;

        /** CityProgress progress. */
        public progress: number;

        /**
         * Encodes the specified CityProgress message. Does not implicitly {@link gameProto.CityProgress.verify|verify} messages.
         * @param message CityProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityProgress;
    }

    /** Properties of a CityBattleLoadWorldMapReq. */
    interface ICityBattleLoadWorldMapReq {

        /** CityBattleLoadWorldMapReq version */
        version?: (number|null);
    }

    /** Represents a CityBattleLoadWorldMapReq. */
    class CityBattleLoadWorldMapReq implements ICityBattleLoadWorldMapReq {

        /**
         * Constructs a new CityBattleLoadWorldMapReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityBattleLoadWorldMapReq);

        /** CityBattleLoadWorldMapReq version. */
        public version: number;

        /**
         * Encodes the specified CityBattleLoadWorldMapReq message. Does not implicitly {@link gameProto.CityBattleLoadWorldMapReq.verify|verify} messages.
         * @param message CityBattleLoadWorldMapReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityBattleLoadWorldMapReq, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityBattleLoadWorldMapReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityBattleLoadWorldMapReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityBattleLoadWorldMapReq;
    }

    /** Properties of a CityBattleLoadWorldMapResp. */
    interface ICityBattleLoadWorldMapResp {

        /** CityBattleLoadWorldMapResp cityInfo */
        cityInfo?: (gameProto.ICityInfo[]|null);

        /** CityBattleLoadWorldMapResp mapEventData */
        mapEventData?: (gameProto.IMapEventData[]|null);

        /** CityBattleLoadWorldMapResp visitEventData */
        visitEventData?: (gameProto.IVisitEventData[]|null);

        /** CityBattleLoadWorldMapResp mapUnLock */
        mapUnLock?: (number[]|null);

        /** CityBattleLoadWorldMapResp wordLv */
        wordLv?: (number|null);

        /** CityBattleLoadWorldMapResp version */
        version?: (number|null);
    }

    /** Represents a CityBattleLoadWorldMapResp. */
    class CityBattleLoadWorldMapResp implements ICityBattleLoadWorldMapResp {

        /**
         * Constructs a new CityBattleLoadWorldMapResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICityBattleLoadWorldMapResp);

        /** CityBattleLoadWorldMapResp cityInfo. */
        public cityInfo: gameProto.ICityInfo[];

        /** CityBattleLoadWorldMapResp mapEventData. */
        public mapEventData: gameProto.IMapEventData[];

        /** CityBattleLoadWorldMapResp visitEventData. */
        public visitEventData: gameProto.IVisitEventData[];

        /** CityBattleLoadWorldMapResp mapUnLock. */
        public mapUnLock: number[];

        /** CityBattleLoadWorldMapResp wordLv. */
        public wordLv: number;

        /** CityBattleLoadWorldMapResp version. */
        public version: number;

        /**
         * Encodes the specified CityBattleLoadWorldMapResp message. Does not implicitly {@link gameProto.CityBattleLoadWorldMapResp.verify|verify} messages.
         * @param message CityBattleLoadWorldMapResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICityBattleLoadWorldMapResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CityBattleLoadWorldMapResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CityBattleLoadWorldMapResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CityBattleLoadWorldMapResp;
    }

    /** Properties of a CITY_BATTLE_EXIT_WORLD_MAP. */
    interface ICITY_BATTLE_EXIT_WORLD_MAP {
    }

    /** Represents a CITY_BATTLE_EXIT_WORLD_MAP. */
    class CITY_BATTLE_EXIT_WORLD_MAP implements ICITY_BATTLE_EXIT_WORLD_MAP {

        /**
         * Constructs a new CITY_BATTLE_EXIT_WORLD_MAP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ICITY_BATTLE_EXIT_WORLD_MAP);

        /**
         * Encodes the specified CITY_BATTLE_EXIT_WORLD_MAP message. Does not implicitly {@link gameProto.CITY_BATTLE_EXIT_WORLD_MAP.verify|verify} messages.
         * @param message CITY_BATTLE_EXIT_WORLD_MAP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ICITY_BATTLE_EXIT_WORLD_MAP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CITY_BATTLE_EXIT_WORLD_MAP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CITY_BATTLE_EXIT_WORLD_MAP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.CITY_BATTLE_EXIT_WORLD_MAP;
    }

    /** Properties of a S2C_CITY_UPDATE. */
    interface IS2C_CITY_UPDATE {

        /** S2C_CITY_UPDATE cityInfo */
        cityInfo?: (gameProto.ICityInfo[]|null);
    }

    /** Represents a S2C_CITY_UPDATE. */
    class S2C_CITY_UPDATE implements IS2C_CITY_UPDATE {

        /**
         * Constructs a new S2C_CITY_UPDATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_UPDATE);

        /** S2C_CITY_UPDATE cityInfo. */
        public cityInfo: gameProto.ICityInfo[];

        /**
         * Encodes the specified S2C_CITY_UPDATE message. Does not implicitly {@link gameProto.S2C_CITY_UPDATE.verify|verify} messages.
         * @param message S2C_CITY_UPDATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_UPDATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_UPDATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_UPDATE;
    }

    /** Properties of a TeamMoveData. */
    interface ITeamMoveData {

        /** TeamMoveData teamId */
        teamId: number;

        /** TeamMoveData cityPath */
        cityPath?: (number[]|null);
    }

    /** Represents a TeamMoveData. */
    class TeamMoveData implements ITeamMoveData {

        /**
         * Constructs a new TeamMoveData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamMoveData);

        /** TeamMoveData teamId. */
        public teamId: number;

        /** TeamMoveData cityPath. */
        public cityPath: number[];

        /**
         * Encodes the specified TeamMoveData message. Does not implicitly {@link gameProto.TeamMoveData.verify|verify} messages.
         * @param message TeamMoveData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamMoveData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamMoveData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamMoveData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamMoveData;
    }

    /** Properties of a TeamMoveDataResp. */
    interface ITeamMoveDataResp {

        /** TeamMoveDataResp moveType */
        moveType: number;

        /** TeamMoveDataResp playerId */
        playerId: number;

        /** TeamMoveDataResp playerName */
        playerName: string;

        /** TeamMoveDataResp teamId */
        teamId: number;

        /** TeamMoveDataResp teamName */
        teamName: string;

        /** TeamMoveDataResp teamHeadId */
        teamHeadId: number;

        /** TeamMoveDataResp cityPath */
        cityPath?: (number[]|null);

        /** TeamMoveDataResp startTime */
        startTime: number;

        /** TeamMoveDataResp endTime */
        endTime: number;

        /** TeamMoveDataResp countryId */
        countryId: number;
    }

    /** Represents a TeamMoveDataResp. */
    class TeamMoveDataResp implements ITeamMoveDataResp {

        /**
         * Constructs a new TeamMoveDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamMoveDataResp);

        /** TeamMoveDataResp moveType. */
        public moveType: number;

        /** TeamMoveDataResp playerId. */
        public playerId: number;

        /** TeamMoveDataResp playerName. */
        public playerName: string;

        /** TeamMoveDataResp teamId. */
        public teamId: number;

        /** TeamMoveDataResp teamName. */
        public teamName: string;

        /** TeamMoveDataResp teamHeadId. */
        public teamHeadId: number;

        /** TeamMoveDataResp cityPath. */
        public cityPath: number[];

        /** TeamMoveDataResp startTime. */
        public startTime: number;

        /** TeamMoveDataResp endTime. */
        public endTime: number;

        /** TeamMoveDataResp countryId. */
        public countryId: number;

        /**
         * Encodes the specified TeamMoveDataResp message. Does not implicitly {@link gameProto.TeamMoveDataResp.verify|verify} messages.
         * @param message TeamMoveDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamMoveDataResp, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamMoveDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamMoveDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamMoveDataResp;
    }

    /** Properties of a TeamValueKey. */
    interface ITeamValueKey {

        /** TeamValueKey countryId */
        countryId: number;

        /** TeamValueKey playerId */
        playerId: number;

        /** TeamValueKey teamId */
        teamId: number;
    }

    /** Represents a TeamValueKey. */
    class TeamValueKey implements ITeamValueKey {

        /**
         * Constructs a new TeamValueKey.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.ITeamValueKey);

        /** TeamValueKey countryId. */
        public countryId: number;

        /** TeamValueKey playerId. */
        public playerId: number;

        /** TeamValueKey teamId. */
        public teamId: number;

        /**
         * Encodes the specified TeamValueKey message. Does not implicitly {@link gameProto.TeamValueKey.verify|verify} messages.
         * @param message TeamValueKey message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.ITeamValueKey, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TeamValueKey message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamValueKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.TeamValueKey;
    }

    /** Properties of a C2S_TEAMMOVE_TO. */
    interface IC2S_TEAMMOVE_TO {

        /** C2S_TEAMMOVE_TO teamMoveData */
        teamMoveData?: (gameProto.ITeamMoveData[]|null);

        /** C2S_TEAMMOVE_TO cityId */
        cityId?: (number|null);
    }

    /** Represents a C2S_TEAMMOVE_TO. */
    class C2S_TEAMMOVE_TO implements IC2S_TEAMMOVE_TO {

        /**
         * Constructs a new C2S_TEAMMOVE_TO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAMMOVE_TO);

        /** C2S_TEAMMOVE_TO teamMoveData. */
        public teamMoveData: gameProto.ITeamMoveData[];

        /** C2S_TEAMMOVE_TO cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_TEAMMOVE_TO message. Does not implicitly {@link gameProto.C2S_TEAMMOVE_TO.verify|verify} messages.
         * @param message C2S_TEAMMOVE_TO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAMMOVE_TO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAMMOVE_TO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAMMOVE_TO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAMMOVE_TO;
    }

    /** Properties of a S2C_TEAMMOVE_TO. */
    interface IS2C_TEAMMOVE_TO {

        /** S2C_TEAMMOVE_TO teamMoveDataResp */
        teamMoveDataResp?: (gameProto.ITeamMoveDataResp[]|null);
    }

    /** Represents a S2C_TEAMMOVE_TO. */
    class S2C_TEAMMOVE_TO implements IS2C_TEAMMOVE_TO {

        /**
         * Constructs a new S2C_TEAMMOVE_TO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAMMOVE_TO);

        /** S2C_TEAMMOVE_TO teamMoveDataResp. */
        public teamMoveDataResp: gameProto.ITeamMoveDataResp[];

        /**
         * Encodes the specified S2C_TEAMMOVE_TO message. Does not implicitly {@link gameProto.S2C_TEAMMOVE_TO.verify|verify} messages.
         * @param message S2C_TEAMMOVE_TO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAMMOVE_TO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAMMOVE_TO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAMMOVE_TO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAMMOVE_TO;
    }

    /** Properties of a C2S_TEAMMOVE_LIST. */
    interface IC2S_TEAMMOVE_LIST {

        /** C2S_TEAMMOVE_LIST teamValueKey */
        teamValueKey?: (gameProto.ITeamValueKey[]|null);
    }

    /** Represents a C2S_TEAMMOVE_LIST. */
    class C2S_TEAMMOVE_LIST implements IC2S_TEAMMOVE_LIST {

        /**
         * Constructs a new C2S_TEAMMOVE_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAMMOVE_LIST);

        /** C2S_TEAMMOVE_LIST teamValueKey. */
        public teamValueKey: gameProto.ITeamValueKey[];

        /**
         * Encodes the specified C2S_TEAMMOVE_LIST message. Does not implicitly {@link gameProto.C2S_TEAMMOVE_LIST.verify|verify} messages.
         * @param message C2S_TEAMMOVE_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAMMOVE_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAMMOVE_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAMMOVE_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAMMOVE_LIST;
    }

    /** Properties of a S2C_TEAMMOVE_LIST. */
    interface IS2C_TEAMMOVE_LIST {

        /** S2C_TEAMMOVE_LIST teamMoveDataResp */
        teamMoveDataResp?: (gameProto.ITeamMoveDataResp[]|null);
    }

    /** Represents a S2C_TEAMMOVE_LIST. */
    class S2C_TEAMMOVE_LIST implements IS2C_TEAMMOVE_LIST {

        /**
         * Constructs a new S2C_TEAMMOVE_LIST.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAMMOVE_LIST);

        /** S2C_TEAMMOVE_LIST teamMoveDataResp. */
        public teamMoveDataResp: gameProto.ITeamMoveDataResp[];

        /**
         * Encodes the specified S2C_TEAMMOVE_LIST message. Does not implicitly {@link gameProto.S2C_TEAMMOVE_LIST.verify|verify} messages.
         * @param message S2C_TEAMMOVE_LIST message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAMMOVE_LIST, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAMMOVE_LIST message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAMMOVE_LIST
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAMMOVE_LIST;
    }

    /** Properties of a C2S_TEAMMOVE_QUICKEN. */
    interface IC2S_TEAMMOVE_QUICKEN {

        /** C2S_TEAMMOVE_QUICKEN teamId */
        teamId: number;

        /** C2S_TEAMMOVE_QUICKEN type */
        type: number;

        /** C2S_TEAMMOVE_QUICKEN itemId */
        itemId: number;
    }

    /** Represents a C2S_TEAMMOVE_QUICKEN. */
    class C2S_TEAMMOVE_QUICKEN implements IC2S_TEAMMOVE_QUICKEN {

        /**
         * Constructs a new C2S_TEAMMOVE_QUICKEN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAMMOVE_QUICKEN);

        /** C2S_TEAMMOVE_QUICKEN teamId. */
        public teamId: number;

        /** C2S_TEAMMOVE_QUICKEN type. */
        public type: number;

        /** C2S_TEAMMOVE_QUICKEN itemId. */
        public itemId: number;

        /**
         * Encodes the specified C2S_TEAMMOVE_QUICKEN message. Does not implicitly {@link gameProto.C2S_TEAMMOVE_QUICKEN.verify|verify} messages.
         * @param message C2S_TEAMMOVE_QUICKEN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAMMOVE_QUICKEN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAMMOVE_QUICKEN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAMMOVE_QUICKEN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAMMOVE_QUICKEN;
    }

    /** Properties of a S2C_TEAMMOVE_QUICKEN. */
    interface IS2C_TEAMMOVE_QUICKEN {

        /** S2C_TEAMMOVE_QUICKEN teamMoveDataResp */
        teamMoveDataResp?: (gameProto.ITeamMoveDataResp|null);
    }

    /** Represents a S2C_TEAMMOVE_QUICKEN. */
    class S2C_TEAMMOVE_QUICKEN implements IS2C_TEAMMOVE_QUICKEN {

        /**
         * Constructs a new S2C_TEAMMOVE_QUICKEN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAMMOVE_QUICKEN);

        /** S2C_TEAMMOVE_QUICKEN teamMoveDataResp. */
        public teamMoveDataResp?: (gameProto.ITeamMoveDataResp|null);

        /**
         * Encodes the specified S2C_TEAMMOVE_QUICKEN message. Does not implicitly {@link gameProto.S2C_TEAMMOVE_QUICKEN.verify|verify} messages.
         * @param message S2C_TEAMMOVE_QUICKEN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAMMOVE_QUICKEN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAMMOVE_QUICKEN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAMMOVE_QUICKEN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAMMOVE_QUICKEN;
    }

    /** Properties of a C2S_TEAMMOVE_RETURN. */
    interface IC2S_TEAMMOVE_RETURN {

        /** C2S_TEAMMOVE_RETURN teamId */
        teamId: number;

        /** C2S_TEAMMOVE_RETURN itemId */
        itemId: number;
    }

    /** Represents a C2S_TEAMMOVE_RETURN. */
    class C2S_TEAMMOVE_RETURN implements IC2S_TEAMMOVE_RETURN {

        /**
         * Constructs a new C2S_TEAMMOVE_RETURN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_TEAMMOVE_RETURN);

        /** C2S_TEAMMOVE_RETURN teamId. */
        public teamId: number;

        /** C2S_TEAMMOVE_RETURN itemId. */
        public itemId: number;

        /**
         * Encodes the specified C2S_TEAMMOVE_RETURN message. Does not implicitly {@link gameProto.C2S_TEAMMOVE_RETURN.verify|verify} messages.
         * @param message C2S_TEAMMOVE_RETURN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_TEAMMOVE_RETURN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_TEAMMOVE_RETURN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_TEAMMOVE_RETURN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_TEAMMOVE_RETURN;
    }

    /** Properties of a S2C_TEAMMOVE_RETURN. */
    interface IS2C_TEAMMOVE_RETURN {

        /** S2C_TEAMMOVE_RETURN teamMoveDataResp */
        teamMoveDataResp: gameProto.ITeamMoveDataResp;
    }

    /** Represents a S2C_TEAMMOVE_RETURN. */
    class S2C_TEAMMOVE_RETURN implements IS2C_TEAMMOVE_RETURN {

        /**
         * Constructs a new S2C_TEAMMOVE_RETURN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAMMOVE_RETURN);

        /** S2C_TEAMMOVE_RETURN teamMoveDataResp. */
        public teamMoveDataResp: gameProto.ITeamMoveDataResp;

        /**
         * Encodes the specified S2C_TEAMMOVE_RETURN message. Does not implicitly {@link gameProto.S2C_TEAMMOVE_RETURN.verify|verify} messages.
         * @param message S2C_TEAMMOVE_RETURN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAMMOVE_RETURN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAMMOVE_RETURN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAMMOVE_RETURN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAMMOVE_RETURN;
    }

    /** Properties of a S2C_TEAMMOVE_DEL. */
    interface IS2C_TEAMMOVE_DEL {

        /** S2C_TEAMMOVE_DEL playerId */
        playerId: number;

        /** S2C_TEAMMOVE_DEL teamId */
        teamId: number;
    }

    /** Represents a S2C_TEAMMOVE_DEL. */
    class S2C_TEAMMOVE_DEL implements IS2C_TEAMMOVE_DEL {

        /**
         * Constructs a new S2C_TEAMMOVE_DEL.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_TEAMMOVE_DEL);

        /** S2C_TEAMMOVE_DEL playerId. */
        public playerId: number;

        /** S2C_TEAMMOVE_DEL teamId. */
        public teamId: number;

        /**
         * Encodes the specified S2C_TEAMMOVE_DEL message. Does not implicitly {@link gameProto.S2C_TEAMMOVE_DEL.verify|verify} messages.
         * @param message S2C_TEAMMOVE_DEL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_TEAMMOVE_DEL, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_TEAMMOVE_DEL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_TEAMMOVE_DEL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_TEAMMOVE_DEL;
    }

    /** Properties of a C2S_WORLDMAP_EVENT_ACT. */
    interface IC2S_WORLDMAP_EVENT_ACT {

        /** C2S_WORLDMAP_EVENT_ACT eventCoordinatesId */
        eventCoordinatesId: number;

        /** C2S_WORLDMAP_EVENT_ACT eventDataId */
        eventDataId: number;

        /** C2S_WORLDMAP_EVENT_ACT teamId */
        teamId: number;

        /** C2S_WORLDMAP_EVENT_ACT cityId */
        cityId?: (number|null);
    }

    /** Represents a C2S_WORLDMAP_EVENT_ACT. */
    class C2S_WORLDMAP_EVENT_ACT implements IC2S_WORLDMAP_EVENT_ACT {

        /**
         * Constructs a new C2S_WORLDMAP_EVENT_ACT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WORLDMAP_EVENT_ACT);

        /** C2S_WORLDMAP_EVENT_ACT eventCoordinatesId. */
        public eventCoordinatesId: number;

        /** C2S_WORLDMAP_EVENT_ACT eventDataId. */
        public eventDataId: number;

        /** C2S_WORLDMAP_EVENT_ACT teamId. */
        public teamId: number;

        /** C2S_WORLDMAP_EVENT_ACT cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_WORLDMAP_EVENT_ACT message. Does not implicitly {@link gameProto.C2S_WORLDMAP_EVENT_ACT.verify|verify} messages.
         * @param message C2S_WORLDMAP_EVENT_ACT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WORLDMAP_EVENT_ACT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WORLDMAP_EVENT_ACT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WORLDMAP_EVENT_ACT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WORLDMAP_EVENT_ACT;
    }

    /** Properties of a S2C_WORLDMAP_EVENT_ACT. */
    interface IS2C_WORLDMAP_EVENT_ACT {

        /** S2C_WORLDMAP_EVENT_ACT state */
        state: number;

        /** S2C_WORLDMAP_EVENT_ACT mapEventData */
        mapEventData?: (gameProto.IMapEventData|null);
    }

    /** Represents a S2C_WORLDMAP_EVENT_ACT. */
    class S2C_WORLDMAP_EVENT_ACT implements IS2C_WORLDMAP_EVENT_ACT {

        /**
         * Constructs a new S2C_WORLDMAP_EVENT_ACT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_EVENT_ACT);

        /** S2C_WORLDMAP_EVENT_ACT state. */
        public state: number;

        /** S2C_WORLDMAP_EVENT_ACT mapEventData. */
        public mapEventData?: (gameProto.IMapEventData|null);

        /**
         * Encodes the specified S2C_WORLDMAP_EVENT_ACT message. Does not implicitly {@link gameProto.S2C_WORLDMAP_EVENT_ACT.verify|verify} messages.
         * @param message S2C_WORLDMAP_EVENT_ACT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_EVENT_ACT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_EVENT_ACT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_EVENT_ACT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_EVENT_ACT;
    }

    /** Properties of a S2C_WORLDMAP_EVENT_OVER. */
    interface IS2C_WORLDMAP_EVENT_OVER {

        /** S2C_WORLDMAP_EVENT_OVER eventCoordinatesId */
        eventCoordinatesId: number;

        /** S2C_WORLDMAP_EVENT_OVER eventDataId */
        eventDataId: number;

        /** S2C_WORLDMAP_EVENT_OVER rewards */
        rewards: string;

        /** S2C_WORLDMAP_EVENT_OVER teamId */
        teamId?: (number|null);
    }

    /** Represents a S2C_WORLDMAP_EVENT_OVER. */
    class S2C_WORLDMAP_EVENT_OVER implements IS2C_WORLDMAP_EVENT_OVER {

        /**
         * Constructs a new S2C_WORLDMAP_EVENT_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_EVENT_OVER);

        /** S2C_WORLDMAP_EVENT_OVER eventCoordinatesId. */
        public eventCoordinatesId: number;

        /** S2C_WORLDMAP_EVENT_OVER eventDataId. */
        public eventDataId: number;

        /** S2C_WORLDMAP_EVENT_OVER rewards. */
        public rewards: string;

        /** S2C_WORLDMAP_EVENT_OVER teamId. */
        public teamId: number;

        /**
         * Encodes the specified S2C_WORLDMAP_EVENT_OVER message. Does not implicitly {@link gameProto.S2C_WORLDMAP_EVENT_OVER.verify|verify} messages.
         * @param message S2C_WORLDMAP_EVENT_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_EVENT_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_EVENT_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_EVENT_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_EVENT_OVER;
    }

    /** Properties of a S2C_WORLDMAP_EVENT_WAR_OVER. */
    interface IS2C_WORLDMAP_EVENT_WAR_OVER {

        /** S2C_WORLDMAP_EVENT_WAR_OVER eventCoordinatesId */
        eventCoordinatesId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER eventDataId */
        eventDataId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER battleId */
        battleId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER isVictory */
        isVictory: boolean;

        /** S2C_WORLDMAP_EVENT_WAR_OVER valuesMessage */
        valuesMessage?: (gameProto.IValuesMessage[]|null);

        /** S2C_WORLDMAP_EVENT_WAR_OVER mapEventData */
        mapEventData?: (gameProto.IMapEventData|null);

        /** S2C_WORLDMAP_EVENT_WAR_OVER teamId */
        teamId?: (number|null);
    }

    /** Represents a S2C_WORLDMAP_EVENT_WAR_OVER. */
    class S2C_WORLDMAP_EVENT_WAR_OVER implements IS2C_WORLDMAP_EVENT_WAR_OVER {

        /**
         * Constructs a new S2C_WORLDMAP_EVENT_WAR_OVER.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_EVENT_WAR_OVER);

        /** S2C_WORLDMAP_EVENT_WAR_OVER eventCoordinatesId. */
        public eventCoordinatesId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER eventDataId. */
        public eventDataId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER battleId. */
        public battleId: number;

        /** S2C_WORLDMAP_EVENT_WAR_OVER isVictory. */
        public isVictory: boolean;

        /** S2C_WORLDMAP_EVENT_WAR_OVER valuesMessage. */
        public valuesMessage: gameProto.IValuesMessage[];

        /** S2C_WORLDMAP_EVENT_WAR_OVER mapEventData. */
        public mapEventData?: (gameProto.IMapEventData|null);

        /** S2C_WORLDMAP_EVENT_WAR_OVER teamId. */
        public teamId: number;

        /**
         * Encodes the specified S2C_WORLDMAP_EVENT_WAR_OVER message. Does not implicitly {@link gameProto.S2C_WORLDMAP_EVENT_WAR_OVER.verify|verify} messages.
         * @param message S2C_WORLDMAP_EVENT_WAR_OVER message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_EVENT_WAR_OVER, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_EVENT_WAR_OVER message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_EVENT_WAR_OVER
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_EVENT_WAR_OVER;
    }

    /** Properties of a C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN. */
    interface IC2S_WORLDMAP_EVENT_COLLECTION_QUICKEN {

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN eventCoordinatesId */
        eventCoordinatesId: number;

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN itemId */
        itemId: number;

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN count */
        count: number;
    }

    /** Represents a C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN. */
    class C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN implements IC2S_WORLDMAP_EVENT_COLLECTION_QUICKEN {

        /**
         * Constructs a new C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WORLDMAP_EVENT_COLLECTION_QUICKEN);

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN eventCoordinatesId. */
        public eventCoordinatesId: number;

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN itemId. */
        public itemId: number;

        /** C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN count. */
        public count: number;

        /**
         * Encodes the specified C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN message. Does not implicitly {@link gameProto.C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN.verify|verify} messages.
         * @param message C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WORLDMAP_EVENT_COLLECTION_QUICKEN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WORLDMAP_EVENT_COLLECTION_QUICKEN;
    }

    /** Properties of a S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN. */
    interface IS2C_WORLDMAP_EVENT_COLLECTION_QUICKEN {

        /** S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN state */
        state: number;

        /** S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN mapEventData */
        mapEventData?: (gameProto.IMapEventData|null);
    }

    /** Represents a S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN. */
    class S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN implements IS2C_WORLDMAP_EVENT_COLLECTION_QUICKEN {

        /**
         * Constructs a new S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_EVENT_COLLECTION_QUICKEN);

        /** S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN state. */
        public state: number;

        /** S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN mapEventData. */
        public mapEventData?: (gameProto.IMapEventData|null);

        /**
         * Encodes the specified S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN message. Does not implicitly {@link gameProto.S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN.verify|verify} messages.
         * @param message S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_EVENT_COLLECTION_QUICKEN, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_EVENT_COLLECTION_QUICKEN;
    }

    /** Properties of a S2C_VISIT_EVENT_UPDATE. */
    interface IS2C_VISIT_EVENT_UPDATE {

        /** S2C_VISIT_EVENT_UPDATE state */
        state?: (number|null);

        /** S2C_VISIT_EVENT_UPDATE visitEventData */
        visitEventData?: (gameProto.IVisitEventData|null);
    }

    /** Represents a S2C_VISIT_EVENT_UPDATE. */
    class S2C_VISIT_EVENT_UPDATE implements IS2C_VISIT_EVENT_UPDATE {

        /**
         * Constructs a new S2C_VISIT_EVENT_UPDATE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_VISIT_EVENT_UPDATE);

        /** S2C_VISIT_EVENT_UPDATE state. */
        public state: number;

        /** S2C_VISIT_EVENT_UPDATE visitEventData. */
        public visitEventData?: (gameProto.IVisitEventData|null);

        /**
         * Encodes the specified S2C_VISIT_EVENT_UPDATE message. Does not implicitly {@link gameProto.S2C_VISIT_EVENT_UPDATE.verify|verify} messages.
         * @param message S2C_VISIT_EVENT_UPDATE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_VISIT_EVENT_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_VISIT_EVENT_UPDATE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_VISIT_EVENT_UPDATE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_VISIT_EVENT_UPDATE;
    }

    /** Properties of a C2S_GENERAL_VISIT. */
    interface IC2S_GENERAL_VISIT {

        /** C2S_GENERAL_VISIT cityId */
        cityId?: (number|null);

        /** C2S_GENERAL_VISIT generalId */
        generalId?: (number|null);
    }

    /** Represents a C2S_GENERAL_VISIT. */
    class C2S_GENERAL_VISIT implements IC2S_GENERAL_VISIT {

        /**
         * Constructs a new C2S_GENERAL_VISIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GENERAL_VISIT);

        /** C2S_GENERAL_VISIT cityId. */
        public cityId: number;

        /** C2S_GENERAL_VISIT generalId. */
        public generalId: number;

        /**
         * Encodes the specified C2S_GENERAL_VISIT message. Does not implicitly {@link gameProto.C2S_GENERAL_VISIT.verify|verify} messages.
         * @param message C2S_GENERAL_VISIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GENERAL_VISIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GENERAL_VISIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GENERAL_VISIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GENERAL_VISIT;
    }

    /** Properties of a S2C_GENERAL_VISIT. */
    interface IS2C_GENERAL_VISIT {

        /** S2C_GENERAL_VISIT errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_GENERAL_VISIT. */
    class S2C_GENERAL_VISIT implements IS2C_GENERAL_VISIT {

        /**
         * Constructs a new S2C_GENERAL_VISIT.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GENERAL_VISIT);

        /** S2C_GENERAL_VISIT errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_GENERAL_VISIT message. Does not implicitly {@link gameProto.S2C_GENERAL_VISIT.verify|verify} messages.
         * @param message S2C_GENERAL_VISIT message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GENERAL_VISIT, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GENERAL_VISIT message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GENERAL_VISIT
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GENERAL_VISIT;
    }

    /** Properties of a C2S_WORLDMAP_INFORMATION. */
    interface IC2S_WORLDMAP_INFORMATION {

        /** C2S_WORLDMAP_INFORMATION countryId */
        countryId: number;
    }

    /** Represents a C2S_WORLDMAP_INFORMATION. */
    class C2S_WORLDMAP_INFORMATION implements IC2S_WORLDMAP_INFORMATION {

        /**
         * Constructs a new C2S_WORLDMAP_INFORMATION.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WORLDMAP_INFORMATION);

        /** C2S_WORLDMAP_INFORMATION countryId. */
        public countryId: number;

        /**
         * Encodes the specified C2S_WORLDMAP_INFORMATION message. Does not implicitly {@link gameProto.C2S_WORLDMAP_INFORMATION.verify|verify} messages.
         * @param message C2S_WORLDMAP_INFORMATION message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WORLDMAP_INFORMATION, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WORLDMAP_INFORMATION message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WORLDMAP_INFORMATION
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WORLDMAP_INFORMATION;
    }

    /** Properties of a MassMap. */
    interface IMassMap {

        /** MassMap cityId */
        cityId: number;

        /** MassMap teamCount */
        teamCount: number;

        /** MassMap timeArrival */
        timeArrival: number;
    }

    /** Represents a MassMap. */
    class MassMap implements IMassMap {

        /**
         * Constructs a new MassMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IMassMap);

        /** MassMap cityId. */
        public cityId: number;

        /** MassMap teamCount. */
        public teamCount: number;

        /** MassMap timeArrival. */
        public timeArrival: number;

        /**
         * Encodes the specified MassMap message. Does not implicitly {@link gameProto.MassMap.verify|verify} messages.
         * @param message MassMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IMassMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MassMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MassMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.MassMap;
    }

    /** Properties of a DefCity. */
    interface IDefCity {

        /** DefCity countryId */
        countryId: number;

        /** DefCity cityId */
        cityId: number;
    }

    /** Represents a DefCity. */
    class DefCity implements IDefCity {

        /**
         * Constructs a new DefCity.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IDefCity);

        /** DefCity countryId. */
        public countryId: number;

        /** DefCity cityId. */
        public cityId: number;

        /**
         * Encodes the specified DefCity message. Does not implicitly {@link gameProto.DefCity.verify|verify} messages.
         * @param message DefCity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IDefCity, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DefCity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DefCity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.DefCity;
    }

    /** Properties of a S2C_WORLDMAP_INFORMATION. */
    interface IS2C_WORLDMAP_INFORMATION {

        /** S2C_WORLDMAP_INFORMATION atkCity */
        atkCity?: (number[]|null);

        /** S2C_WORLDMAP_INFORMATION defCity */
        defCity?: (gameProto.IDefCity[]|null);

        /** S2C_WORLDMAP_INFORMATION massMap */
        massMap?: (gameProto.IMassMap[]|null);

        /** S2C_WORLDMAP_INFORMATION enemyMassMap */
        enemyMassMap?: (gameProto.IMassMap[]|null);
    }

    /** Represents a S2C_WORLDMAP_INFORMATION. */
    class S2C_WORLDMAP_INFORMATION implements IS2C_WORLDMAP_INFORMATION {

        /**
         * Constructs a new S2C_WORLDMAP_INFORMATION.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_INFORMATION);

        /** S2C_WORLDMAP_INFORMATION atkCity. */
        public atkCity: number[];

        /** S2C_WORLDMAP_INFORMATION defCity. */
        public defCity: gameProto.IDefCity[];

        /** S2C_WORLDMAP_INFORMATION massMap. */
        public massMap: gameProto.IMassMap[];

        /** S2C_WORLDMAP_INFORMATION enemyMassMap. */
        public enemyMassMap: gameProto.IMassMap[];

        /**
         * Encodes the specified S2C_WORLDMAP_INFORMATION message. Does not implicitly {@link gameProto.S2C_WORLDMAP_INFORMATION.verify|verify} messages.
         * @param message S2C_WORLDMAP_INFORMATION message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_INFORMATION, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_INFORMATION message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_INFORMATION
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_INFORMATION;
    }

    /** Properties of a S2C_WORLDMAP_INFORMATION_MASS_NOTICE. */
    interface IS2C_WORLDMAP_INFORMATION_MASS_NOTICE {

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE enemyAndUs */
        enemyAndUs: number;

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE countryId */
        countryId: number;

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE targetCity */
        targetCity: number;
    }

    /** Represents a S2C_WORLDMAP_INFORMATION_MASS_NOTICE. */
    class S2C_WORLDMAP_INFORMATION_MASS_NOTICE implements IS2C_WORLDMAP_INFORMATION_MASS_NOTICE {

        /**
         * Constructs a new S2C_WORLDMAP_INFORMATION_MASS_NOTICE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORLDMAP_INFORMATION_MASS_NOTICE);

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE enemyAndUs. */
        public enemyAndUs: number;

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE countryId. */
        public countryId: number;

        /** S2C_WORLDMAP_INFORMATION_MASS_NOTICE targetCity. */
        public targetCity: number;

        /**
         * Encodes the specified S2C_WORLDMAP_INFORMATION_MASS_NOTICE message. Does not implicitly {@link gameProto.S2C_WORLDMAP_INFORMATION_MASS_NOTICE.verify|verify} messages.
         * @param message S2C_WORLDMAP_INFORMATION_MASS_NOTICE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORLDMAP_INFORMATION_MASS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORLDMAP_INFORMATION_MASS_NOTICE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORLDMAP_INFORMATION_MASS_NOTICE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORLDMAP_INFORMATION_MASS_NOTICE;
    }

    /** Properties of a C2S_MILITARYMERITS_REWARD_INFO. */
    interface IC2S_MILITARYMERITS_REWARD_INFO {
    }

    /** Represents a C2S_MILITARYMERITS_REWARD_INFO. */
    class C2S_MILITARYMERITS_REWARD_INFO implements IC2S_MILITARYMERITS_REWARD_INFO {

        /**
         * Constructs a new C2S_MILITARYMERITS_REWARD_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MILITARYMERITS_REWARD_INFO);

        /**
         * Encodes the specified C2S_MILITARYMERITS_REWARD_INFO message. Does not implicitly {@link gameProto.C2S_MILITARYMERITS_REWARD_INFO.verify|verify} messages.
         * @param message C2S_MILITARYMERITS_REWARD_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MILITARYMERITS_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MILITARYMERITS_REWARD_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MILITARYMERITS_REWARD_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MILITARYMERITS_REWARD_INFO;
    }

    /** Properties of a S2C_MILITARYMERITS_REWARD_INFO. */
    interface IS2C_MILITARYMERITS_REWARD_INFO {

        /** S2C_MILITARYMERITS_REWARD_INFO receivedIds */
        receivedIds?: (number[]|null);
    }

    /** Represents a S2C_MILITARYMERITS_REWARD_INFO. */
    class S2C_MILITARYMERITS_REWARD_INFO implements IS2C_MILITARYMERITS_REWARD_INFO {

        /**
         * Constructs a new S2C_MILITARYMERITS_REWARD_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MILITARYMERITS_REWARD_INFO);

        /** S2C_MILITARYMERITS_REWARD_INFO receivedIds. */
        public receivedIds: number[];

        /**
         * Encodes the specified S2C_MILITARYMERITS_REWARD_INFO message. Does not implicitly {@link gameProto.S2C_MILITARYMERITS_REWARD_INFO.verify|verify} messages.
         * @param message S2C_MILITARYMERITS_REWARD_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MILITARYMERITS_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MILITARYMERITS_REWARD_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MILITARYMERITS_REWARD_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MILITARYMERITS_REWARD_INFO;
    }

    /** Properties of a C2S_MILITARYMERITS_REWARD_RECEIVE. */
    interface IC2S_MILITARYMERITS_REWARD_RECEIVE {

        /** C2S_MILITARYMERITS_REWARD_RECEIVE id */
        id?: (number|null);
    }

    /** Represents a C2S_MILITARYMERITS_REWARD_RECEIVE. */
    class C2S_MILITARYMERITS_REWARD_RECEIVE implements IC2S_MILITARYMERITS_REWARD_RECEIVE {

        /**
         * Constructs a new C2S_MILITARYMERITS_REWARD_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MILITARYMERITS_REWARD_RECEIVE);

        /** C2S_MILITARYMERITS_REWARD_RECEIVE id. */
        public id: number;

        /**
         * Encodes the specified C2S_MILITARYMERITS_REWARD_RECEIVE message. Does not implicitly {@link gameProto.C2S_MILITARYMERITS_REWARD_RECEIVE.verify|verify} messages.
         * @param message C2S_MILITARYMERITS_REWARD_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MILITARYMERITS_REWARD_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MILITARYMERITS_REWARD_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MILITARYMERITS_REWARD_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MILITARYMERITS_REWARD_RECEIVE;
    }

    /** Properties of a S2C_MILITARYMERITS_REWARD_RECEIVE. */
    interface IS2C_MILITARYMERITS_REWARD_RECEIVE {

        /** S2C_MILITARYMERITS_REWARD_RECEIVE errorCode */
        errorCode?: (number|null);

        /** S2C_MILITARYMERITS_REWARD_RECEIVE id */
        id?: (number|null);
    }

    /** Represents a S2C_MILITARYMERITS_REWARD_RECEIVE. */
    class S2C_MILITARYMERITS_REWARD_RECEIVE implements IS2C_MILITARYMERITS_REWARD_RECEIVE {

        /**
         * Constructs a new S2C_MILITARYMERITS_REWARD_RECEIVE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MILITARYMERITS_REWARD_RECEIVE);

        /** S2C_MILITARYMERITS_REWARD_RECEIVE errorCode. */
        public errorCode: number;

        /** S2C_MILITARYMERITS_REWARD_RECEIVE id. */
        public id: number;

        /**
         * Encodes the specified S2C_MILITARYMERITS_REWARD_RECEIVE message. Does not implicitly {@link gameProto.S2C_MILITARYMERITS_REWARD_RECEIVE.verify|verify} messages.
         * @param message S2C_MILITARYMERITS_REWARD_RECEIVE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MILITARYMERITS_REWARD_RECEIVE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MILITARYMERITS_REWARD_RECEIVE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MILITARYMERITS_REWARD_RECEIVE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MILITARYMERITS_REWARD_RECEIVE;
    }

    /** Properties of a C2S_GET_MAP_EVENT_DATA. */
    interface IC2S_GET_MAP_EVENT_DATA {

        /** C2S_GET_MAP_EVENT_DATA eventCoordinatesId */
        eventCoordinatesId?: (number[]|null);
    }

    /** Represents a C2S_GET_MAP_EVENT_DATA. */
    class C2S_GET_MAP_EVENT_DATA implements IC2S_GET_MAP_EVENT_DATA {

        /**
         * Constructs a new C2S_GET_MAP_EVENT_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_GET_MAP_EVENT_DATA);

        /** C2S_GET_MAP_EVENT_DATA eventCoordinatesId. */
        public eventCoordinatesId: number[];

        /**
         * Encodes the specified C2S_GET_MAP_EVENT_DATA message. Does not implicitly {@link gameProto.C2S_GET_MAP_EVENT_DATA.verify|verify} messages.
         * @param message C2S_GET_MAP_EVENT_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_GET_MAP_EVENT_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_GET_MAP_EVENT_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_GET_MAP_EVENT_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_GET_MAP_EVENT_DATA;
    }

    /** Properties of a S2C_GET_MAP_EVENT_DATA. */
    interface IS2C_GET_MAP_EVENT_DATA {

        /** S2C_GET_MAP_EVENT_DATA mapEventData */
        mapEventData?: (gameProto.IMapEventData[]|null);
    }

    /** Represents a S2C_GET_MAP_EVENT_DATA. */
    class S2C_GET_MAP_EVENT_DATA implements IS2C_GET_MAP_EVENT_DATA {

        /**
         * Constructs a new S2C_GET_MAP_EVENT_DATA.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_GET_MAP_EVENT_DATA);

        /** S2C_GET_MAP_EVENT_DATA mapEventData. */
        public mapEventData: gameProto.IMapEventData[];

        /**
         * Encodes the specified S2C_GET_MAP_EVENT_DATA message. Does not implicitly {@link gameProto.S2C_GET_MAP_EVENT_DATA.verify|verify} messages.
         * @param message S2C_GET_MAP_EVENT_DATA message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_GET_MAP_EVENT_DATA, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_GET_MAP_EVENT_DATA message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_GET_MAP_EVENT_DATA
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_GET_MAP_EVENT_DATA;
    }

    /** Properties of a C2S_VISIT_DATA_REFRESH. */
    interface IC2S_VISIT_DATA_REFRESH {

        /** C2S_VISIT_DATA_REFRESH cityId */
        cityId?: (number|null);
    }

    /** Represents a C2S_VISIT_DATA_REFRESH. */
    class C2S_VISIT_DATA_REFRESH implements IC2S_VISIT_DATA_REFRESH {

        /**
         * Constructs a new C2S_VISIT_DATA_REFRESH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_VISIT_DATA_REFRESH);

        /** C2S_VISIT_DATA_REFRESH cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_VISIT_DATA_REFRESH message. Does not implicitly {@link gameProto.C2S_VISIT_DATA_REFRESH.verify|verify} messages.
         * @param message C2S_VISIT_DATA_REFRESH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_VISIT_DATA_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_VISIT_DATA_REFRESH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_VISIT_DATA_REFRESH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_VISIT_DATA_REFRESH;
    }

    /** Properties of a S2C_VISIT_DATA_REFRESH. */
    interface IS2C_VISIT_DATA_REFRESH {

        /** S2C_VISIT_DATA_REFRESH visitEventData */
        visitEventData?: (gameProto.IVisitEventData|null);
    }

    /** Represents a S2C_VISIT_DATA_REFRESH. */
    class S2C_VISIT_DATA_REFRESH implements IS2C_VISIT_DATA_REFRESH {

        /**
         * Constructs a new S2C_VISIT_DATA_REFRESH.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_VISIT_DATA_REFRESH);

        /** S2C_VISIT_DATA_REFRESH visitEventData. */
        public visitEventData?: (gameProto.IVisitEventData|null);

        /**
         * Encodes the specified S2C_VISIT_DATA_REFRESH message. Does not implicitly {@link gameProto.S2C_VISIT_DATA_REFRESH.verify|verify} messages.
         * @param message S2C_VISIT_DATA_REFRESH message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_VISIT_DATA_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_VISIT_DATA_REFRESH message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_VISIT_DATA_REFRESH
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_VISIT_DATA_REFRESH;
    }

    /** Properties of a C2S_VISIT_CD_SPEED. */
    interface IC2S_VISIT_CD_SPEED {

        /** C2S_VISIT_CD_SPEED cityId */
        cityId?: (number|null);

        /** C2S_VISIT_CD_SPEED gold */
        gold?: (boolean|null);

        /** C2S_VISIT_CD_SPEED itemId */
        itemId?: (number|null);

        /** C2S_VISIT_CD_SPEED itemCount */
        itemCount?: (number|null);
    }

    /** Represents a C2S_VISIT_CD_SPEED. */
    class C2S_VISIT_CD_SPEED implements IC2S_VISIT_CD_SPEED {

        /**
         * Constructs a new C2S_VISIT_CD_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_VISIT_CD_SPEED);

        /** C2S_VISIT_CD_SPEED cityId. */
        public cityId: number;

        /** C2S_VISIT_CD_SPEED gold. */
        public gold: boolean;

        /** C2S_VISIT_CD_SPEED itemId. */
        public itemId: number;

        /** C2S_VISIT_CD_SPEED itemCount. */
        public itemCount: number;

        /**
         * Encodes the specified C2S_VISIT_CD_SPEED message. Does not implicitly {@link gameProto.C2S_VISIT_CD_SPEED.verify|verify} messages.
         * @param message C2S_VISIT_CD_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_VISIT_CD_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_VISIT_CD_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_VISIT_CD_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_VISIT_CD_SPEED;
    }

    /** Properties of a S2C_VISIT_CD_SPEED. */
    interface IS2C_VISIT_CD_SPEED {

        /** S2C_VISIT_CD_SPEED visitEventData */
        visitEventData?: (gameProto.IVisitEventData|null);
    }

    /** Represents a S2C_VISIT_CD_SPEED. */
    class S2C_VISIT_CD_SPEED implements IS2C_VISIT_CD_SPEED {

        /**
         * Constructs a new S2C_VISIT_CD_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_VISIT_CD_SPEED);

        /** S2C_VISIT_CD_SPEED visitEventData. */
        public visitEventData?: (gameProto.IVisitEventData|null);

        /**
         * Encodes the specified S2C_VISIT_CD_SPEED message. Does not implicitly {@link gameProto.S2C_VISIT_CD_SPEED.verify|verify} messages.
         * @param message S2C_VISIT_CD_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_VISIT_CD_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_VISIT_CD_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_VISIT_CD_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_VISIT_CD_SPEED;
    }

    /** Properties of a C2S_UNLOCK_CITY. */
    interface IC2S_UNLOCK_CITY {

        /** C2S_UNLOCK_CITY cityId */
        cityId?: (number|null);

        /** C2S_UNLOCK_CITY teamId */
        teamId?: (number|null);
    }

    /** Represents a C2S_UNLOCK_CITY. */
    class C2S_UNLOCK_CITY implements IC2S_UNLOCK_CITY {

        /**
         * Constructs a new C2S_UNLOCK_CITY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_UNLOCK_CITY);

        /** C2S_UNLOCK_CITY cityId. */
        public cityId: number;

        /** C2S_UNLOCK_CITY teamId. */
        public teamId: number;

        /**
         * Encodes the specified C2S_UNLOCK_CITY message. Does not implicitly {@link gameProto.C2S_UNLOCK_CITY.verify|verify} messages.
         * @param message C2S_UNLOCK_CITY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_UNLOCK_CITY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_UNLOCK_CITY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_UNLOCK_CITY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_UNLOCK_CITY;
    }

    /** Properties of a S2C_UNLOCK_CITY. */
    interface IS2C_UNLOCK_CITY {

        /** S2C_UNLOCK_CITY cityId */
        cityId?: (number|null);

        /** S2C_UNLOCK_CITY errorCode */
        errorCode?: (number|null);
    }

    /** Represents a S2C_UNLOCK_CITY. */
    class S2C_UNLOCK_CITY implements IS2C_UNLOCK_CITY {

        /**
         * Constructs a new S2C_UNLOCK_CITY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_UNLOCK_CITY);

        /** S2C_UNLOCK_CITY cityId. */
        public cityId: number;

        /** S2C_UNLOCK_CITY errorCode. */
        public errorCode: number;

        /**
         * Encodes the specified S2C_UNLOCK_CITY message. Does not implicitly {@link gameProto.S2C_UNLOCK_CITY.verify|verify} messages.
         * @param message S2C_UNLOCK_CITY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_UNLOCK_CITY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_UNLOCK_CITY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_UNLOCK_CITY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_UNLOCK_CITY;
    }

    /** Properties of a C2S_MAP_EVENT_BUY. */
    interface IC2S_MAP_EVENT_BUY {

        /** C2S_MAP_EVENT_BUY type */
        type: number;
    }

    /** Represents a C2S_MAP_EVENT_BUY. */
    class C2S_MAP_EVENT_BUY implements IC2S_MAP_EVENT_BUY {

        /**
         * Constructs a new C2S_MAP_EVENT_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_MAP_EVENT_BUY);

        /** C2S_MAP_EVENT_BUY type. */
        public type: number;

        /**
         * Encodes the specified C2S_MAP_EVENT_BUY message. Does not implicitly {@link gameProto.C2S_MAP_EVENT_BUY.verify|verify} messages.
         * @param message C2S_MAP_EVENT_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_MAP_EVENT_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_MAP_EVENT_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_MAP_EVENT_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_MAP_EVENT_BUY;
    }

    /** Properties of a S2C_MAP_EVENT_BUY. */
    interface IS2C_MAP_EVENT_BUY {

        /** S2C_MAP_EVENT_BUY state */
        state: number;
    }

    /** Represents a S2C_MAP_EVENT_BUY. */
    class S2C_MAP_EVENT_BUY implements IS2C_MAP_EVENT_BUY {

        /**
         * Constructs a new S2C_MAP_EVENT_BUY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_MAP_EVENT_BUY);

        /** S2C_MAP_EVENT_BUY state. */
        public state: number;

        /**
         * Encodes the specified S2C_MAP_EVENT_BUY message. Does not implicitly {@link gameProto.S2C_MAP_EVENT_BUY.verify|verify} messages.
         * @param message S2C_MAP_EVENT_BUY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_MAP_EVENT_BUY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_MAP_EVENT_BUY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_MAP_EVENT_BUY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_MAP_EVENT_BUY;
    }

    /** Properties of a C2S_COUNTRY_CITY. */
    interface IC2S_COUNTRY_CITY {
    }

    /** Represents a C2S_COUNTRY_CITY. */
    class C2S_COUNTRY_CITY implements IC2S_COUNTRY_CITY {

        /**
         * Constructs a new C2S_COUNTRY_CITY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_COUNTRY_CITY);

        /**
         * Encodes the specified C2S_COUNTRY_CITY message. Does not implicitly {@link gameProto.C2S_COUNTRY_CITY.verify|verify} messages.
         * @param message C2S_COUNTRY_CITY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_COUNTRY_CITY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_COUNTRY_CITY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_COUNTRY_CITY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_COUNTRY_CITY;
    }

    /** Properties of a S2C_COUNTRY_CITY. */
    interface IS2C_COUNTRY_CITY {

        /** S2C_COUNTRY_CITY defCity */
        defCity?: (gameProto.IDefCity[]|null);
    }

    /** Represents a S2C_COUNTRY_CITY. */
    class S2C_COUNTRY_CITY implements IS2C_COUNTRY_CITY {

        /**
         * Constructs a new S2C_COUNTRY_CITY.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_COUNTRY_CITY);

        /** S2C_COUNTRY_CITY defCity. */
        public defCity: gameProto.IDefCity[];

        /**
         * Encodes the specified S2C_COUNTRY_CITY message. Does not implicitly {@link gameProto.S2C_COUNTRY_CITY.verify|verify} messages.
         * @param message S2C_COUNTRY_CITY message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_COUNTRY_CITY, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_COUNTRY_CITY message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_COUNTRY_CITY
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_COUNTRY_CITY;
    }

    /** Properties of a C2S_CITY_MADE_INFO. */
    interface IC2S_CITY_MADE_INFO {

        /** C2S_CITY_MADE_INFO cityId */
        cityId: number;
    }

    /** Represents a C2S_CITY_MADE_INFO. */
    class C2S_CITY_MADE_INFO implements IC2S_CITY_MADE_INFO {

        /**
         * Constructs a new C2S_CITY_MADE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_MADE_INFO);

        /** C2S_CITY_MADE_INFO cityId. */
        public cityId: number;

        /**
         * Encodes the specified C2S_CITY_MADE_INFO message. Does not implicitly {@link gameProto.C2S_CITY_MADE_INFO.verify|verify} messages.
         * @param message C2S_CITY_MADE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_MADE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_MADE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_MADE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_MADE_INFO;
    }

    /** Properties of a S2C_CITY_MADE_INFO. */
    interface IS2C_CITY_MADE_INFO {

        /** S2C_CITY_MADE_INFO playerMadeInfo */
        playerMadeInfo?: (gameProto.IPlayerMadeInfo[]|null);

        /** S2C_CITY_MADE_INFO sumExp */
        sumExp?: (number|null);

        /** S2C_CITY_MADE_INFO cityProgress */
        cityProgress?: (gameProto.ICityProgress[]|null);

        /** S2C_CITY_MADE_INFO npcLevel */
        npcLevel?: (number|null);
    }

    /** Represents a S2C_CITY_MADE_INFO. */
    class S2C_CITY_MADE_INFO implements IS2C_CITY_MADE_INFO {

        /**
         * Constructs a new S2C_CITY_MADE_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_MADE_INFO);

        /** S2C_CITY_MADE_INFO playerMadeInfo. */
        public playerMadeInfo: gameProto.IPlayerMadeInfo[];

        /** S2C_CITY_MADE_INFO sumExp. */
        public sumExp: number;

        /** S2C_CITY_MADE_INFO cityProgress. */
        public cityProgress: gameProto.ICityProgress[];

        /** S2C_CITY_MADE_INFO npcLevel. */
        public npcLevel: number;

        /**
         * Encodes the specified S2C_CITY_MADE_INFO message. Does not implicitly {@link gameProto.S2C_CITY_MADE_INFO.verify|verify} messages.
         * @param message S2C_CITY_MADE_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_MADE_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_MADE_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_MADE_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_MADE_INFO;
    }

    /** Properties of a C2S_CITY_MADE. */
    interface IC2S_CITY_MADE {

        /** C2S_CITY_MADE generalId */
        generalId: number;

        /** C2S_CITY_MADE cityId */
        cityId: number;

        /** C2S_CITY_MADE isNow */
        isNow: boolean;
    }

    /** Represents a C2S_CITY_MADE. */
    class C2S_CITY_MADE implements IC2S_CITY_MADE {

        /**
         * Constructs a new C2S_CITY_MADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_MADE);

        /** C2S_CITY_MADE generalId. */
        public generalId: number;

        /** C2S_CITY_MADE cityId. */
        public cityId: number;

        /** C2S_CITY_MADE isNow. */
        public isNow: boolean;

        /**
         * Encodes the specified C2S_CITY_MADE message. Does not implicitly {@link gameProto.C2S_CITY_MADE.verify|verify} messages.
         * @param message C2S_CITY_MADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_MADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_MADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_MADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_MADE;
    }

    /** Properties of a S2C_CITY_MADE. */
    interface IS2C_CITY_MADE {

        /** S2C_CITY_MADE playerMadeInfo */
        playerMadeInfo?: (gameProto.IPlayerMadeInfo[]|null);
    }

    /** Represents a S2C_CITY_MADE. */
    class S2C_CITY_MADE implements IS2C_CITY_MADE {

        /**
         * Constructs a new S2C_CITY_MADE.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_MADE);

        /** S2C_CITY_MADE playerMadeInfo. */
        public playerMadeInfo: gameProto.IPlayerMadeInfo[];

        /**
         * Encodes the specified S2C_CITY_MADE message. Does not implicitly {@link gameProto.S2C_CITY_MADE.verify|verify} messages.
         * @param message S2C_CITY_MADE message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_MADE, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_MADE message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_MADE
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_MADE;
    }

    /** Properties of a C2S_CITY_MADE_SPEED. */
    interface IC2S_CITY_MADE_SPEED {

        /** C2S_CITY_MADE_SPEED cityId */
        cityId: number;

        /** C2S_CITY_MADE_SPEED itemId */
        itemId: number;

        /** C2S_CITY_MADE_SPEED num */
        num: number;
    }

    /** Represents a C2S_CITY_MADE_SPEED. */
    class C2S_CITY_MADE_SPEED implements IC2S_CITY_MADE_SPEED {

        /**
         * Constructs a new C2S_CITY_MADE_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_MADE_SPEED);

        /** C2S_CITY_MADE_SPEED cityId. */
        public cityId: number;

        /** C2S_CITY_MADE_SPEED itemId. */
        public itemId: number;

        /** C2S_CITY_MADE_SPEED num. */
        public num: number;

        /**
         * Encodes the specified C2S_CITY_MADE_SPEED message. Does not implicitly {@link gameProto.C2S_CITY_MADE_SPEED.verify|verify} messages.
         * @param message C2S_CITY_MADE_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_MADE_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_MADE_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_MADE_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_MADE_SPEED;
    }

    /** Properties of a S2C_CITY_MADE_SPEED. */
    interface IS2C_CITY_MADE_SPEED {

        /** S2C_CITY_MADE_SPEED playerMadeInfo */
        playerMadeInfo?: (gameProto.IPlayerMadeInfo[]|null);
    }

    /** Represents a S2C_CITY_MADE_SPEED. */
    class S2C_CITY_MADE_SPEED implements IS2C_CITY_MADE_SPEED {

        /**
         * Constructs a new S2C_CITY_MADE_SPEED.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_MADE_SPEED);

        /** S2C_CITY_MADE_SPEED playerMadeInfo. */
        public playerMadeInfo: gameProto.IPlayerMadeInfo[];

        /**
         * Encodes the specified S2C_CITY_MADE_SPEED message. Does not implicitly {@link gameProto.S2C_CITY_MADE_SPEED.verify|verify} messages.
         * @param message S2C_CITY_MADE_SPEED message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_MADE_SPEED, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_MADE_SPEED message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_MADE_SPEED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_MADE_SPEED;
    }

    /** Properties of a C2S_CITY_MADE_REWARD. */
    interface IC2S_CITY_MADE_REWARD {

        /** C2S_CITY_MADE_REWARD cityId */
        cityId: number;

        /** C2S_CITY_MADE_REWARD generalId */
        generalId: number;
    }

    /** Represents a C2S_CITY_MADE_REWARD. */
    class C2S_CITY_MADE_REWARD implements IC2S_CITY_MADE_REWARD {

        /**
         * Constructs a new C2S_CITY_MADE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_CITY_MADE_REWARD);

        /** C2S_CITY_MADE_REWARD cityId. */
        public cityId: number;

        /** C2S_CITY_MADE_REWARD generalId. */
        public generalId: number;

        /**
         * Encodes the specified C2S_CITY_MADE_REWARD message. Does not implicitly {@link gameProto.C2S_CITY_MADE_REWARD.verify|verify} messages.
         * @param message C2S_CITY_MADE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_CITY_MADE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_CITY_MADE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_CITY_MADE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_CITY_MADE_REWARD;
    }

    /** Properties of a S2C_CITY_MADE_REWARD. */
    interface IS2C_CITY_MADE_REWARD {

        /** S2C_CITY_MADE_REWARD rewards */
        rewards: string;
    }

    /** Represents a S2C_CITY_MADE_REWARD. */
    class S2C_CITY_MADE_REWARD implements IS2C_CITY_MADE_REWARD {

        /**
         * Constructs a new S2C_CITY_MADE_REWARD.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_CITY_MADE_REWARD);

        /** S2C_CITY_MADE_REWARD rewards. */
        public rewards: string;

        /**
         * Encodes the specified S2C_CITY_MADE_REWARD message. Does not implicitly {@link gameProto.S2C_CITY_MADE_REWARD.verify|verify} messages.
         * @param message S2C_CITY_MADE_REWARD message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_CITY_MADE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_CITY_MADE_REWARD message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_CITY_MADE_REWARD
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_CITY_MADE_REWARD;
    }

    /** Properties of a worshipData. */
    interface IworshipData {

        /** worshipData worshipType */
        worshipType: number;

        /** worshipData playerId */
        playerId?: (number|null);

        /** worshipData rank */
        rank?: (number|null);

        /** worshipData beWorshipCount */
        beWorshipCount?: (number|null);
    }

    /** Represents a worshipData. */
    class worshipData implements IworshipData {

        /**
         * Constructs a new worshipData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IworshipData);

        /** worshipData worshipType. */
        public worshipType: number;

        /** worshipData playerId. */
        public playerId: number;

        /** worshipData rank. */
        public rank: number;

        /** worshipData beWorshipCount. */
        public beWorshipCount: number;

        /**
         * Encodes the specified worshipData message. Does not implicitly {@link gameProto.worshipData.verify|verify} messages.
         * @param message worshipData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IworshipData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a worshipData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns worshipData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.worshipData;
    }

    /** Properties of a C2S_WORSHIP_INFO. */
    interface IC2S_WORSHIP_INFO {

        /** C2S_WORSHIP_INFO worshipType */
        worshipType: number;
    }

    /** Represents a C2S_WORSHIP_INFO. */
    class C2S_WORSHIP_INFO implements IC2S_WORSHIP_INFO {

        /**
         * Constructs a new C2S_WORSHIP_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WORSHIP_INFO);

        /** C2S_WORSHIP_INFO worshipType. */
        public worshipType: number;

        /**
         * Encodes the specified C2S_WORSHIP_INFO message. Does not implicitly {@link gameProto.C2S_WORSHIP_INFO.verify|verify} messages.
         * @param message C2S_WORSHIP_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WORSHIP_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WORSHIP_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WORSHIP_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WORSHIP_INFO;
    }

    /** Properties of a S2C_WORSHIP_INFO. */
    interface IS2C_WORSHIP_INFO {

        /** S2C_WORSHIP_INFO datas */
        datas?: (gameProto.IworshipData[]|null);
    }

    /** Represents a S2C_WORSHIP_INFO. */
    class S2C_WORSHIP_INFO implements IS2C_WORSHIP_INFO {

        /**
         * Constructs a new S2C_WORSHIP_INFO.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORSHIP_INFO);

        /** S2C_WORSHIP_INFO datas. */
        public datas: gameProto.IworshipData[];

        /**
         * Encodes the specified S2C_WORSHIP_INFO message. Does not implicitly {@link gameProto.S2C_WORSHIP_INFO.verify|verify} messages.
         * @param message S2C_WORSHIP_INFO message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORSHIP_INFO, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORSHIP_INFO message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORSHIP_INFO
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORSHIP_INFO;
    }

    /** Properties of a C2S_WORSHIP. */
    interface IC2S_WORSHIP {

        /** C2S_WORSHIP worshipType */
        worshipType: number;

        /** C2S_WORSHIP rank */
        rank?: (number|null);
    }

    /** Represents a C2S_WORSHIP. */
    class C2S_WORSHIP implements IC2S_WORSHIP {

        /**
         * Constructs a new C2S_WORSHIP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IC2S_WORSHIP);

        /** C2S_WORSHIP worshipType. */
        public worshipType: number;

        /** C2S_WORSHIP rank. */
        public rank: number;

        /**
         * Encodes the specified C2S_WORSHIP message. Does not implicitly {@link gameProto.C2S_WORSHIP.verify|verify} messages.
         * @param message C2S_WORSHIP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IC2S_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a C2S_WORSHIP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S_WORSHIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.C2S_WORSHIP;
    }

    /** Properties of a S2C_WORSHIP. */
    interface IS2C_WORSHIP {

        /** S2C_WORSHIP ret */
        ret?: (number|null);

        /** S2C_WORSHIP worshipType */
        worshipType?: (number|null);

        /** S2C_WORSHIP canWorship */
        canWorship?: (boolean|null);

        /** S2C_WORSHIP message */
        message?: (gameProto.IValuesMessage[]|null);
    }

    /** Represents a S2C_WORSHIP. */
    class S2C_WORSHIP implements IS2C_WORSHIP {

        /**
         * Constructs a new S2C_WORSHIP.
         * @param [properties] Properties to set
         */
        constructor(properties?: gameProto.IS2C_WORSHIP);

        /** S2C_WORSHIP ret. */
        public ret: number;

        /** S2C_WORSHIP worshipType. */
        public worshipType: number;

        /** S2C_WORSHIP canWorship. */
        public canWorship: boolean;

        /** S2C_WORSHIP message. */
        public message: gameProto.IValuesMessage[];

        /**
         * Encodes the specified S2C_WORSHIP message. Does not implicitly {@link gameProto.S2C_WORSHIP.verify|verify} messages.
         * @param message S2C_WORSHIP message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gameProto.IS2C_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a S2C_WORSHIP message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C_WORSHIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): gameProto.S2C_WORSHIP;
    }
}
